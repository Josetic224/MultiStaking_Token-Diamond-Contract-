{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialReverts","type":"tuple[]","internalType":"struct VmSafe.PotentialRevert[]","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialRevert","type":"tuple","internalType":"struct VmSafe.PotentialRevert","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"contains","inputs":[{"name":"subject","type":"string","internalType":"string"},{"name":"search","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBroadcast","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VmSafe.BroadcastTxSummary","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployments","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddresses","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getStateDiff","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStateDiffJson","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert((address,bool,bytes))":"d8591eeb","assumeNoRevert((address,bool,bytes)[])":"8a4592cc","assumeNoRevert()":"285b366a","attachDelegation((uint8,bytes32,bytes32,uint64,address))":"14ae3519","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","contains(string,string)":"3fb18aec","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(address,uint64)":"b43aece3","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmit(bool,bool,bool,bool,address,uint64)":"c339d02c","expectEmit(bool,bool,bool,bool,uint64)":"5e1d1c33","expectEmit(uint64)":"4c74a335","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(address,uint64)":"1ff5f952","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes,address,uint64)":"d345fb1f","expectRevert(bytes,uint64)":"4994c273","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectRevert(bytes4,address,uint64)":"b0762d73","expectRevert(bytes4,uint64)":"e45ca72d","expectRevert(uint64)":"4ee38244","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getBroadcast(string,uint64,uint8)":"3dc90cb3","getBroadcasts(string,uint64)":"f2fa4a26","getBroadcasts(string,uint64,uint8)":"f7afe919","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getDeployment(string)":"a8091d97","getDeployment(string,uint64)":"0debd5d6","getDeployments(string,uint64)":"74e133dd","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","getStateDiff()":"80df01cc","getStateDiffJson()":"f54fe009","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,bytes4,bytes)":"08e0c537","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCall(address,uint256,bytes4,bytes)":"e7b36a3d","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,bytes4,bytes)":"2dfba5df","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCallRevert(address,uint256,bytes4,bytes)":"596c8f04","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prank(address,address,bool)":"7d73d042","prank(address,bool)":"a7f8bf5c","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signAndAttachDelegation(address,uint256)":"c7fa7288","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signDelegation(address,uint256)":"5b593c7b","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startPrank(address,address,bool)":"4eb859b5","startPrank(address,bool)":"1cc0b435","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x44bfadcf5a89b8058f80258f2259585c740f9cc45669a0579f4f2753ff2c6354\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bbc366c8b3499d5030e3b2e45bac23770531f2f5243a0e80e3d5a66b6f9a312c\",\"dweb:/ipfs/QmNxDEB3BaVnKzNaWedtdMshhvCEddB1AsdJZcsQx6jdtC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert[]","name":"potentialReverts","type":"tuple[]","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert","name":"potentialRevert","type":"tuple","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"search","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"contains","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcast","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployments","outputs":[{"internalType":"address[]","name":"deployedAddresses","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiff","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiffJson","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"view","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert((address,bool,bytes))":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"assumeNoRevert((address,bool,bytes)[])":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"attachDelegation((uint8,bytes32,bytes32,uint64,address))":{"notice":"Designate the next call as an EIP-7702 transaction"},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"contains(string,string)":{"notice":"Returns true if `search` is found in `subject`, false otherwise."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool,address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with the provided topics."},"expectEmit(bool,bool,bool,bool,uint64)":{"notice":"Expect a given number of logs with the provided topics."},"expectEmit(uint64)":{"notice":"Expect a given number of logs with all topic and data checks enabled."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"expectRevert(bytes,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectRevert(bytes4,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"expectRevert(bytes4,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"expectRevert(uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBroadcast(string,uint64,uint8)":{"notice":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`."},"getBroadcasts(string,uint64)":{"notice":"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getBroadcasts(string,uint64,uint8)":{"notice":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployment(string)":{"notice":"Returns the most recent deployment for the current `chainId`."},"getDeployment(string,uint64)":{"notice":"Returns the most recent deployment for the given contract on `chainId`"},"getDeployments(string,uint64)":{"notice":"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getStateDiff()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session."},"getStateDiffJson()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,bytes4,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCall(address,uint256,bytes4,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,bytes4,bytes)":{"notice":"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCallRevert(address,uint256,bytes4,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signAndAttachDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization for delegation"},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x44bfadcf5a89b8058f80258f2259585c740f9cc45669a0579f4f2753ff2c6354","urls":["bzz-raw://bbc366c8b3499d5030e3b2e45bac23770531f2f5243a0e80e3d5a66b6f9a312c","dweb:/ipfs/QmNxDEB3BaVnKzNaWedtdMshhvCEddB1AsdJZcsQx6jdtC"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":20756,"exportedSymbols":{"Vm":[20755],"VmSafe":[19738]},"nodeType":"SourceUnit","src":"117:117913:31","nodes":[{"id":15977,"nodeType":"PragmaDirective","src":"117:31:31","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":15978,"nodeType":"PragmaDirective","src":"149:33:31","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":19738,"nodeType":"ContractDefinition","src":"409:92473:31","nodes":[{"id":15986,"nodeType":"EnumDefinition","src":"529:533:31","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":15980,"nodeType":"StructuredDocumentation","src":"432:92:31","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":15981,"name":"None","nameLocation":"610:4:31","nodeType":"EnumValue","src":"610:4:31"},{"id":15982,"name":"Broadcast","nameLocation":"714:9:31","nodeType":"EnumValue","src":"714:9:31"},{"id":15983,"name":"RecurrentBroadcast","nameLocation":"829:18:31","nodeType":"EnumValue","src":"829:18:31"},{"id":15984,"name":"Prank","nameLocation":"939:5:31","nodeType":"EnumValue","src":"939:5:31"},{"id":15985,"name":"RecurrentPrank","nameLocation":"1042:14:31","nodeType":"EnumValue","src":"1042:14:31"}],"name":"CallerMode","nameLocation":"534:10:31"},{"id":15999,"nodeType":"EnumDefinition","src":"1118:791:31","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":15987,"nodeType":"StructuredDocumentation","src":"1068:45:31","text":"The kind of account access that occurred."},"members":[{"id":15988,"name":"Call","nameLocation":"1186:4:31","nodeType":"EnumValue","src":"1186:4:31"},{"id":15989,"name":"DelegateCall","nameLocation":"1252:12:31","nodeType":"EnumValue","src":"1252:12:31"},{"id":15990,"name":"CallCode","nameLocation":"1322:8:31","nodeType":"EnumValue","src":"1322:8:31"},{"id":15991,"name":"StaticCall","nameLocation":"1390:10:31","nodeType":"EnumValue","src":"1390:10:31"},{"id":15992,"name":"Create","nameLocation":"1446:6:31","nodeType":"EnumValue","src":"1446:6:31"},{"id":15993,"name":"SelfDestruct","nameLocation":"1505:12:31","nodeType":"EnumValue","src":"1505:12:31"},{"id":15994,"name":"Resume","nameLocation":"1644:6:31","nodeType":"EnumValue","src":"1644:6:31"},{"id":15995,"name":"Balance","nameLocation":"1703:7:31","nodeType":"EnumValue","src":"1703:7:31"},{"id":15996,"name":"Extcodesize","nameLocation":"1764:11:31","nodeType":"EnumValue","src":"1764:11:31"},{"id":15997,"name":"Extcodehash","nameLocation":"1829:11:31","nodeType":"EnumValue","src":"1829:11:31"},{"id":15998,"name":"Extcodecopy","nameLocation":"1892:11:31","nodeType":"EnumValue","src":"1892:11:31"}],"name":"AccountAccessKind","nameLocation":"1123:17:31"},{"id":16010,"nodeType":"EnumDefinition","src":"1949:683:31","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":16000,"nodeType":"StructuredDocumentation","src":"1915:29:31","text":"Forge execution contexts."},"members":[{"id":16001,"name":"TestGroup","nameLocation":"2047:9:31","nodeType":"EnumValue","src":"2047:9:31"},{"id":16002,"name":"Test","nameLocation":"2109:4:31","nodeType":"EnumValue","src":"2109:4:31"},{"id":16003,"name":"Coverage","nameLocation":"2170:8:31","nodeType":"EnumValue","src":"2170:8:31"},{"id":16004,"name":"Snapshot","nameLocation":"2235:8:31","nodeType":"EnumValue","src":"2235:8:31"},{"id":16005,"name":"ScriptGroup","nameLocation":"2327:11:31","nodeType":"EnumValue","src":"2327:11:31"},{"id":16006,"name":"ScriptDryRun","nameLocation":"2393:12:31","nodeType":"EnumValue","src":"2393:12:31"},{"id":16007,"name":"ScriptBroadcast","nameLocation":"2472:15:31","nodeType":"EnumValue","src":"2472:15:31"},{"id":16008,"name":"ScriptResume","nameLocation":"2551:12:31","nodeType":"EnumValue","src":"2551:12:31"},{"id":16009,"name":"Unknown","nameLocation":"2619:7:31","nodeType":"EnumValue","src":"2619:7:31"}],"name":"ForgeContext","nameLocation":"1954:12:31"},{"id":16015,"nodeType":"EnumDefinition","src":"2696:208:31","nodes":[],"canonicalName":"VmSafe.BroadcastTxType","documentation":{"id":16011,"nodeType":"StructuredDocumentation","src":"2638:53:31","text":"The transaction type (`txType`) of the broadcast."},"members":[{"id":16012,"name":"Call","nameLocation":"2770:4:31","nodeType":"EnumValue","src":"2770:4:31"},{"id":16013,"name":"Create","nameLocation":"2829:6:31","nodeType":"EnumValue","src":"2829:6:31"},{"id":16014,"name":"Create2","nameLocation":"2891:7:31","nodeType":"EnumValue","src":"2891:7:31"}],"name":"BroadcastTxType","nameLocation":"2701:15:31"},{"id":16024,"nodeType":"StructDefinition","src":"2966:237:31","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":16016,"nodeType":"StructuredDocumentation","src":"2910:51:31","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":16019,"mutability":"mutable","name":"topics","nameLocation":"3064:6:31","nodeType":"VariableDeclaration","scope":16024,"src":"3054:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3054:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16018,"nodeType":"ArrayTypeName","src":"3054:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16021,"mutability":"mutable","name":"data","nameLocation":"3122:4:31","nodeType":"VariableDeclaration","scope":16024,"src":"3116:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16020,"name":"bytes","nodeType":"ElementaryTypeName","src":"3116:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16023,"mutability":"mutable","name":"emitter","nameLocation":"3189:7:31","nodeType":"VariableDeclaration","scope":16024,"src":"3181:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16022,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2973:3:31","scope":19738,"visibility":"public"},{"id":16030,"nodeType":"StructDefinition","src":"3272:119:31","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":16025,"nodeType":"StructuredDocumentation","src":"3209:58:31","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":16027,"mutability":"mutable","name":"key","nameLocation":"3337:3:31","nodeType":"VariableDeclaration","scope":16030,"src":"3330:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16026,"name":"string","nodeType":"ElementaryTypeName","src":"3330:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16029,"mutability":"mutable","name":"url","nameLocation":"3381:3:31","nodeType":"VariableDeclaration","scope":16030,"src":"3374:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16028,"name":"string","nodeType":"ElementaryTypeName","src":"3374:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3279:3:31","scope":19738,"visibility":"public"},{"id":16051,"nodeType":"StructDefinition","src":"3451:615:31","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":16031,"nodeType":"StructuredDocumentation","src":"3397:49:31","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":16033,"mutability":"mutable","name":"emitter","nameLocation":"3532:7:31","nodeType":"VariableDeclaration","scope":16051,"src":"3524:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16032,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16036,"mutability":"mutable","name":"topics","nameLocation":"3626:6:31","nodeType":"VariableDeclaration","scope":16051,"src":"3616:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16035,"nodeType":"ArrayTypeName","src":"3616:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16038,"mutability":"mutable","name":"data","nameLocation":"3684:4:31","nodeType":"VariableDeclaration","scope":16051,"src":"3678:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16037,"name":"bytes","nodeType":"ElementaryTypeName","src":"3678:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16040,"mutability":"mutable","name":"blockHash","nameLocation":"3733:9:31","nodeType":"VariableDeclaration","scope":16051,"src":"3725:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16042,"mutability":"mutable","name":"blockNumber","nameLocation":"3788:11:31","nodeType":"VariableDeclaration","scope":16051,"src":"3781:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16041,"name":"uint64","nodeType":"ElementaryTypeName","src":"3781:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16044,"mutability":"mutable","name":"transactionHash","nameLocation":"3850:15:31","nodeType":"VariableDeclaration","scope":16051,"src":"3842:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3842:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16046,"mutability":"mutable","name":"transactionIndex","nameLocation":"3929:16:31","nodeType":"VariableDeclaration","scope":16051,"src":"3922:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16045,"name":"uint64","nodeType":"ElementaryTypeName","src":"3922:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16048,"mutability":"mutable","name":"logIndex","nameLocation":"3989:8:31","nodeType":"VariableDeclaration","scope":16051,"src":"3981:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16047,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16050,"mutability":"mutable","name":"removed","nameLocation":"4052:7:31","nodeType":"VariableDeclaration","scope":16051,"src":"4047:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16049,"name":"bool","nodeType":"ElementaryTypeName","src":"4047:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3458:10:31","scope":19738,"visibility":"public"},{"id":16063,"nodeType":"StructDefinition","src":"4142:334:31","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":16052,"nodeType":"StructuredDocumentation","src":"4072:65:31","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":16054,"mutability":"mutable","name":"errorMessage","nameLocation":"4213:12:31","nodeType":"VariableDeclaration","scope":16063,"src":"4206:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16053,"name":"string","nodeType":"ElementaryTypeName","src":"4206:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16056,"mutability":"mutable","name":"path","nameLocation":"4276:4:31","nodeType":"VariableDeclaration","scope":16063,"src":"4269:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16055,"name":"string","nodeType":"ElementaryTypeName","src":"4269:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16058,"mutability":"mutable","name":"depth","nameLocation":"4332:5:31","nodeType":"VariableDeclaration","scope":16063,"src":"4325:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16057,"name":"uint64","nodeType":"ElementaryTypeName","src":"4325:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16060,"mutability":"mutable","name":"isDir","nameLocation":"4397:5:31","nodeType":"VariableDeclaration","scope":16063,"src":"4392:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16059,"name":"bool","nodeType":"ElementaryTypeName","src":"4392:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16062,"mutability":"mutable","name":"isSymlink","nameLocation":"4460:9:31","nodeType":"VariableDeclaration","scope":16063,"src":"4455:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16061,"name":"bool","nodeType":"ElementaryTypeName","src":"4455:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"4149:8:31","scope":19738,"visibility":"public"},{"id":16079,"nodeType":"StructDefinition","src":"4706:599:31","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":16064,"nodeType":"StructuredDocumentation","src":"4482:219:31","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":16066,"mutability":"mutable","name":"isDir","nameLocation":"4792:5:31","nodeType":"VariableDeclaration","scope":16079,"src":"4787:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16065,"name":"bool","nodeType":"ElementaryTypeName","src":"4787:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16068,"mutability":"mutable","name":"isSymlink","nameLocation":"4863:9:31","nodeType":"VariableDeclaration","scope":16079,"src":"4858:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16067,"name":"bool","nodeType":"ElementaryTypeName","src":"4858:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16070,"mutability":"mutable","name":"length","nameLocation":"4955:6:31","nodeType":"VariableDeclaration","scope":16079,"src":"4947:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16072,"mutability":"mutable","name":"readOnly","nameLocation":"5046:8:31","nodeType":"VariableDeclaration","scope":16079,"src":"5041:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16071,"name":"bool","nodeType":"ElementaryTypeName","src":"5041:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16074,"mutability":"mutable","name":"modified","nameLocation":"5135:8:31","nodeType":"VariableDeclaration","scope":16079,"src":"5127:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16073,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16076,"mutability":"mutable","name":"accessed","nameLocation":"5211:8:31","nodeType":"VariableDeclaration","scope":16079,"src":"5203:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16075,"name":"uint256","nodeType":"ElementaryTypeName","src":"5203:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16078,"mutability":"mutable","name":"created","nameLocation":"5291:7:31","nodeType":"VariableDeclaration","scope":16079,"src":"5283:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16077,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4713:10:31","scope":19738,"visibility":"public"},{"id":16089,"nodeType":"StructDefinition","src":"5359:277:31","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":16080,"nodeType":"StructuredDocumentation","src":"5311:43:31","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":16082,"mutability":"mutable","name":"addr","nameLocation":"5424:4:31","nodeType":"VariableDeclaration","scope":16089,"src":"5416:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16081,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16084,"mutability":"mutable","name":"publicKeyX","nameLocation":"5486:10:31","nodeType":"VariableDeclaration","scope":16089,"src":"5478:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16083,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16086,"mutability":"mutable","name":"publicKeyY","nameLocation":"5554:10:31","nodeType":"VariableDeclaration","scope":16089,"src":"5546:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5546:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16088,"mutability":"mutable","name":"privateKey","nameLocation":"5619:10:31","nodeType":"VariableDeclaration","scope":16089,"src":"5611:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5366:6:31","scope":19738,"visibility":"public"},{"id":16097,"nodeType":"StructDefinition","src":"5681:213:31","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":16090,"nodeType":"StructuredDocumentation","src":"5642:34:31","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":16092,"mutability":"mutable","name":"exitCode","nameLocation":"5752:8:31","nodeType":"VariableDeclaration","scope":16097,"src":"5746:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":16091,"name":"int32","nodeType":"ElementaryTypeName","src":"5746:5:31","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":16094,"mutability":"mutable","name":"stdout","nameLocation":"5829:6:31","nodeType":"VariableDeclaration","scope":16097,"src":"5823:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16093,"name":"bytes","nodeType":"ElementaryTypeName","src":"5823:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16096,"mutability":"mutable","name":"stderr","nameLocation":"5881:6:31","nodeType":"VariableDeclaration","scope":16097,"src":"5875:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16095,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5688:9:31","scope":19738,"visibility":"public"},{"id":16103,"nodeType":"StructDefinition","src":"5943:184:31","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":16098,"nodeType":"StructuredDocumentation","src":"5900:38:31","text":"Information on the chain and fork."},"members":[{"constant":false,"id":16100,"mutability":"mutable","name":"forkId","nameLocation":"6044:6:31","nodeType":"VariableDeclaration","scope":16103,"src":"6036:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16099,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16102,"mutability":"mutable","name":"chainId","nameLocation":"6113:7:31","nodeType":"VariableDeclaration","scope":16103,"src":"6105:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16101,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5950:9:31","scope":19738,"visibility":"public"},{"id":16135,"nodeType":"StructDefinition","src":"6188:1837:31","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":16104,"nodeType":"StructuredDocumentation","src":"6133:50:31","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":16107,"mutability":"mutable","name":"chainInfo","nameLocation":"6280:9:31","nodeType":"VariableDeclaration","scope":16135,"src":"6270:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$16103_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":16106,"nodeType":"UserDefinedTypeName","pathNode":{"id":16105,"name":"ChainInfo","nameLocations":["6270:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":16103,"src":"6270:9:31"},"referencedDeclaration":16103,"src":"6270:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$16103_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":16110,"mutability":"mutable","name":"kind","nameLocation":"6743:4:31","nodeType":"VariableDeclaration","scope":16135,"src":"6725:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15999","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":16109,"nodeType":"UserDefinedTypeName","pathNode":{"id":16108,"name":"AccountAccessKind","nameLocations":["6725:17:31"],"nodeType":"IdentifierPath","referencedDeclaration":15999,"src":"6725:17:31"},"referencedDeclaration":15999,"src":"6725:17:31","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15999","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":16112,"mutability":"mutable","name":"account","nameLocation":"6920:7:31","nodeType":"VariableDeclaration","scope":16135,"src":"6912:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16111,"name":"address","nodeType":"ElementaryTypeName","src":"6912:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16114,"mutability":"mutable","name":"accessor","nameLocation":"6983:8:31","nodeType":"VariableDeclaration","scope":16135,"src":"6975:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16113,"name":"address","nodeType":"ElementaryTypeName","src":"6975:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16116,"mutability":"mutable","name":"initialized","nameLocation":"7194:11:31","nodeType":"VariableDeclaration","scope":16135,"src":"7189:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16115,"name":"bool","nodeType":"ElementaryTypeName","src":"7189:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16118,"mutability":"mutable","name":"oldBalance","nameLocation":"7280:10:31","nodeType":"VariableDeclaration","scope":16135,"src":"7272:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16117,"name":"uint256","nodeType":"ElementaryTypeName","src":"7272:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16120,"mutability":"mutable","name":"newBalance","nameLocation":"7455:10:31","nodeType":"VariableDeclaration","scope":16135,"src":"7447:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16119,"name":"uint256","nodeType":"ElementaryTypeName","src":"7447:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16122,"mutability":"mutable","name":"deployedCode","nameLocation":"7532:12:31","nodeType":"VariableDeclaration","scope":16135,"src":"7526:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16121,"name":"bytes","nodeType":"ElementaryTypeName","src":"7526:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16124,"mutability":"mutable","name":"value","nameLocation":"7616:5:31","nodeType":"VariableDeclaration","scope":16135,"src":"7608:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16123,"name":"uint256","nodeType":"ElementaryTypeName","src":"7608:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16126,"mutability":"mutable","name":"data","nameLocation":"7690:4:31","nodeType":"VariableDeclaration","scope":16135,"src":"7684:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16125,"name":"bytes","nodeType":"ElementaryTypeName","src":"7684:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16128,"mutability":"mutable","name":"reverted","nameLocation":"7785:8:31","nodeType":"VariableDeclaration","scope":16135,"src":"7780:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16127,"name":"bool","nodeType":"ElementaryTypeName","src":"7780:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16132,"mutability":"mutable","name":"storageAccesses","nameLocation":"7907:15:31","nodeType":"VariableDeclaration","scope":16135,"src":"7891:31:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$16149_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":16130,"nodeType":"UserDefinedTypeName","pathNode":{"id":16129,"name":"StorageAccess","nameLocations":["7891:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":16149,"src":"7891:13:31"},"referencedDeclaration":16149,"src":"7891:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$16149_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":16131,"nodeType":"ArrayTypeName","src":"7891:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$16149_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":16134,"mutability":"mutable","name":"depth","nameLocation":"8013:5:31","nodeType":"VariableDeclaration","scope":16135,"src":"8006:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16133,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"6195:13:31","scope":19738,"visibility":"public"},{"id":16149,"nodeType":"StructDefinition","src":"8087:425:31","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":16136,"nodeType":"StructuredDocumentation","src":"8031:51:31","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":16138,"mutability":"mutable","name":"account","nameLocation":"8177:7:31","nodeType":"VariableDeclaration","scope":16149,"src":"8169:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16137,"name":"address","nodeType":"ElementaryTypeName","src":"8169:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16140,"mutability":"mutable","name":"slot","nameLocation":"8241:4:31","nodeType":"VariableDeclaration","scope":16149,"src":"8233:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8233:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16142,"mutability":"mutable","name":"isWrite","nameLocation":"8298:7:31","nodeType":"VariableDeclaration","scope":16149,"src":"8293:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16141,"name":"bool","nodeType":"ElementaryTypeName","src":"8293:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16144,"mutability":"mutable","name":"previousValue","nameLocation":"8366:13:31","nodeType":"VariableDeclaration","scope":16149,"src":"8358:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8358:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16146,"mutability":"mutable","name":"newValue","nameLocation":"8435:8:31","nodeType":"VariableDeclaration","scope":16149,"src":"8427:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8427:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16148,"mutability":"mutable","name":"reverted","nameLocation":"8497:8:31","nodeType":"VariableDeclaration","scope":16149,"src":"8492:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16147,"name":"bool","nodeType":"ElementaryTypeName","src":"8492:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"8094:13:31","scope":19738,"visibility":"public"},{"id":16161,"nodeType":"StructDefinition","src":"8563:458:31","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":16150,"nodeType":"StructuredDocumentation","src":"8518:40:31","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":16152,"mutability":"mutable","name":"gasLimit","nameLocation":"8629:8:31","nodeType":"VariableDeclaration","scope":16161,"src":"8622:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16151,"name":"uint64","nodeType":"ElementaryTypeName","src":"8622:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16154,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8685:12:31","nodeType":"VariableDeclaration","scope":16161,"src":"8678:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16153,"name":"uint64","nodeType":"ElementaryTypeName","src":"8678:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16156,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8866:13:31","nodeType":"VariableDeclaration","scope":16161,"src":"8859:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16155,"name":"uint64","nodeType":"ElementaryTypeName","src":"8859:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16158,"mutability":"mutable","name":"gasRefunded","nameLocation":"8934:11:31","nodeType":"VariableDeclaration","scope":16161,"src":"8928:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":16157,"name":"int64","nodeType":"ElementaryTypeName","src":"8928:5:31","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":16160,"mutability":"mutable","name":"gasRemaining","nameLocation":"9002:12:31","nodeType":"VariableDeclaration","scope":16161,"src":"8995:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16159,"name":"uint64","nodeType":"ElementaryTypeName","src":"8995:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8570:3:31","scope":19738,"visibility":"public"},{"id":16176,"nodeType":"StructDefinition","src":"9084:848:31","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":16162,"nodeType":"StructuredDocumentation","src":"9027:52:31","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":16165,"mutability":"mutable","name":"stack","nameLocation":"9313:5:31","nodeType":"VariableDeclaration","scope":16176,"src":"9303:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16163,"name":"uint256","nodeType":"ElementaryTypeName","src":"9303:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16164,"nodeType":"ArrayTypeName","src":"9303:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16167,"mutability":"mutable","name":"memoryInput","nameLocation":"9617:11:31","nodeType":"VariableDeclaration","scope":16176,"src":"9611:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16166,"name":"bytes","nodeType":"ElementaryTypeName","src":"9611:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16169,"mutability":"mutable","name":"opcode","nameLocation":"9685:6:31","nodeType":"VariableDeclaration","scope":16176,"src":"9679:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16168,"name":"uint8","nodeType":"ElementaryTypeName","src":"9679:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16171,"mutability":"mutable","name":"depth","nameLocation":"9747:5:31","nodeType":"VariableDeclaration","scope":16176,"src":"9740:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16170,"name":"uint64","nodeType":"ElementaryTypeName","src":"9740:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16173,"mutability":"mutable","name":"isOutOfGas","nameLocation":"9825:10:31","nodeType":"VariableDeclaration","scope":16176,"src":"9820:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16172,"name":"bool","nodeType":"ElementaryTypeName","src":"9820:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16175,"mutability":"mutable","name":"contractAddr","nameLocation":"9913:12:31","nodeType":"VariableDeclaration","scope":16176,"src":"9905:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16174,"name":"address","nodeType":"ElementaryTypeName","src":"9905:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"9091:9:31","scope":19738,"visibility":"public"},{"id":16189,"nodeType":"StructDefinition","src":"9992:600:31","nodes":[],"canonicalName":"VmSafe.BroadcastTxSummary","documentation":{"id":16177,"nodeType":"StructuredDocumentation","src":"9938:49:31","text":"Represents a transaction's broadcast details."},"members":[{"constant":false,"id":16179,"mutability":"mutable","name":"txHash","nameLocation":"10096:6:31","nodeType":"VariableDeclaration","scope":16189,"src":"10088:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10088:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16182,"mutability":"mutable","name":"txType","nameLocation":"10201:6:31","nodeType":"VariableDeclaration","scope":16189,"src":"10185:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$16015","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":16181,"nodeType":"UserDefinedTypeName","pathNode":{"id":16180,"name":"BroadcastTxType","nameLocations":["10185:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":16015,"src":"10185:15:31"},"referencedDeclaration":16015,"src":"10185:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$16015","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"},{"constant":false,"id":16184,"mutability":"mutable","name":"contractAddress","nameLocation":"10387:15:31","nodeType":"VariableDeclaration","scope":16189,"src":"10379:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16183,"name":"address","nodeType":"ElementaryTypeName","src":"10379:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16186,"mutability":"mutable","name":"blockNumber","nameLocation":"10474:11:31","nodeType":"VariableDeclaration","scope":16189,"src":"10467:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16185,"name":"uint64","nodeType":"ElementaryTypeName","src":"10467:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16188,"mutability":"mutable","name":"success","nameLocation":"10578:7:31","nodeType":"VariableDeclaration","scope":16189,"src":"10573:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16187,"name":"bool","nodeType":"ElementaryTypeName","src":"10573:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BroadcastTxSummary","nameLocation":"9999:18:31","scope":19738,"visibility":"public"},{"id":16201,"nodeType":"StructDefinition","src":"10703:605:31","nodes":[],"canonicalName":"VmSafe.SignedDelegation","documentation":{"id":16190,"nodeType":"StructuredDocumentation","src":"10598:100:31","text":"Holds a signed EIP-7702 authorization for an authority account to delegate to an implementation."},"members":[{"constant":false,"id":16192,"mutability":"mutable","name":"v","nameLocation":"10814:1:31","nodeType":"VariableDeclaration","scope":16201,"src":"10808:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16191,"name":"uint8","nodeType":"ElementaryTypeName","src":"10808:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16194,"mutability":"mutable","name":"r","nameLocation":"10877:1:31","nodeType":"VariableDeclaration","scope":16201,"src":"10869:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10869:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16196,"mutability":"mutable","name":"s","nameLocation":"10941:1:31","nodeType":"VariableDeclaration","scope":16201,"src":"10933:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10933:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16198,"mutability":"mutable","name":"nonce","nameLocation":"11113:5:31","nodeType":"VariableDeclaration","scope":16201,"src":"11106:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16197,"name":"uint64","nodeType":"ElementaryTypeName","src":"11106:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16200,"mutability":"mutable","name":"implementation","nameLocation":"11287:14:31","nodeType":"VariableDeclaration","scope":16201,"src":"11279:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16199,"name":"address","nodeType":"ElementaryTypeName","src":"11279:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SignedDelegation","nameLocation":"10710:16:31","scope":19738,"visibility":"public"},{"id":16209,"nodeType":"StructDefinition","src":"11557:373:31","nodes":[],"canonicalName":"VmSafe.PotentialRevert","documentation":{"id":16202,"nodeType":"StructuredDocumentation","src":"11314:238:31","text":"Represents a \"potential\" revert reason from a single subsequent call when using `vm.assumeNoReverts`.\n Reverts that match will result in a FOUNDRY::ASSUME rejection, whereas unmatched reverts will be surfaced\n as normal."},"members":[{"constant":false,"id":16204,"mutability":"mutable","name":"reverter","nameLocation":"11693:8:31","nodeType":"VariableDeclaration","scope":16209,"src":"11685:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16203,"name":"address","nodeType":"ElementaryTypeName","src":"11685:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16206,"mutability":"mutable","name":"partialMatch","nameLocation":"11829:12:31","nodeType":"VariableDeclaration","scope":16209,"src":"11824:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16205,"name":"bool","nodeType":"ElementaryTypeName","src":"11824:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16208,"mutability":"mutable","name":"revertData","nameLocation":"11913:10:31","nodeType":"VariableDeclaration","scope":16209,"src":"11907:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16207,"name":"bytes","nodeType":"ElementaryTypeName","src":"11907:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PotentialRevert","nameLocation":"11564:15:31","scope":19738,"visibility":"public"},{"id":16218,"nodeType":"FunctionDefinition","src":"12073:91:31","nodes":[],"documentation":{"id":16210,"nodeType":"StructuredDocumentation","src":"11969:99:31","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12082:12:31","parameters":{"id":16213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16212,"mutability":"mutable","name":"walletLabel","nameLocation":"12111:11:31","nodeType":"VariableDeclaration","scope":16218,"src":"12095:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16211,"name":"string","nodeType":"ElementaryTypeName","src":"12095:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12094:29:31"},"returnParameters":{"id":16217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16216,"mutability":"mutable","name":"wallet","nameLocation":"12156:6:31","nodeType":"VariableDeclaration","scope":16218,"src":"12142:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16215,"nodeType":"UserDefinedTypeName","pathNode":{"id":16214,"name":"Wallet","nameLocations":["12142:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":16089,"src":"12142:6:31"},"referencedDeclaration":16089,"src":"12142:6:31","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12141:22:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16227,"nodeType":"FunctionDefinition","src":"12242:82:31","nodes":[],"documentation":{"id":16219,"nodeType":"StructuredDocumentation","src":"12170:67:31","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12251:12:31","parameters":{"id":16222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16221,"mutability":"mutable","name":"privateKey","nameLocation":"12272:10:31","nodeType":"VariableDeclaration","scope":16227,"src":"12264:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12264:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12263:20:31"},"returnParameters":{"id":16226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16225,"mutability":"mutable","name":"wallet","nameLocation":"12316:6:31","nodeType":"VariableDeclaration","scope":16227,"src":"12302:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16224,"nodeType":"UserDefinedTypeName","pathNode":{"id":16223,"name":"Wallet","nameLocations":["12302:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":16089,"src":"12302:6:31"},"referencedDeclaration":16089,"src":"12302:6:31","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12301:22:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16238,"nodeType":"FunctionDefinition","src":"12438:111:31","nodes":[],"documentation":{"id":16228,"nodeType":"StructuredDocumentation","src":"12330:103:31","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12447:12:31","parameters":{"id":16233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16230,"mutability":"mutable","name":"privateKey","nameLocation":"12468:10:31","nodeType":"VariableDeclaration","scope":16238,"src":"12460:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16229,"name":"uint256","nodeType":"ElementaryTypeName","src":"12460:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16232,"mutability":"mutable","name":"walletLabel","nameLocation":"12496:11:31","nodeType":"VariableDeclaration","scope":16238,"src":"12480:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16231,"name":"string","nodeType":"ElementaryTypeName","src":"12480:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12459:49:31"},"returnParameters":{"id":16237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16236,"mutability":"mutable","name":"wallet","nameLocation":"12541:6:31","nodeType":"VariableDeclaration","scope":16238,"src":"12527:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16235,"nodeType":"UserDefinedTypeName","pathNode":{"id":16234,"name":"Wallet","nameLocations":["12527:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":16089,"src":"12527:6:31"},"referencedDeclaration":16089,"src":"12527:6:31","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12526:22:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16248,"nodeType":"FunctionDefinition","src":"12697:102:31","nodes":[],"documentation":{"id":16239,"nodeType":"StructuredDocumentation","src":"12555:137:31","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"12706:9:31","parameters":{"id":16244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16241,"mutability":"mutable","name":"mnemonic","nameLocation":"12732:8:31","nodeType":"VariableDeclaration","scope":16248,"src":"12716:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16240,"name":"string","nodeType":"ElementaryTypeName","src":"12716:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16243,"mutability":"mutable","name":"index","nameLocation":"12749:5:31","nodeType":"VariableDeclaration","scope":16248,"src":"12742:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16242,"name":"uint32","nodeType":"ElementaryTypeName","src":"12742:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12715:40:31"},"returnParameters":{"id":16247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16246,"mutability":"mutable","name":"privateKey","nameLocation":"12787:10:31","nodeType":"VariableDeclaration","scope":16248,"src":"12779:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16245,"name":"uint256","nodeType":"ElementaryTypeName","src":"12779:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12778:20:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16260,"nodeType":"FunctionDefinition","src":"12928:158:31","nodes":[],"documentation":{"id":16249,"nodeType":"StructuredDocumentation","src":"12805:118:31","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"12937:9:31","parameters":{"id":16256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16251,"mutability":"mutable","name":"mnemonic","nameLocation":"12963:8:31","nodeType":"VariableDeclaration","scope":16260,"src":"12947:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16250,"name":"string","nodeType":"ElementaryTypeName","src":"12947:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16253,"mutability":"mutable","name":"derivationPath","nameLocation":"12989:14:31","nodeType":"VariableDeclaration","scope":16260,"src":"12973:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16252,"name":"string","nodeType":"ElementaryTypeName","src":"12973:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16255,"mutability":"mutable","name":"index","nameLocation":"13012:5:31","nodeType":"VariableDeclaration","scope":16260,"src":"13005:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16254,"name":"uint32","nodeType":"ElementaryTypeName","src":"13005:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12946:72:31"},"returnParameters":{"id":16259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16258,"mutability":"mutable","name":"privateKey","nameLocation":"13074:10:31","nodeType":"VariableDeclaration","scope":16260,"src":"13066:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16257,"name":"uint256","nodeType":"ElementaryTypeName","src":"13066:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13065:20:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16272,"nodeType":"FunctionDefinition","src":"13260:152:31","nodes":[],"documentation":{"id":16261,"nodeType":"StructuredDocumentation","src":"13092:163:31","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13269:9:31","parameters":{"id":16268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16263,"mutability":"mutable","name":"mnemonic","nameLocation":"13295:8:31","nodeType":"VariableDeclaration","scope":16272,"src":"13279:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16262,"name":"string","nodeType":"ElementaryTypeName","src":"13279:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16265,"mutability":"mutable","name":"index","nameLocation":"13312:5:31","nodeType":"VariableDeclaration","scope":16272,"src":"13305:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16264,"name":"uint32","nodeType":"ElementaryTypeName","src":"13305:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16267,"mutability":"mutable","name":"language","nameLocation":"13335:8:31","nodeType":"VariableDeclaration","scope":16272,"src":"13319:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16266,"name":"string","nodeType":"ElementaryTypeName","src":"13319:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13278:66:31"},"returnParameters":{"id":16271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16270,"mutability":"mutable","name":"privateKey","nameLocation":"13400:10:31","nodeType":"VariableDeclaration","scope":16272,"src":"13392:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16269,"name":"uint256","nodeType":"ElementaryTypeName","src":"13392:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13391:20:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16286,"nodeType":"FunctionDefinition","src":"13567:184:31","nodes":[],"documentation":{"id":16273,"nodeType":"StructuredDocumentation","src":"13418:144:31","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13576:9:31","parameters":{"id":16282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16275,"mutability":"mutable","name":"mnemonic","nameLocation":"13602:8:31","nodeType":"VariableDeclaration","scope":16286,"src":"13586:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16274,"name":"string","nodeType":"ElementaryTypeName","src":"13586:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16277,"mutability":"mutable","name":"derivationPath","nameLocation":"13628:14:31","nodeType":"VariableDeclaration","scope":16286,"src":"13612:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16276,"name":"string","nodeType":"ElementaryTypeName","src":"13612:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16279,"mutability":"mutable","name":"index","nameLocation":"13651:5:31","nodeType":"VariableDeclaration","scope":16286,"src":"13644:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16278,"name":"uint32","nodeType":"ElementaryTypeName","src":"13644:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16281,"mutability":"mutable","name":"language","nameLocation":"13674:8:31","nodeType":"VariableDeclaration","scope":16286,"src":"13658:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16280,"name":"string","nodeType":"ElementaryTypeName","src":"13658:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13585:98:31"},"returnParameters":{"id":16285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16284,"mutability":"mutable","name":"privateKey","nameLocation":"13739:10:31","nodeType":"VariableDeclaration","scope":16286,"src":"13731:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16283,"name":"uint256","nodeType":"ElementaryTypeName","src":"13731:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13730:20:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16296,"nodeType":"FunctionDefinition","src":"13826:106:31","nodes":[],"documentation":{"id":16287,"nodeType":"StructuredDocumentation","src":"13757:64:31","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"13835:13:31","parameters":{"id":16290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16289,"mutability":"mutable","name":"privateKey","nameLocation":"13857:10:31","nodeType":"VariableDeclaration","scope":16296,"src":"13849:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16288,"name":"uint256","nodeType":"ElementaryTypeName","src":"13849:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13848:20:31"},"returnParameters":{"id":16295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16292,"mutability":"mutable","name":"publicKeyX","nameLocation":"13900:10:31","nodeType":"VariableDeclaration","scope":16296,"src":"13892:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16291,"name":"uint256","nodeType":"ElementaryTypeName","src":"13892:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16294,"mutability":"mutable","name":"publicKeyY","nameLocation":"13920:10:31","nodeType":"VariableDeclaration","scope":16296,"src":"13912:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16293,"name":"uint256","nodeType":"ElementaryTypeName","src":"13912:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13891:40:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16304,"nodeType":"FunctionDefinition","src":"14016:76:31","nodes":[],"documentation":{"id":16297,"nodeType":"StructuredDocumentation","src":"13938:73:31","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"14025:11:31","parameters":{"id":16300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16299,"mutability":"mutable","name":"privateKey","nameLocation":"14045:10:31","nodeType":"VariableDeclaration","scope":16304,"src":"14037:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16298,"name":"uint256","nodeType":"ElementaryTypeName","src":"14037:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14036:20:31"},"returnParameters":{"id":16303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16302,"mutability":"mutable","name":"keyAddr","nameLocation":"14083:7:31","nodeType":"VariableDeclaration","scope":16304,"src":"14075:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16301,"name":"address","nodeType":"ElementaryTypeName","src":"14075:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14074:17:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16317,"nodeType":"FunctionDefinition","src":"14325:155:31","nodes":[],"documentation":{"id":16305,"nodeType":"StructuredDocumentation","src":"14098:222:31","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"14334:12:31","parameters":{"id":16312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16307,"mutability":"mutable","name":"mnemonic","nameLocation":"14363:8:31","nodeType":"VariableDeclaration","scope":16317,"src":"14347:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16306,"name":"string","nodeType":"ElementaryTypeName","src":"14347:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16309,"mutability":"mutable","name":"derivationPath","nameLocation":"14389:14:31","nodeType":"VariableDeclaration","scope":16317,"src":"14373:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16308,"name":"string","nodeType":"ElementaryTypeName","src":"14373:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16311,"mutability":"mutable","name":"count","nameLocation":"14412:5:31","nodeType":"VariableDeclaration","scope":16317,"src":"14405:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16310,"name":"uint32","nodeType":"ElementaryTypeName","src":"14405:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14346:72:31"},"returnParameters":{"id":16316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16315,"mutability":"mutable","name":"keyAddrs","nameLocation":"14470:8:31","nodeType":"VariableDeclaration","scope":16317,"src":"14453:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16313,"name":"address","nodeType":"ElementaryTypeName","src":"14453:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16314,"nodeType":"ArrayTypeName","src":"14453:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14452:27:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16332,"nodeType":"FunctionDefinition","src":"14739:203:31","nodes":[],"documentation":{"id":16318,"nodeType":"StructuredDocumentation","src":"14486:248:31","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"14748:12:31","parameters":{"id":16327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16320,"mutability":"mutable","name":"mnemonic","nameLocation":"14786:8:31","nodeType":"VariableDeclaration","scope":16332,"src":"14770:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16319,"name":"string","nodeType":"ElementaryTypeName","src":"14770:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16322,"mutability":"mutable","name":"derivationPath","nameLocation":"14820:14:31","nodeType":"VariableDeclaration","scope":16332,"src":"14804:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16321,"name":"string","nodeType":"ElementaryTypeName","src":"14804:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16324,"mutability":"mutable","name":"language","nameLocation":"14860:8:31","nodeType":"VariableDeclaration","scope":16332,"src":"14844:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16323,"name":"string","nodeType":"ElementaryTypeName","src":"14844:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16326,"mutability":"mutable","name":"count","nameLocation":"14885:5:31","nodeType":"VariableDeclaration","scope":16332,"src":"14878:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16325,"name":"uint32","nodeType":"ElementaryTypeName","src":"14878:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14760:136:31"},"returnParameters":{"id":16331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16330,"mutability":"mutable","name":"keyAddrs","nameLocation":"14932:8:31","nodeType":"VariableDeclaration","scope":16332,"src":"14915:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16328,"name":"address","nodeType":"ElementaryTypeName","src":"14915:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16329,"nodeType":"ArrayTypeName","src":"14915:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14914:27:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16345,"nodeType":"FunctionDefinition","src":"15221:102:31","nodes":[],"documentation":{"id":16333,"nodeType":"StructuredDocumentation","src":"14948:268:31","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15230:11:31","parameters":{"id":16339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16336,"mutability":"mutable","name":"wallet","nameLocation":"15258:6:31","nodeType":"VariableDeclaration","scope":16345,"src":"15242:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16335,"nodeType":"UserDefinedTypeName","pathNode":{"id":16334,"name":"Wallet","nameLocations":["15242:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":16089,"src":"15242:6:31"},"referencedDeclaration":16089,"src":"15242:6:31","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16338,"mutability":"mutable","name":"digest","nameLocation":"15274:6:31","nodeType":"VariableDeclaration","scope":16345,"src":"15266:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15266:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15241:40:31"},"returnParameters":{"id":16344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16341,"mutability":"mutable","name":"r","nameLocation":"15308:1:31","nodeType":"VariableDeclaration","scope":16345,"src":"15300:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15300:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16343,"mutability":"mutable","name":"vs","nameLocation":"15319:2:31","nodeType":"VariableDeclaration","scope":16345,"src":"15311:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15311:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15299:23:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16357,"nodeType":"FunctionDefinition","src":"15634:103:31","nodes":[],"documentation":{"id":16346,"nodeType":"StructuredDocumentation","src":"15329:300:31","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15643:11:31","parameters":{"id":16351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16348,"mutability":"mutable","name":"privateKey","nameLocation":"15663:10:31","nodeType":"VariableDeclaration","scope":16357,"src":"15655:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16347,"name":"uint256","nodeType":"ElementaryTypeName","src":"15655:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16350,"mutability":"mutable","name":"digest","nameLocation":"15683:6:31","nodeType":"VariableDeclaration","scope":16357,"src":"15675:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15675:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15654:36:31"},"returnParameters":{"id":16356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16353,"mutability":"mutable","name":"r","nameLocation":"15722:1:31","nodeType":"VariableDeclaration","scope":16357,"src":"15714:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15714:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16355,"mutability":"mutable","name":"vs","nameLocation":"15733:2:31","nodeType":"VariableDeclaration","scope":16357,"src":"15725:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15725:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15713:23:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16367,"nodeType":"FunctionDefinition","src":"16413:83:31","nodes":[],"documentation":{"id":16358,"nodeType":"StructuredDocumentation","src":"15743:665:31","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16422:11:31","parameters":{"id":16361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16360,"mutability":"mutable","name":"digest","nameLocation":"16442:6:31","nodeType":"VariableDeclaration","scope":16367,"src":"16434:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16434:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16433:16:31"},"returnParameters":{"id":16366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16363,"mutability":"mutable","name":"r","nameLocation":"16481:1:31","nodeType":"VariableDeclaration","scope":16367,"src":"16473:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16473:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16365,"mutability":"mutable","name":"vs","nameLocation":"16492:2:31","nodeType":"VariableDeclaration","scope":16367,"src":"16484:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16484:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16472:23:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16379,"nodeType":"FunctionDefinition","src":"16910:99:31","nodes":[],"documentation":{"id":16368,"nodeType":"StructuredDocumentation","src":"16502:403:31","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16919:11:31","parameters":{"id":16373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16370,"mutability":"mutable","name":"signer","nameLocation":"16939:6:31","nodeType":"VariableDeclaration","scope":16379,"src":"16931:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16369,"name":"address","nodeType":"ElementaryTypeName","src":"16931:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16372,"mutability":"mutable","name":"digest","nameLocation":"16955:6:31","nodeType":"VariableDeclaration","scope":16379,"src":"16947:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16947:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16930:32:31"},"returnParameters":{"id":16378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16375,"mutability":"mutable","name":"r","nameLocation":"16994:1:31","nodeType":"VariableDeclaration","scope":16379,"src":"16986:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16986:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16377,"mutability":"mutable","name":"vs","nameLocation":"17005:2:31","nodeType":"VariableDeclaration","scope":16379,"src":"16997:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16997:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16985:23:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16391,"nodeType":"FunctionDefinition","src":"17083:99:31","nodes":[],"documentation":{"id":16380,"nodeType":"StructuredDocumentation","src":"17015:63:31","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"17092:8:31","parameters":{"id":16385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16382,"mutability":"mutable","name":"privateKey","nameLocation":"17109:10:31","nodeType":"VariableDeclaration","scope":16391,"src":"17101:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16381,"name":"uint256","nodeType":"ElementaryTypeName","src":"17101:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16384,"mutability":"mutable","name":"digest","nameLocation":"17129:6:31","nodeType":"VariableDeclaration","scope":16391,"src":"17121:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17121:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17100:36:31"},"returnParameters":{"id":16390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16387,"mutability":"mutable","name":"r","nameLocation":"17168:1:31","nodeType":"VariableDeclaration","scope":16391,"src":"17160:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17160:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16389,"mutability":"mutable","name":"s","nameLocation":"17179:1:31","nodeType":"VariableDeclaration","scope":16391,"src":"17171:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17171:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17159:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16406,"nodeType":"FunctionDefinition","src":"17224:103:31","nodes":[],"documentation":{"id":16392,"nodeType":"StructuredDocumentation","src":"17188:31:31","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17233:4:31","parameters":{"id":16398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16395,"mutability":"mutable","name":"wallet","nameLocation":"17254:6:31","nodeType":"VariableDeclaration","scope":16406,"src":"17238:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16394,"nodeType":"UserDefinedTypeName","pathNode":{"id":16393,"name":"Wallet","nameLocations":["17238:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":16089,"src":"17238:6:31"},"referencedDeclaration":16089,"src":"17238:6:31","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16397,"mutability":"mutable","name":"digest","nameLocation":"17270:6:31","nodeType":"VariableDeclaration","scope":16406,"src":"17262:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17262:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17237:40:31"},"returnParameters":{"id":16405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16400,"mutability":"mutable","name":"v","nameLocation":"17302:1:31","nodeType":"VariableDeclaration","scope":16406,"src":"17296:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16399,"name":"uint8","nodeType":"ElementaryTypeName","src":"17296:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16402,"mutability":"mutable","name":"r","nameLocation":"17313:1:31","nodeType":"VariableDeclaration","scope":16406,"src":"17305:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17305:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16404,"mutability":"mutable","name":"s","nameLocation":"17324:1:31","nodeType":"VariableDeclaration","scope":16406,"src":"17316:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17316:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17295:31:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16420,"nodeType":"FunctionDefinition","src":"17401:104:31","nodes":[],"documentation":{"id":16407,"nodeType":"StructuredDocumentation","src":"17333:63:31","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17410:4:31","parameters":{"id":16412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16409,"mutability":"mutable","name":"privateKey","nameLocation":"17423:10:31","nodeType":"VariableDeclaration","scope":16420,"src":"17415:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16408,"name":"uint256","nodeType":"ElementaryTypeName","src":"17415:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16411,"mutability":"mutable","name":"digest","nameLocation":"17443:6:31","nodeType":"VariableDeclaration","scope":16420,"src":"17435:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17435:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17414:36:31"},"returnParameters":{"id":16419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16414,"mutability":"mutable","name":"v","nameLocation":"17480:1:31","nodeType":"VariableDeclaration","scope":16420,"src":"17474:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16413,"name":"uint8","nodeType":"ElementaryTypeName","src":"17474:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16416,"mutability":"mutable","name":"r","nameLocation":"17491:1:31","nodeType":"VariableDeclaration","scope":16420,"src":"17483:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17483:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16418,"mutability":"mutable","name":"s","nameLocation":"17502:1:31","nodeType":"VariableDeclaration","scope":16420,"src":"17494:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17494:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17473:31:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16432,"nodeType":"FunctionDefinition","src":"17944:84:31","nodes":[],"documentation":{"id":16421,"nodeType":"StructuredDocumentation","src":"17511:428:31","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17953:4:31","parameters":{"id":16424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16423,"mutability":"mutable","name":"digest","nameLocation":"17966:6:31","nodeType":"VariableDeclaration","scope":16432,"src":"17958:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17958:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17957:16:31"},"returnParameters":{"id":16431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16426,"mutability":"mutable","name":"v","nameLocation":"18003:1:31","nodeType":"VariableDeclaration","scope":16432,"src":"17997:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16425,"name":"uint8","nodeType":"ElementaryTypeName","src":"17997:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16428,"mutability":"mutable","name":"r","nameLocation":"18014:1:31","nodeType":"VariableDeclaration","scope":16432,"src":"18006:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18006:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16430,"mutability":"mutable","name":"s","nameLocation":"18025:1:31","nodeType":"VariableDeclaration","scope":16432,"src":"18017:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18017:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17996:31:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16446,"nodeType":"FunctionDefinition","src":"18205:100:31","nodes":[],"documentation":{"id":16433,"nodeType":"StructuredDocumentation","src":"18034:166:31","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18214:4:31","parameters":{"id":16438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16435,"mutability":"mutable","name":"signer","nameLocation":"18227:6:31","nodeType":"VariableDeclaration","scope":16446,"src":"18219:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16434,"name":"address","nodeType":"ElementaryTypeName","src":"18219:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16437,"mutability":"mutable","name":"digest","nameLocation":"18243:6:31","nodeType":"VariableDeclaration","scope":16446,"src":"18235:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18235:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18218:32:31"},"returnParameters":{"id":16445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16440,"mutability":"mutable","name":"v","nameLocation":"18280:1:31","nodeType":"VariableDeclaration","scope":16446,"src":"18274:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16439,"name":"uint8","nodeType":"ElementaryTypeName","src":"18274:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16442,"mutability":"mutable","name":"r","nameLocation":"18291:1:31","nodeType":"VariableDeclaration","scope":16446,"src":"18283:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18283:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16444,"mutability":"mutable","name":"s","nameLocation":"18302:1:31","nodeType":"VariableDeclaration","scope":16446,"src":"18294:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18294:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18273:31:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16454,"nodeType":"FunctionDefinition","src":"18492:80:31","nodes":[],"documentation":{"id":16447,"nodeType":"StructuredDocumentation","src":"18349:138:31","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"18501:10:31","parameters":{"id":16450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16449,"mutability":"mutable","name":"name","nameLocation":"18528:4:31","nodeType":"VariableDeclaration","scope":16454,"src":"18512:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16448,"name":"string","nodeType":"ElementaryTypeName","src":"18512:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18511:22:31"},"returnParameters":{"id":16453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16452,"mutability":"mutable","name":"value","nameLocation":"18565:5:31","nodeType":"VariableDeclaration","scope":16454,"src":"18557:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16451,"name":"address","nodeType":"ElementaryTypeName","src":"18557:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18556:15:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16465,"nodeType":"FunctionDefinition","src":"18755:112:31","nodes":[],"documentation":{"id":16455,"nodeType":"StructuredDocumentation","src":"18578:172:31","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"18764:10:31","parameters":{"id":16460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16457,"mutability":"mutable","name":"name","nameLocation":"18791:4:31","nodeType":"VariableDeclaration","scope":16465,"src":"18775:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16456,"name":"string","nodeType":"ElementaryTypeName","src":"18775:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16459,"mutability":"mutable","name":"delim","nameLocation":"18813:5:31","nodeType":"VariableDeclaration","scope":16465,"src":"18797:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16458,"name":"string","nodeType":"ElementaryTypeName","src":"18797:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18774:45:31"},"returnParameters":{"id":16464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16463,"mutability":"mutable","name":"value","nameLocation":"18860:5:31","nodeType":"VariableDeclaration","scope":16465,"src":"18843:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16461,"name":"address","nodeType":"ElementaryTypeName","src":"18843:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16462,"nodeType":"ArrayTypeName","src":"18843:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18842:24:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16473,"nodeType":"FunctionDefinition","src":"19013:74:31","nodes":[],"documentation":{"id":16466,"nodeType":"StructuredDocumentation","src":"18873:135:31","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19022:7:31","parameters":{"id":16469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16468,"mutability":"mutable","name":"name","nameLocation":"19046:4:31","nodeType":"VariableDeclaration","scope":16473,"src":"19030:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16467,"name":"string","nodeType":"ElementaryTypeName","src":"19030:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19029:22:31"},"returnParameters":{"id":16472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16471,"mutability":"mutable","name":"value","nameLocation":"19080:5:31","nodeType":"VariableDeclaration","scope":16473,"src":"19075:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16470,"name":"bool","nodeType":"ElementaryTypeName","src":"19075:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19074:12:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16484,"nodeType":"FunctionDefinition","src":"19267:106:31","nodes":[],"documentation":{"id":16474,"nodeType":"StructuredDocumentation","src":"19093:169:31","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19276:7:31","parameters":{"id":16479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16476,"mutability":"mutable","name":"name","nameLocation":"19300:4:31","nodeType":"VariableDeclaration","scope":16484,"src":"19284:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16475,"name":"string","nodeType":"ElementaryTypeName","src":"19284:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16478,"mutability":"mutable","name":"delim","nameLocation":"19322:5:31","nodeType":"VariableDeclaration","scope":16484,"src":"19306:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16477,"name":"string","nodeType":"ElementaryTypeName","src":"19306:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19283:45:31"},"returnParameters":{"id":16483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16482,"mutability":"mutable","name":"value","nameLocation":"19366:5:31","nodeType":"VariableDeclaration","scope":16484,"src":"19352:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16480,"name":"bool","nodeType":"ElementaryTypeName","src":"19352:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16481,"nodeType":"ArrayTypeName","src":"19352:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"19351:21:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16492,"nodeType":"FunctionDefinition","src":"19522:80:31","nodes":[],"documentation":{"id":16485,"nodeType":"StructuredDocumentation","src":"19379:138:31","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"19531:10:31","parameters":{"id":16488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16487,"mutability":"mutable","name":"name","nameLocation":"19558:4:31","nodeType":"VariableDeclaration","scope":16492,"src":"19542:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16486,"name":"string","nodeType":"ElementaryTypeName","src":"19542:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19541:22:31"},"returnParameters":{"id":16491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16490,"mutability":"mutable","name":"value","nameLocation":"19595:5:31","nodeType":"VariableDeclaration","scope":16492,"src":"19587:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19587:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19586:15:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16503,"nodeType":"FunctionDefinition","src":"19785:112:31","nodes":[],"documentation":{"id":16493,"nodeType":"StructuredDocumentation","src":"19608:172:31","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"19794:10:31","parameters":{"id":16498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16495,"mutability":"mutable","name":"name","nameLocation":"19821:4:31","nodeType":"VariableDeclaration","scope":16503,"src":"19805:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16494,"name":"string","nodeType":"ElementaryTypeName","src":"19805:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16497,"mutability":"mutable","name":"delim","nameLocation":"19843:5:31","nodeType":"VariableDeclaration","scope":16503,"src":"19827:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16496,"name":"string","nodeType":"ElementaryTypeName","src":"19827:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19804:45:31"},"returnParameters":{"id":16502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16501,"mutability":"mutable","name":"value","nameLocation":"19890:5:31","nodeType":"VariableDeclaration","scope":16503,"src":"19873:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19873:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16500,"nodeType":"ArrayTypeName","src":"19873:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"19872:24:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16511,"nodeType":"FunctionDefinition","src":"20044:83:31","nodes":[],"documentation":{"id":16504,"nodeType":"StructuredDocumentation","src":"19903:136:31","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20053:8:31","parameters":{"id":16507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16506,"mutability":"mutable","name":"name","nameLocation":"20078:4:31","nodeType":"VariableDeclaration","scope":16511,"src":"20062:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16505,"name":"string","nodeType":"ElementaryTypeName","src":"20062:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20061:22:31"},"returnParameters":{"id":16510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16509,"mutability":"mutable","name":"value","nameLocation":"20120:5:31","nodeType":"VariableDeclaration","scope":16511,"src":"20107:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16508,"name":"bytes","nodeType":"ElementaryTypeName","src":"20107:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20106:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16522,"nodeType":"FunctionDefinition","src":"20308:108:31","nodes":[],"documentation":{"id":16512,"nodeType":"StructuredDocumentation","src":"20133:170:31","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20317:8:31","parameters":{"id":16517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16514,"mutability":"mutable","name":"name","nameLocation":"20342:4:31","nodeType":"VariableDeclaration","scope":16522,"src":"20326:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16513,"name":"string","nodeType":"ElementaryTypeName","src":"20326:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16516,"mutability":"mutable","name":"delim","nameLocation":"20364:5:31","nodeType":"VariableDeclaration","scope":16522,"src":"20348:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16515,"name":"string","nodeType":"ElementaryTypeName","src":"20348:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20325:45:31"},"returnParameters":{"id":16521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16520,"mutability":"mutable","name":"value","nameLocation":"20409:5:31","nodeType":"VariableDeclaration","scope":16522,"src":"20394:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16518,"name":"bytes","nodeType":"ElementaryTypeName","src":"20394:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16519,"nodeType":"ArrayTypeName","src":"20394:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"20393:22:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16530,"nodeType":"FunctionDefinition","src":"20518:77:31","nodes":[],"documentation":{"id":16523,"nodeType":"StructuredDocumentation","src":"20422:91:31","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"20527:9:31","parameters":{"id":16526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16525,"mutability":"mutable","name":"name","nameLocation":"20553:4:31","nodeType":"VariableDeclaration","scope":16530,"src":"20537:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16524,"name":"string","nodeType":"ElementaryTypeName","src":"20537:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20536:22:31"},"returnParameters":{"id":16529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16528,"mutability":"mutable","name":"result","nameLocation":"20587:6:31","nodeType":"VariableDeclaration","scope":16530,"src":"20582:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16527,"name":"bool","nodeType":"ElementaryTypeName","src":"20582:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20581:13:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16538,"nodeType":"FunctionDefinition","src":"20743:75:31","nodes":[],"documentation":{"id":16531,"nodeType":"StructuredDocumentation","src":"20601:137:31","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"20752:6:31","parameters":{"id":16534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16533,"mutability":"mutable","name":"name","nameLocation":"20775:4:31","nodeType":"VariableDeclaration","scope":16538,"src":"20759:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16532,"name":"string","nodeType":"ElementaryTypeName","src":"20759:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20758:22:31"},"returnParameters":{"id":16537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16536,"mutability":"mutable","name":"value","nameLocation":"20811:5:31","nodeType":"VariableDeclaration","scope":16538,"src":"20804:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16535,"name":"int256","nodeType":"ElementaryTypeName","src":"20804:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20803:14:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16549,"nodeType":"FunctionDefinition","src":"21000:107:31","nodes":[],"documentation":{"id":16539,"nodeType":"StructuredDocumentation","src":"20824:171:31","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21009:6:31","parameters":{"id":16544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16541,"mutability":"mutable","name":"name","nameLocation":"21032:4:31","nodeType":"VariableDeclaration","scope":16549,"src":"21016:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16540,"name":"string","nodeType":"ElementaryTypeName","src":"21016:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16543,"mutability":"mutable","name":"delim","nameLocation":"21054:5:31","nodeType":"VariableDeclaration","scope":16549,"src":"21038:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16542,"name":"string","nodeType":"ElementaryTypeName","src":"21038:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21015:45:31"},"returnParameters":{"id":16548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16547,"mutability":"mutable","name":"value","nameLocation":"21100:5:31","nodeType":"VariableDeclaration","scope":16549,"src":"21084:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16545,"name":"int256","nodeType":"ElementaryTypeName","src":"21084:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16546,"nodeType":"ArrayTypeName","src":"21084:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21083:23:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16559,"nodeType":"FunctionDefinition","src":"21298:91:31","nodes":[],"documentation":{"id":16550,"nodeType":"StructuredDocumentation","src":"21113:180:31","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21307:5:31","parameters":{"id":16555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16552,"mutability":"mutable","name":"name","nameLocation":"21329:4:31","nodeType":"VariableDeclaration","scope":16559,"src":"21313:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16551,"name":"string","nodeType":"ElementaryTypeName","src":"21313:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16554,"mutability":"mutable","name":"defaultValue","nameLocation":"21340:12:31","nodeType":"VariableDeclaration","scope":16559,"src":"21335:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16553,"name":"bool","nodeType":"ElementaryTypeName","src":"21335:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21312:41:31"},"returnParameters":{"id":16558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16557,"mutability":"mutable","name":"value","nameLocation":"21382:5:31","nodeType":"VariableDeclaration","scope":16559,"src":"21377:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16556,"name":"bool","nodeType":"ElementaryTypeName","src":"21377:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21376:12:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16569,"nodeType":"FunctionDefinition","src":"21583:97:31","nodes":[],"documentation":{"id":16560,"nodeType":"StructuredDocumentation","src":"21395:183:31","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21592:5:31","parameters":{"id":16565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16562,"mutability":"mutable","name":"name","nameLocation":"21614:4:31","nodeType":"VariableDeclaration","scope":16569,"src":"21598:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16561,"name":"string","nodeType":"ElementaryTypeName","src":"21598:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16564,"mutability":"mutable","name":"defaultValue","nameLocation":"21628:12:31","nodeType":"VariableDeclaration","scope":16569,"src":"21620:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16563,"name":"uint256","nodeType":"ElementaryTypeName","src":"21620:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21597:44:31"},"returnParameters":{"id":16568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16567,"mutability":"mutable","name":"value","nameLocation":"21673:5:31","nodeType":"VariableDeclaration","scope":16569,"src":"21665:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16566,"name":"uint256","nodeType":"ElementaryTypeName","src":"21665:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21664:15:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16583,"nodeType":"FunctionDefinition","src":"21908:164:31","nodes":[],"documentation":{"id":16570,"nodeType":"StructuredDocumentation","src":"21686:217:31","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21917:5:31","parameters":{"id":16578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16572,"mutability":"mutable","name":"name","nameLocation":"21939:4:31","nodeType":"VariableDeclaration","scope":16583,"src":"21923:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16571,"name":"string","nodeType":"ElementaryTypeName","src":"21923:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16574,"mutability":"mutable","name":"delim","nameLocation":"21961:5:31","nodeType":"VariableDeclaration","scope":16583,"src":"21945:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16573,"name":"string","nodeType":"ElementaryTypeName","src":"21945:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16577,"mutability":"mutable","name":"defaultValue","nameLocation":"21987:12:31","nodeType":"VariableDeclaration","scope":16583,"src":"21968:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16575,"name":"address","nodeType":"ElementaryTypeName","src":"21968:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16576,"nodeType":"ArrayTypeName","src":"21968:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"21922:78:31"},"returnParameters":{"id":16582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16581,"mutability":"mutable","name":"value","nameLocation":"22065:5:31","nodeType":"VariableDeclaration","scope":16583,"src":"22048:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16579,"name":"address","nodeType":"ElementaryTypeName","src":"22048:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16580,"nodeType":"ArrayTypeName","src":"22048:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22047:24:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16597,"nodeType":"FunctionDefinition","src":"22300:164:31","nodes":[],"documentation":{"id":16584,"nodeType":"StructuredDocumentation","src":"22078:217:31","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22309:5:31","parameters":{"id":16592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16586,"mutability":"mutable","name":"name","nameLocation":"22331:4:31","nodeType":"VariableDeclaration","scope":16597,"src":"22315:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16585,"name":"string","nodeType":"ElementaryTypeName","src":"22315:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16588,"mutability":"mutable","name":"delim","nameLocation":"22353:5:31","nodeType":"VariableDeclaration","scope":16597,"src":"22337:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16587,"name":"string","nodeType":"ElementaryTypeName","src":"22337:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16591,"mutability":"mutable","name":"defaultValue","nameLocation":"22379:12:31","nodeType":"VariableDeclaration","scope":16597,"src":"22360:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22360:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16590,"nodeType":"ArrayTypeName","src":"22360:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22314:78:31"},"returnParameters":{"id":16596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16595,"mutability":"mutable","name":"value","nameLocation":"22457:5:31","nodeType":"VariableDeclaration","scope":16597,"src":"22440:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22440:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16594,"nodeType":"ArrayTypeName","src":"22440:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"22439:24:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16611,"nodeType":"FunctionDefinition","src":"22691:162:31","nodes":[],"documentation":{"id":16598,"nodeType":"StructuredDocumentation","src":"22470:216:31","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22700:5:31","parameters":{"id":16606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16600,"mutability":"mutable","name":"name","nameLocation":"22722:4:31","nodeType":"VariableDeclaration","scope":16611,"src":"22706:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16599,"name":"string","nodeType":"ElementaryTypeName","src":"22706:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16602,"mutability":"mutable","name":"delim","nameLocation":"22744:5:31","nodeType":"VariableDeclaration","scope":16611,"src":"22728:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16601,"name":"string","nodeType":"ElementaryTypeName","src":"22728:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16605,"mutability":"mutable","name":"defaultValue","nameLocation":"22769:12:31","nodeType":"VariableDeclaration","scope":16611,"src":"22751:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16603,"name":"string","nodeType":"ElementaryTypeName","src":"22751:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16604,"nodeType":"ArrayTypeName","src":"22751:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22705:77:31"},"returnParameters":{"id":16610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16609,"mutability":"mutable","name":"value","nameLocation":"22846:5:31","nodeType":"VariableDeclaration","scope":16611,"src":"22830:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16607,"name":"string","nodeType":"ElementaryTypeName","src":"22830:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16608,"nodeType":"ArrayTypeName","src":"22830:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22829:23:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16625,"nodeType":"FunctionDefinition","src":"23079:160:31","nodes":[],"documentation":{"id":16612,"nodeType":"StructuredDocumentation","src":"22859:215:31","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23088:5:31","parameters":{"id":16620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16614,"mutability":"mutable","name":"name","nameLocation":"23110:4:31","nodeType":"VariableDeclaration","scope":16625,"src":"23094:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16613,"name":"string","nodeType":"ElementaryTypeName","src":"23094:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16616,"mutability":"mutable","name":"delim","nameLocation":"23132:5:31","nodeType":"VariableDeclaration","scope":16625,"src":"23116:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16615,"name":"string","nodeType":"ElementaryTypeName","src":"23116:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16619,"mutability":"mutable","name":"defaultValue","nameLocation":"23156:12:31","nodeType":"VariableDeclaration","scope":16625,"src":"23139:29:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16617,"name":"bytes","nodeType":"ElementaryTypeName","src":"23139:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16618,"nodeType":"ArrayTypeName","src":"23139:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23093:76:31"},"returnParameters":{"id":16624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16623,"mutability":"mutable","name":"value","nameLocation":"23232:5:31","nodeType":"VariableDeclaration","scope":16625,"src":"23217:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16621,"name":"bytes","nodeType":"ElementaryTypeName","src":"23217:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16622,"nodeType":"ArrayTypeName","src":"23217:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23216:22:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16635,"nodeType":"FunctionDefinition","src":"23432:95:31","nodes":[],"documentation":{"id":16626,"nodeType":"StructuredDocumentation","src":"23245:182:31","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23441:5:31","parameters":{"id":16631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16628,"mutability":"mutable","name":"name","nameLocation":"23463:4:31","nodeType":"VariableDeclaration","scope":16635,"src":"23447:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16627,"name":"string","nodeType":"ElementaryTypeName","src":"23447:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16630,"mutability":"mutable","name":"defaultValue","nameLocation":"23476:12:31","nodeType":"VariableDeclaration","scope":16635,"src":"23469:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16629,"name":"int256","nodeType":"ElementaryTypeName","src":"23469:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23446:43:31"},"returnParameters":{"id":16634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16633,"mutability":"mutable","name":"value","nameLocation":"23520:5:31","nodeType":"VariableDeclaration","scope":16635,"src":"23513:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16632,"name":"int256","nodeType":"ElementaryTypeName","src":"23513:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23512:14:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16645,"nodeType":"FunctionDefinition","src":"23721:97:31","nodes":[],"documentation":{"id":16636,"nodeType":"StructuredDocumentation","src":"23533:183:31","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23730:5:31","parameters":{"id":16641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16638,"mutability":"mutable","name":"name","nameLocation":"23752:4:31","nodeType":"VariableDeclaration","scope":16645,"src":"23736:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16637,"name":"string","nodeType":"ElementaryTypeName","src":"23736:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16640,"mutability":"mutable","name":"defaultValue","nameLocation":"23766:12:31","nodeType":"VariableDeclaration","scope":16645,"src":"23758:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16639,"name":"address","nodeType":"ElementaryTypeName","src":"23758:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23735:44:31"},"returnParameters":{"id":16644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16643,"mutability":"mutable","name":"value","nameLocation":"23811:5:31","nodeType":"VariableDeclaration","scope":16645,"src":"23803:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16642,"name":"address","nodeType":"ElementaryTypeName","src":"23803:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23802:15:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16655,"nodeType":"FunctionDefinition","src":"24012:97:31","nodes":[],"documentation":{"id":16646,"nodeType":"StructuredDocumentation","src":"23824:183:31","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24021:5:31","parameters":{"id":16651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16648,"mutability":"mutable","name":"name","nameLocation":"24043:4:31","nodeType":"VariableDeclaration","scope":16655,"src":"24027:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16647,"name":"string","nodeType":"ElementaryTypeName","src":"24027:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16650,"mutability":"mutable","name":"defaultValue","nameLocation":"24057:12:31","nodeType":"VariableDeclaration","scope":16655,"src":"24049:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24049:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24026:44:31"},"returnParameters":{"id":16654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16653,"mutability":"mutable","name":"value","nameLocation":"24102:5:31","nodeType":"VariableDeclaration","scope":16655,"src":"24094:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24094:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24093:15:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16665,"nodeType":"FunctionDefinition","src":"24302:111:31","nodes":[],"documentation":{"id":16656,"nodeType":"StructuredDocumentation","src":"24115:182:31","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24311:5:31","parameters":{"id":16661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16658,"mutability":"mutable","name":"name","nameLocation":"24333:4:31","nodeType":"VariableDeclaration","scope":16665,"src":"24317:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16657,"name":"string","nodeType":"ElementaryTypeName","src":"24317:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16660,"mutability":"mutable","name":"defaultValue","nameLocation":"24355:12:31","nodeType":"VariableDeclaration","scope":16665,"src":"24339:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16659,"name":"string","nodeType":"ElementaryTypeName","src":"24339:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24316:52:31"},"returnParameters":{"id":16664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16663,"mutability":"mutable","name":"value","nameLocation":"24406:5:31","nodeType":"VariableDeclaration","scope":16665,"src":"24392:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16662,"name":"string","nodeType":"ElementaryTypeName","src":"24392:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24391:21:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16675,"nodeType":"FunctionDefinition","src":"24605:109:31","nodes":[],"documentation":{"id":16666,"nodeType":"StructuredDocumentation","src":"24419:181:31","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24614:5:31","parameters":{"id":16671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16668,"mutability":"mutable","name":"name","nameLocation":"24636:4:31","nodeType":"VariableDeclaration","scope":16675,"src":"24620:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16667,"name":"string","nodeType":"ElementaryTypeName","src":"24620:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16670,"mutability":"mutable","name":"defaultValue","nameLocation":"24657:12:31","nodeType":"VariableDeclaration","scope":16675,"src":"24642:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16669,"name":"bytes","nodeType":"ElementaryTypeName","src":"24642:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24619:51:31"},"returnParameters":{"id":16674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16673,"mutability":"mutable","name":"value","nameLocation":"24707:5:31","nodeType":"VariableDeclaration","scope":16675,"src":"24694:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16672,"name":"bytes","nodeType":"ElementaryTypeName","src":"24694:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24693:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16689,"nodeType":"FunctionDefinition","src":"24939:158:31","nodes":[],"documentation":{"id":16676,"nodeType":"StructuredDocumentation","src":"24720:214:31","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24948:5:31","parameters":{"id":16684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16678,"mutability":"mutable","name":"name","nameLocation":"24970:4:31","nodeType":"VariableDeclaration","scope":16689,"src":"24954:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16677,"name":"string","nodeType":"ElementaryTypeName","src":"24954:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16680,"mutability":"mutable","name":"delim","nameLocation":"24992:5:31","nodeType":"VariableDeclaration","scope":16689,"src":"24976:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16679,"name":"string","nodeType":"ElementaryTypeName","src":"24976:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16683,"mutability":"mutable","name":"defaultValue","nameLocation":"25015:12:31","nodeType":"VariableDeclaration","scope":16689,"src":"24999:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16681,"name":"bool","nodeType":"ElementaryTypeName","src":"24999:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16682,"nodeType":"ArrayTypeName","src":"24999:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"24953:75:31"},"returnParameters":{"id":16688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16687,"mutability":"mutable","name":"value","nameLocation":"25090:5:31","nodeType":"VariableDeclaration","scope":16689,"src":"25076:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16685,"name":"bool","nodeType":"ElementaryTypeName","src":"25076:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16686,"nodeType":"ArrayTypeName","src":"25076:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25075:21:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16703,"nodeType":"FunctionDefinition","src":"25325:164:31","nodes":[],"documentation":{"id":16690,"nodeType":"StructuredDocumentation","src":"25103:217:31","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25334:5:31","parameters":{"id":16698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16692,"mutability":"mutable","name":"name","nameLocation":"25356:4:31","nodeType":"VariableDeclaration","scope":16703,"src":"25340:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16691,"name":"string","nodeType":"ElementaryTypeName","src":"25340:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16694,"mutability":"mutable","name":"delim","nameLocation":"25378:5:31","nodeType":"VariableDeclaration","scope":16703,"src":"25362:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16693,"name":"string","nodeType":"ElementaryTypeName","src":"25362:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16697,"mutability":"mutable","name":"defaultValue","nameLocation":"25404:12:31","nodeType":"VariableDeclaration","scope":16703,"src":"25385:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16695,"name":"uint256","nodeType":"ElementaryTypeName","src":"25385:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16696,"nodeType":"ArrayTypeName","src":"25385:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25339:78:31"},"returnParameters":{"id":16702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16701,"mutability":"mutable","name":"value","nameLocation":"25482:5:31","nodeType":"VariableDeclaration","scope":16703,"src":"25465:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16699,"name":"uint256","nodeType":"ElementaryTypeName","src":"25465:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16700,"nodeType":"ArrayTypeName","src":"25465:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"25464:24:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16717,"nodeType":"FunctionDefinition","src":"25716:162:31","nodes":[],"documentation":{"id":16704,"nodeType":"StructuredDocumentation","src":"25495:216:31","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25725:5:31","parameters":{"id":16712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16706,"mutability":"mutable","name":"name","nameLocation":"25747:4:31","nodeType":"VariableDeclaration","scope":16717,"src":"25731:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16705,"name":"string","nodeType":"ElementaryTypeName","src":"25731:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16708,"mutability":"mutable","name":"delim","nameLocation":"25769:5:31","nodeType":"VariableDeclaration","scope":16717,"src":"25753:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16707,"name":"string","nodeType":"ElementaryTypeName","src":"25753:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16711,"mutability":"mutable","name":"defaultValue","nameLocation":"25794:12:31","nodeType":"VariableDeclaration","scope":16717,"src":"25776:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16709,"name":"int256","nodeType":"ElementaryTypeName","src":"25776:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16710,"nodeType":"ArrayTypeName","src":"25776:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"25730:77:31"},"returnParameters":{"id":16716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16715,"mutability":"mutable","name":"value","nameLocation":"25871:5:31","nodeType":"VariableDeclaration","scope":16717,"src":"25855:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16713,"name":"int256","nodeType":"ElementaryTypeName","src":"25855:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16714,"nodeType":"ArrayTypeName","src":"25855:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"25854:23:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16725,"nodeType":"FunctionDefinition","src":"26026:85:31","nodes":[],"documentation":{"id":16718,"nodeType":"StructuredDocumentation","src":"25884:137:31","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26035:9:31","parameters":{"id":16721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16720,"mutability":"mutable","name":"name","nameLocation":"26061:4:31","nodeType":"VariableDeclaration","scope":16725,"src":"26045:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16719,"name":"string","nodeType":"ElementaryTypeName","src":"26045:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26044:22:31"},"returnParameters":{"id":16724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16723,"mutability":"mutable","name":"value","nameLocation":"26104:5:31","nodeType":"VariableDeclaration","scope":16725,"src":"26090:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16722,"name":"string","nodeType":"ElementaryTypeName","src":"26090:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26089:21:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16736,"nodeType":"FunctionDefinition","src":"26293:110:31","nodes":[],"documentation":{"id":16726,"nodeType":"StructuredDocumentation","src":"26117:171:31","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26302:9:31","parameters":{"id":16731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16728,"mutability":"mutable","name":"name","nameLocation":"26328:4:31","nodeType":"VariableDeclaration","scope":16736,"src":"26312:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16727,"name":"string","nodeType":"ElementaryTypeName","src":"26312:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16730,"mutability":"mutable","name":"delim","nameLocation":"26350:5:31","nodeType":"VariableDeclaration","scope":16736,"src":"26334:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16729,"name":"string","nodeType":"ElementaryTypeName","src":"26334:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26311:45:31"},"returnParameters":{"id":16735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16734,"mutability":"mutable","name":"value","nameLocation":"26396:5:31","nodeType":"VariableDeclaration","scope":16736,"src":"26380:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16732,"name":"string","nodeType":"ElementaryTypeName","src":"26380:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16733,"nodeType":"ArrayTypeName","src":"26380:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"26379:23:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16744,"nodeType":"FunctionDefinition","src":"26552:77:31","nodes":[],"documentation":{"id":16737,"nodeType":"StructuredDocumentation","src":"26409:138:31","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"26561:7:31","parameters":{"id":16740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16739,"mutability":"mutable","name":"name","nameLocation":"26585:4:31","nodeType":"VariableDeclaration","scope":16744,"src":"26569:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16738,"name":"string","nodeType":"ElementaryTypeName","src":"26569:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26568:22:31"},"returnParameters":{"id":16743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16742,"mutability":"mutable","name":"value","nameLocation":"26622:5:31","nodeType":"VariableDeclaration","scope":16744,"src":"26614:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16741,"name":"uint256","nodeType":"ElementaryTypeName","src":"26614:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26613:15:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16755,"nodeType":"FunctionDefinition","src":"26812:109:31","nodes":[],"documentation":{"id":16745,"nodeType":"StructuredDocumentation","src":"26635:172:31","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"26821:7:31","parameters":{"id":16750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16747,"mutability":"mutable","name":"name","nameLocation":"26845:4:31","nodeType":"VariableDeclaration","scope":16755,"src":"26829:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16746,"name":"string","nodeType":"ElementaryTypeName","src":"26829:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16749,"mutability":"mutable","name":"delim","nameLocation":"26867:5:31","nodeType":"VariableDeclaration","scope":16755,"src":"26851:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16748,"name":"string","nodeType":"ElementaryTypeName","src":"26851:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26828:45:31"},"returnParameters":{"id":16754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16753,"mutability":"mutable","name":"value","nameLocation":"26914:5:31","nodeType":"VariableDeclaration","scope":16755,"src":"26897:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16751,"name":"uint256","nodeType":"ElementaryTypeName","src":"26897:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16752,"nodeType":"ArrayTypeName","src":"26897:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26896:24:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16764,"nodeType":"FunctionDefinition","src":"26998:77:31","nodes":[],"documentation":{"id":16756,"nodeType":"StructuredDocumentation","src":"26927:66:31","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"27007:9:31","parameters":{"id":16760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16759,"mutability":"mutable","name":"context","nameLocation":"27030:7:31","nodeType":"VariableDeclaration","scope":16764,"src":"27017:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$16010","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":16758,"nodeType":"UserDefinedTypeName","pathNode":{"id":16757,"name":"ForgeContext","nameLocations":["27017:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":16010,"src":"27017:12:31"},"referencedDeclaration":16010,"src":"27017:12:31","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$16010","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"27016:22:31"},"returnParameters":{"id":16763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16762,"mutability":"mutable","name":"result","nameLocation":"27067:6:31","nodeType":"VariableDeclaration","scope":16764,"src":"27062:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16761,"name":"bool","nodeType":"ElementaryTypeName","src":"27062:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27061:13:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16772,"nodeType":"FunctionDefinition","src":"27117:70:31","nodes":[],"documentation":{"id":16765,"nodeType":"StructuredDocumentation","src":"27081:31:31","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"27126:6:31","parameters":{"id":16770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16767,"mutability":"mutable","name":"name","nameLocation":"27149:4:31","nodeType":"VariableDeclaration","scope":16772,"src":"27133:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16766,"name":"string","nodeType":"ElementaryTypeName","src":"27133:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16769,"mutability":"mutable","name":"value","nameLocation":"27171:5:31","nodeType":"VariableDeclaration","scope":16772,"src":"27155:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16768,"name":"string","nodeType":"ElementaryTypeName","src":"27155:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27132:45:31"},"returnParameters":{"id":16771,"nodeType":"ParameterList","parameters":[],"src":"27186:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16784,"nodeType":"FunctionDefinition","src":"27319:109:31","nodes":[],"documentation":{"id":16773,"nodeType":"StructuredDocumentation","src":"27223:91:31","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"27328:8:31","parameters":{"id":16776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16775,"mutability":"mutable","name":"target","nameLocation":"27345:6:31","nodeType":"VariableDeclaration","scope":16784,"src":"27337:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16774,"name":"address","nodeType":"ElementaryTypeName","src":"27337:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27336:16:31"},"returnParameters":{"id":16783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16779,"mutability":"mutable","name":"readSlots","nameLocation":"27388:9:31","nodeType":"VariableDeclaration","scope":16784,"src":"27371:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27371:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16778,"nodeType":"ArrayTypeName","src":"27371:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16782,"mutability":"mutable","name":"writeSlots","nameLocation":"27416:10:31","nodeType":"VariableDeclaration","scope":16784,"src":"27399:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27399:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16781,"nodeType":"ArrayTypeName","src":"27399:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27370:57:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16792,"nodeType":"FunctionDefinition","src":"27484:74:31","nodes":[],"documentation":{"id":16785,"nodeType":"StructuredDocumentation","src":"27434:45:31","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"27493:4:31","parameters":{"id":16788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16787,"mutability":"mutable","name":"privateKey","nameLocation":"27506:10:31","nodeType":"VariableDeclaration","scope":16792,"src":"27498:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16786,"name":"uint256","nodeType":"ElementaryTypeName","src":"27498:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27497:20:31"},"returnParameters":{"id":16791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16790,"mutability":"mutable","name":"keyAddr","nameLocation":"27549:7:31","nodeType":"VariableDeclaration","scope":16792,"src":"27541:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16789,"name":"address","nodeType":"ElementaryTypeName","src":"27541:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27540:17:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16809,"nodeType":"FunctionDefinition","src":"27621:160:31","nodes":[],"documentation":{"id":16793,"nodeType":"StructuredDocumentation","src":"27564:52:31","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"27630:11:31","parameters":{"id":16803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16795,"mutability":"mutable","name":"fromBlock","nameLocation":"27650:9:31","nodeType":"VariableDeclaration","scope":16809,"src":"27642:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16794,"name":"uint256","nodeType":"ElementaryTypeName","src":"27642:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16797,"mutability":"mutable","name":"toBlock","nameLocation":"27669:7:31","nodeType":"VariableDeclaration","scope":16809,"src":"27661:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16796,"name":"uint256","nodeType":"ElementaryTypeName","src":"27661:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16799,"mutability":"mutable","name":"target","nameLocation":"27686:6:31","nodeType":"VariableDeclaration","scope":16809,"src":"27678:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16798,"name":"address","nodeType":"ElementaryTypeName","src":"27678:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16802,"mutability":"mutable","name":"topics","nameLocation":"27713:6:31","nodeType":"VariableDeclaration","scope":16809,"src":"27694:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27694:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16801,"nodeType":"ArrayTypeName","src":"27694:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27641:79:31"},"returnParameters":{"id":16808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16807,"mutability":"mutable","name":"logs","nameLocation":"27775:4:31","nodeType":"VariableDeclaration","scope":16809,"src":"27755:24:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$16051_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":16805,"nodeType":"UserDefinedTypeName","pathNode":{"id":16804,"name":"EthGetLogs","nameLocations":["27755:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":16051,"src":"27755:10:31"},"referencedDeclaration":16051,"src":"27755:10:31","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$16051_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":16806,"nodeType":"ArrayTypeName","src":"27755:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$16051_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"27754:26:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16815,"nodeType":"FunctionDefinition","src":"28118:70:31","nodes":[],"documentation":{"id":16810,"nodeType":"StructuredDocumentation","src":"27787:326:31","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"28127:14:31","parameters":{"id":16811,"nodeType":"ParameterList","parameters":[],"src":"28141:2:31"},"returnParameters":{"id":16814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16813,"mutability":"mutable","name":"blobBaseFee","nameLocation":"28175:11:31","nodeType":"VariableDeclaration","scope":16815,"src":"28167:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16812,"name":"uint256","nodeType":"ElementaryTypeName","src":"28167:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28166:21:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16821,"nodeType":"FunctionDefinition","src":"28503:65:31","nodes":[],"documentation":{"id":16816,"nodeType":"StructuredDocumentation","src":"28194:304:31","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"28512:14:31","parameters":{"id":16817,"nodeType":"ParameterList","parameters":[],"src":"28526:2:31"},"returnParameters":{"id":16820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16819,"mutability":"mutable","name":"height","nameLocation":"28560:6:31","nodeType":"VariableDeclaration","scope":16821,"src":"28552:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16818,"name":"uint256","nodeType":"ElementaryTypeName","src":"28552:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28551:16:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16827,"nodeType":"FunctionDefinition","src":"28892:71:31","nodes":[],"documentation":{"id":16822,"nodeType":"StructuredDocumentation","src":"28574:313:31","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"28901:17:31","parameters":{"id":16823,"nodeType":"ParameterList","parameters":[],"src":"28918:2:31"},"returnParameters":{"id":16826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16825,"mutability":"mutable","name":"timestamp","nameLocation":"28952:9:31","nodeType":"VariableDeclaration","scope":16827,"src":"28944:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16824,"name":"uint256","nodeType":"ElementaryTypeName","src":"28944:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28943:19:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16841,"nodeType":"FunctionDefinition","src":"29056:146:31","nodes":[],"documentation":{"id":16828,"nodeType":"StructuredDocumentation","src":"28969:82:31","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"29065:24:31","parameters":{"id":16833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16830,"mutability":"mutable","name":"target","nameLocation":"29098:6:31","nodeType":"VariableDeclaration","scope":16841,"src":"29090:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16829,"name":"address","nodeType":"ElementaryTypeName","src":"29090:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16832,"mutability":"mutable","name":"elementSlot","nameLocation":"29114:11:31","nodeType":"VariableDeclaration","scope":16841,"src":"29106:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29106:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29089:37:31"},"returnParameters":{"id":16840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16835,"mutability":"mutable","name":"found","nameLocation":"29166:5:31","nodeType":"VariableDeclaration","scope":16841,"src":"29161:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16834,"name":"bool","nodeType":"ElementaryTypeName","src":"29161:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16837,"mutability":"mutable","name":"key","nameLocation":"29181:3:31","nodeType":"VariableDeclaration","scope":16841,"src":"29173:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29173:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16839,"mutability":"mutable","name":"parent","nameLocation":"29194:6:31","nodeType":"VariableDeclaration","scope":16841,"src":"29186:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29186:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29160:41:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16851,"nodeType":"FunctionDefinition","src":"29299:97:31","nodes":[],"documentation":{"id":16842,"nodeType":"StructuredDocumentation","src":"29208:86:31","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"29308:16:31","parameters":{"id":16847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16844,"mutability":"mutable","name":"target","nameLocation":"29333:6:31","nodeType":"VariableDeclaration","scope":16851,"src":"29325:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16843,"name":"address","nodeType":"ElementaryTypeName","src":"29325:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16846,"mutability":"mutable","name":"mappingSlot","nameLocation":"29349:11:31","nodeType":"VariableDeclaration","scope":16851,"src":"29341:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29341:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29324:37:31"},"returnParameters":{"id":16850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16849,"mutability":"mutable","name":"length","nameLocation":"29388:6:31","nodeType":"VariableDeclaration","scope":16851,"src":"29380:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16848,"name":"uint256","nodeType":"ElementaryTypeName","src":"29380:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29379:16:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16863,"nodeType":"FunctionDefinition","src":"29600:109:31","nodes":[],"documentation":{"id":16852,"nodeType":"StructuredDocumentation","src":"29402:193:31","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"29609:16:31","parameters":{"id":16859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16854,"mutability":"mutable","name":"target","nameLocation":"29634:6:31","nodeType":"VariableDeclaration","scope":16863,"src":"29626:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16853,"name":"address","nodeType":"ElementaryTypeName","src":"29626:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16856,"mutability":"mutable","name":"mappingSlot","nameLocation":"29650:11:31","nodeType":"VariableDeclaration","scope":16863,"src":"29642:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29642:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16858,"mutability":"mutable","name":"idx","nameLocation":"29671:3:31","nodeType":"VariableDeclaration","scope":16863,"src":"29663:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16857,"name":"uint256","nodeType":"ElementaryTypeName","src":"29663:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29625:50:31"},"returnParameters":{"id":16862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16861,"mutability":"mutable","name":"value","nameLocation":"29702:5:31","nodeType":"VariableDeclaration","scope":16863,"src":"29694:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29694:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29693:15:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16871,"nodeType":"FunctionDefinition","src":"29753:72:31","nodes":[],"documentation":{"id":16864,"nodeType":"StructuredDocumentation","src":"29715:33:31","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"29762:8:31","parameters":{"id":16867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16866,"mutability":"mutable","name":"account","nameLocation":"29779:7:31","nodeType":"VariableDeclaration","scope":16871,"src":"29771:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16865,"name":"address","nodeType":"ElementaryTypeName","src":"29771:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29770:17:31"},"returnParameters":{"id":16870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16869,"mutability":"mutable","name":"nonce","nameLocation":"29818:5:31","nodeType":"VariableDeclaration","scope":16871,"src":"29811:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16868,"name":"uint64","nodeType":"ElementaryTypeName","src":"29811:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"29810:14:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16880,"nodeType":"FunctionDefinition","src":"29868:74:31","nodes":[],"documentation":{"id":16872,"nodeType":"StructuredDocumentation","src":"29831:32:31","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"29877:8:31","parameters":{"id":16876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16875,"mutability":"mutable","name":"wallet","nameLocation":"29902:6:31","nodeType":"VariableDeclaration","scope":16880,"src":"29886:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16874,"nodeType":"UserDefinedTypeName","pathNode":{"id":16873,"name":"Wallet","nameLocations":["29886:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":16089,"src":"29886:6:31"},"referencedDeclaration":16089,"src":"29886:6:31","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16089_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"29885:24:31"},"returnParameters":{"id":16879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16878,"mutability":"mutable","name":"nonce","nameLocation":"29935:5:31","nodeType":"VariableDeclaration","scope":16880,"src":"29928:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16877,"name":"uint64","nodeType":"ElementaryTypeName","src":"29928:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"29927:14:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16888,"nodeType":"FunctionDefinition","src":"29984:64:31","nodes":[],"documentation":{"id":16881,"nodeType":"StructuredDocumentation","src":"29948:31:31","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"29993:15:31","parameters":{"id":16882,"nodeType":"ParameterList","parameters":[],"src":"30008:2:31"},"returnParameters":{"id":16887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16886,"mutability":"mutable","name":"logs","nameLocation":"30042:4:31","nodeType":"VariableDeclaration","scope":16888,"src":"30029:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$16024_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":16884,"nodeType":"UserDefinedTypeName","pathNode":{"id":16883,"name":"Log","nameLocations":["30029:3:31"],"nodeType":"IdentifierPath","referencedDeclaration":16024,"src":"30029:3:31"},"referencedDeclaration":16024,"src":"30029:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$16024_storage_ptr","typeString":"struct VmSafe.Log"}},"id":16885,"nodeType":"ArrayTypeName","src":"30029:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$16024_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"30028:19:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16894,"nodeType":"FunctionDefinition","src":"30133:67:31","nodes":[],"documentation":{"id":16889,"nodeType":"StructuredDocumentation","src":"30054:74:31","text":"Returns state diffs from current `vm.startStateDiffRecording` session."},"functionSelector":"80df01cc","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiff","nameLocation":"30142:12:31","parameters":{"id":16890,"nodeType":"ParameterList","parameters":[],"src":"30154:2:31"},"returnParameters":{"id":16893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16892,"mutability":"mutable","name":"diff","nameLocation":"30194:4:31","nodeType":"VariableDeclaration","scope":16894,"src":"30180:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16891,"name":"string","nodeType":"ElementaryTypeName","src":"30180:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30179:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16900,"nodeType":"FunctionDefinition","src":"30301:71:31","nodes":[],"documentation":{"id":16895,"nodeType":"StructuredDocumentation","src":"30206:90:31","text":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"functionSelector":"f54fe009","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiffJson","nameLocation":"30310:16:31","parameters":{"id":16896,"nodeType":"ParameterList","parameters":[],"src":"30326:2:31"},"returnParameters":{"id":16899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16898,"mutability":"mutable","name":"diff","nameLocation":"30366:4:31","nodeType":"VariableDeclaration","scope":16900,"src":"30352:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16897,"name":"string","nodeType":"ElementaryTypeName","src":"30352:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30351:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16907,"nodeType":"FunctionDefinition","src":"30450:62:31","nodes":[],"documentation":{"id":16901,"nodeType":"StructuredDocumentation","src":"30378:67:31","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"30459:11:31","parameters":{"id":16902,"nodeType":"ParameterList","parameters":[],"src":"30470:2:31"},"returnParameters":{"id":16906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16905,"mutability":"mutable","name":"gas","nameLocation":"30507:3:31","nodeType":"VariableDeclaration","scope":16907,"src":"30496:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$16161_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":16904,"nodeType":"UserDefinedTypeName","pathNode":{"id":16903,"name":"Gas","nameLocations":["30496:3:31"],"nodeType":"IdentifierPath","referencedDeclaration":16161,"src":"30496:3:31"},"referencedDeclaration":16161,"src":"30496:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$16161_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"30495:16:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16917,"nodeType":"FunctionDefinition","src":"30564:81:31","nodes":[],"documentation":{"id":16908,"nodeType":"StructuredDocumentation","src":"30518:41:31","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"30573:4:31","parameters":{"id":16913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16910,"mutability":"mutable","name":"target","nameLocation":"30586:6:31","nodeType":"VariableDeclaration","scope":16917,"src":"30578:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16909,"name":"address","nodeType":"ElementaryTypeName","src":"30578:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16912,"mutability":"mutable","name":"slot","nameLocation":"30602:4:31","nodeType":"VariableDeclaration","scope":16917,"src":"30594:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30594:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30577:30:31"},"returnParameters":{"id":16916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16915,"mutability":"mutable","name":"data","nameLocation":"30639:4:31","nodeType":"VariableDeclaration","scope":16917,"src":"30631:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30631:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30630:14:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16921,"nodeType":"FunctionDefinition","src":"30736:37:31","nodes":[],"documentation":{"id":16918,"nodeType":"StructuredDocumentation","src":"30651:80:31","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"30745:16:31","parameters":{"id":16919,"nodeType":"ParameterList","parameters":[],"src":"30761:2:31"},"returnParameters":{"id":16920,"nodeType":"ParameterList","parameters":[],"src":"30772:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16925,"nodeType":"FunctionDefinition","src":"30825:27:31","nodes":[],"documentation":{"id":16922,"nodeType":"StructuredDocumentation","src":"30779:41:31","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"30834:6:31","parameters":{"id":16923,"nodeType":"ParameterList","parameters":[],"src":"30840:2:31"},"returnParameters":{"id":16924,"nodeType":"ParameterList","parameters":[],"src":"30851:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16929,"nodeType":"FunctionDefinition","src":"30899:31:31","nodes":[],"documentation":{"id":16926,"nodeType":"StructuredDocumentation","src":"30858:36:31","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"30908:10:31","parameters":{"id":16927,"nodeType":"ParameterList","parameters":[],"src":"30918:2:31"},"returnParameters":{"id":16928,"nodeType":"ParameterList","parameters":[],"src":"30929:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16933,"nodeType":"FunctionDefinition","src":"31001:37:31","nodes":[],"documentation":{"id":16930,"nodeType":"StructuredDocumentation","src":"30936:60:31","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"31010:16:31","parameters":{"id":16931,"nodeType":"ParameterList","parameters":[],"src":"31026:2:31"},"returnParameters":{"id":16932,"nodeType":"ParameterList","parameters":[],"src":"31037:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16937,"nodeType":"FunctionDefinition","src":"31128:38:31","nodes":[],"documentation":{"id":16934,"nodeType":"StructuredDocumentation","src":"31044:79:31","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"31137:17:31","parameters":{"id":16935,"nodeType":"ParameterList","parameters":[],"src":"31154:2:31"},"returnParameters":{"id":16936,"nodeType":"ParameterList","parameters":[],"src":"31165:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16947,"nodeType":"FunctionDefinition","src":"31243:98:31","nodes":[],"documentation":{"id":16938,"nodeType":"StructuredDocumentation","src":"31172:66:31","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"31252:3:31","parameters":{"id":16943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16940,"mutability":"mutable","name":"method","nameLocation":"31272:6:31","nodeType":"VariableDeclaration","scope":16947,"src":"31256:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16939,"name":"string","nodeType":"ElementaryTypeName","src":"31256:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16942,"mutability":"mutable","name":"params","nameLocation":"31296:6:31","nodeType":"VariableDeclaration","scope":16947,"src":"31280:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16941,"name":"string","nodeType":"ElementaryTypeName","src":"31280:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31255:48:31"},"returnParameters":{"id":16946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16945,"mutability":"mutable","name":"data","nameLocation":"31335:4:31","nodeType":"VariableDeclaration","scope":16947,"src":"31322:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16944,"name":"bytes","nodeType":"ElementaryTypeName","src":"31322:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31321:19:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16959,"nodeType":"FunctionDefinition","src":"31416:142:31","nodes":[],"documentation":{"id":16948,"nodeType":"StructuredDocumentation","src":"31347:64:31","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"31425:3:31","parameters":{"id":16955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16950,"mutability":"mutable","name":"urlOrAlias","nameLocation":"31445:10:31","nodeType":"VariableDeclaration","scope":16959,"src":"31429:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16949,"name":"string","nodeType":"ElementaryTypeName","src":"31429:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16952,"mutability":"mutable","name":"method","nameLocation":"31473:6:31","nodeType":"VariableDeclaration","scope":16959,"src":"31457:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16951,"name":"string","nodeType":"ElementaryTypeName","src":"31457:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16954,"mutability":"mutable","name":"params","nameLocation":"31497:6:31","nodeType":"VariableDeclaration","scope":16959,"src":"31481:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16953,"name":"string","nodeType":"ElementaryTypeName","src":"31481:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31428:76:31"},"returnParameters":{"id":16958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16957,"mutability":"mutable","name":"data","nameLocation":"31552:4:31","nodeType":"VariableDeclaration","scope":16959,"src":"31539:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16956,"name":"bytes","nodeType":"ElementaryTypeName","src":"31539:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31538:19:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16963,"nodeType":"FunctionDefinition","src":"31612:45:31","nodes":[],"documentation":{"id":16960,"nodeType":"StructuredDocumentation","src":"31564:43:31","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"31621:24:31","parameters":{"id":16961,"nodeType":"ParameterList","parameters":[],"src":"31645:2:31"},"returnParameters":{"id":16962,"nodeType":"ParameterList","parameters":[],"src":"31656:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16967,"nodeType":"FunctionDefinition","src":"31725:42:31","nodes":[],"documentation":{"id":16964,"nodeType":"StructuredDocumentation","src":"31663:57:31","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"31734:21:31","parameters":{"id":16965,"nodeType":"ParameterList","parameters":[],"src":"31755:2:31"},"returnParameters":{"id":16966,"nodeType":"ParameterList","parameters":[],"src":"31766:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16971,"nodeType":"FunctionDefinition","src":"31911:44:31","nodes":[],"documentation":{"id":16968,"nodeType":"StructuredDocumentation","src":"31773:133:31","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"31920:23:31","parameters":{"id":16969,"nodeType":"ParameterList","parameters":[],"src":"31943:2:31"},"returnParameters":{"id":16970,"nodeType":"ParameterList","parameters":[],"src":"31954:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16979,"nodeType":"FunctionDefinition","src":"32034:87:31","nodes":[],"documentation":{"id":16972,"nodeType":"StructuredDocumentation","src":"31961:68:31","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"32043:32:31","parameters":{"id":16973,"nodeType":"ParameterList","parameters":[],"src":"32075:2:31"},"returnParameters":{"id":16978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16977,"mutability":"mutable","name":"step","nameLocation":"32115:4:31","nodeType":"VariableDeclaration","scope":16979,"src":"32096:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$16176_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":16975,"nodeType":"UserDefinedTypeName","pathNode":{"id":16974,"name":"DebugStep","nameLocations":["32096:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":16176,"src":"32096:9:31"},"referencedDeclaration":16176,"src":"32096:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$16176_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":16976,"nodeType":"ArrayTypeName","src":"32096:11:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$16176_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"32095:25:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16987,"nodeType":"FunctionDefinition","src":"32229:92:31","nodes":[],"documentation":{"id":16980,"nodeType":"StructuredDocumentation","src":"32127:97:31","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"32238:22:31","parameters":{"id":16981,"nodeType":"ParameterList","parameters":[],"src":"32260:2:31"},"returnParameters":{"id":16986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16985,"mutability":"mutable","name":"accountAccesses","nameLocation":"32304:15:31","nodeType":"VariableDeclaration","scope":16987,"src":"32281:38:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$16135_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":16983,"nodeType":"UserDefinedTypeName","pathNode":{"id":16982,"name":"AccountAccess","nameLocations":["32281:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":16135,"src":"32281:13:31"},"referencedDeclaration":16135,"src":"32281:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$16135_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":16984,"nodeType":"ArrayTypeName","src":"32281:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$16135_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"32280:40:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16991,"nodeType":"FunctionDefinition","src":"32417:41:31","nodes":[],"documentation":{"id":16988,"nodeType":"StructuredDocumentation","src":"32327:85:31","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"32426:20:31","parameters":{"id":16989,"nodeType":"ParameterList","parameters":[],"src":"32446:2:31"},"returnParameters":{"id":16990,"nodeType":"ParameterList","parameters":[],"src":"32457:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16997,"nodeType":"FunctionDefinition","src":"32657:50:31","nodes":[],"documentation":{"id":16992,"nodeType":"StructuredDocumentation","src":"32501:151:31","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"32666:9:31","parameters":{"id":16995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16994,"mutability":"mutable","name":"path","nameLocation":"32692:4:31","nodeType":"VariableDeclaration","scope":16997,"src":"32676:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16993,"name":"string","nodeType":"ElementaryTypeName","src":"32676:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32675:22:31"},"returnParameters":{"id":16996,"nodeType":"ParameterList","parameters":[],"src":"32706:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17007,"nodeType":"FunctionDefinition","src":"33022:93:31","nodes":[],"documentation":{"id":16998,"nodeType":"StructuredDocumentation","src":"32713:304:31","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"33031:8:31","parameters":{"id":17003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17000,"mutability":"mutable","name":"from","nameLocation":"33056:4:31","nodeType":"VariableDeclaration","scope":17007,"src":"33040:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16999,"name":"string","nodeType":"ElementaryTypeName","src":"33040:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17002,"mutability":"mutable","name":"to","nameLocation":"33078:2:31","nodeType":"VariableDeclaration","scope":17007,"src":"33062:18:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17001,"name":"string","nodeType":"ElementaryTypeName","src":"33062:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33039:42:31"},"returnParameters":{"id":17006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17005,"mutability":"mutable","name":"copied","nameLocation":"33107:6:31","nodeType":"VariableDeclaration","scope":17007,"src":"33100:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17004,"name":"uint64","nodeType":"ElementaryTypeName","src":"33100:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"33099:15:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17015,"nodeType":"FunctionDefinition","src":"33520:66:31","nodes":[],"documentation":{"id":17008,"nodeType":"StructuredDocumentation","src":"33121:394:31","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"33529:9:31","parameters":{"id":17013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17010,"mutability":"mutable","name":"path","nameLocation":"33555:4:31","nodeType":"VariableDeclaration","scope":17015,"src":"33539:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17009,"name":"string","nodeType":"ElementaryTypeName","src":"33539:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17012,"mutability":"mutable","name":"recursive","nameLocation":"33566:9:31","nodeType":"VariableDeclaration","scope":17015,"src":"33561:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17011,"name":"bool","nodeType":"ElementaryTypeName","src":"33561:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33538:38:31"},"returnParameters":{"id":17014,"nodeType":"ParameterList","parameters":[],"src":"33585:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17023,"nodeType":"FunctionDefinition","src":"33816:93:31","nodes":[],"documentation":{"id":17016,"nodeType":"StructuredDocumentation","src":"33592:219:31","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"33825:10:31","parameters":{"id":17019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17018,"mutability":"mutable","name":"artifactPath","nameLocation":"33852:12:31","nodeType":"VariableDeclaration","scope":17023,"src":"33836:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17017,"name":"string","nodeType":"ElementaryTypeName","src":"33836:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33835:30:31"},"returnParameters":{"id":17022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17021,"mutability":"mutable","name":"deployedAddress","nameLocation":"33892:15:31","nodeType":"VariableDeclaration","scope":17023,"src":"33884:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17020,"name":"address","nodeType":"ElementaryTypeName","src":"33884:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33883:25:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17033,"nodeType":"FunctionDefinition","src":"34203:141:31","nodes":[],"documentation":{"id":17024,"nodeType":"StructuredDocumentation","src":"33915:283:31","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"34212:10:31","parameters":{"id":17029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17026,"mutability":"mutable","name":"artifactPath","nameLocation":"34239:12:31","nodeType":"VariableDeclaration","scope":17033,"src":"34223:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17025,"name":"string","nodeType":"ElementaryTypeName","src":"34223:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17028,"mutability":"mutable","name":"constructorArgs","nameLocation":"34268:15:31","nodeType":"VariableDeclaration","scope":17033,"src":"34253:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17027,"name":"bytes","nodeType":"ElementaryTypeName","src":"34253:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34222:62:31"},"returnParameters":{"id":17032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17031,"mutability":"mutable","name":"deployedAddress","nameLocation":"34327:15:31","nodeType":"VariableDeclaration","scope":17033,"src":"34319:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17030,"name":"address","nodeType":"ElementaryTypeName","src":"34319:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34318:25:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17041,"nodeType":"FunctionDefinition","src":"34439:74:31","nodes":[],"documentation":{"id":17034,"nodeType":"StructuredDocumentation","src":"34350:84:31","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"34448:6:31","parameters":{"id":17037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17036,"mutability":"mutable","name":"path","nameLocation":"34471:4:31","nodeType":"VariableDeclaration","scope":17041,"src":"34455:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17035,"name":"string","nodeType":"ElementaryTypeName","src":"34455:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34454:22:31"},"returnParameters":{"id":17040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17039,"mutability":"mutable","name":"result","nameLocation":"34505:6:31","nodeType":"VariableDeclaration","scope":17041,"src":"34500:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17038,"name":"bool","nodeType":"ElementaryTypeName","src":"34500:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34499:13:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17050,"nodeType":"FunctionDefinition","src":"34578:84:31","nodes":[],"documentation":{"id":17042,"nodeType":"StructuredDocumentation","src":"34519:54:31","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"34587:3:31","parameters":{"id":17046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17045,"mutability":"mutable","name":"commandInput","nameLocation":"34609:12:31","nodeType":"VariableDeclaration","scope":17050,"src":"34591:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17043,"name":"string","nodeType":"ElementaryTypeName","src":"34591:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17044,"nodeType":"ArrayTypeName","src":"34591:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34590:32:31"},"returnParameters":{"id":17049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17048,"mutability":"mutable","name":"result","nameLocation":"34654:6:31","nodeType":"VariableDeclaration","scope":17050,"src":"34641:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17047,"name":"bytes","nodeType":"ElementaryTypeName","src":"34641:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34640:21:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17059,"nodeType":"FunctionDefinition","src":"34761:93:31","nodes":[],"documentation":{"id":17051,"nodeType":"StructuredDocumentation","src":"34668:88:31","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"34770:10:31","parameters":{"id":17054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17053,"mutability":"mutable","name":"path","nameLocation":"34797:4:31","nodeType":"VariableDeclaration","scope":17059,"src":"34781:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17052,"name":"string","nodeType":"ElementaryTypeName","src":"34781:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34780:22:31"},"returnParameters":{"id":17058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17057,"mutability":"mutable","name":"metadata","nameLocation":"34844:8:31","nodeType":"VariableDeclaration","scope":17059,"src":"34826:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$16079_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":17056,"nodeType":"UserDefinedTypeName","pathNode":{"id":17055,"name":"FsMetadata","nameLocations":["34826:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":16079,"src":"34826:10:31"},"referencedDeclaration":16079,"src":"34826:10:31","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$16079_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"34825:28:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17067,"nodeType":"FunctionDefinition","src":"34923:95:31","nodes":[],"documentation":{"id":17060,"nodeType":"StructuredDocumentation","src":"34860:58:31","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"34932:21:31","parameters":{"id":17063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17062,"mutability":"mutable","name":"code","nameLocation":"34969:4:31","nodeType":"VariableDeclaration","scope":17067,"src":"34954:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17061,"name":"bytes","nodeType":"ElementaryTypeName","src":"34954:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34953:21:31"},"returnParameters":{"id":17066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17065,"mutability":"mutable","name":"path","nameLocation":"35012:4:31","nodeType":"VariableDeclaration","scope":17067,"src":"34998:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17064,"name":"string","nodeType":"ElementaryTypeName","src":"34998:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34997:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17075,"nodeType":"FunctionDefinition","src":"35095:111:31","nodes":[],"documentation":{"id":17068,"nodeType":"StructuredDocumentation","src":"35024:66:31","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"35104:29:31","parameters":{"id":17071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17070,"mutability":"mutable","name":"deployedCode","nameLocation":"35149:12:31","nodeType":"VariableDeclaration","scope":17075,"src":"35134:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17069,"name":"bytes","nodeType":"ElementaryTypeName","src":"35134:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35133:29:31"},"returnParameters":{"id":17074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17073,"mutability":"mutable","name":"path","nameLocation":"35200:4:31","nodeType":"VariableDeclaration","scope":17075,"src":"35186:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17072,"name":"string","nodeType":"ElementaryTypeName","src":"35186:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35185:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17089,"nodeType":"FunctionDefinition","src":"35501:166:31","nodes":[],"documentation":{"id":17076,"nodeType":"StructuredDocumentation","src":"35212:284:31","text":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`.\n For example:\n The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`.\n The most recent call can be fetched by passing `txType` as `CALL`."},"functionSelector":"3dc90cb3","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcast","nameLocation":"35510:12:31","parameters":{"id":17084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17078,"mutability":"mutable","name":"contractName","nameLocation":"35539:12:31","nodeType":"VariableDeclaration","scope":17089,"src":"35523:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17077,"name":"string","nodeType":"ElementaryTypeName","src":"35523:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17080,"mutability":"mutable","name":"chainId","nameLocation":"35560:7:31","nodeType":"VariableDeclaration","scope":17089,"src":"35553:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17079,"name":"uint64","nodeType":"ElementaryTypeName","src":"35553:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17083,"mutability":"mutable","name":"txType","nameLocation":"35585:6:31","nodeType":"VariableDeclaration","scope":17089,"src":"35569:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$16015","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":17082,"nodeType":"UserDefinedTypeName","pathNode":{"id":17081,"name":"BroadcastTxType","nameLocations":["35569:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":16015,"src":"35569:15:31"},"referencedDeclaration":16015,"src":"35569:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$16015","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"35522:70:31"},"returnParameters":{"id":17088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17089,"src":"35640:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$16189_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary"},"typeName":{"id":17086,"nodeType":"UserDefinedTypeName","pathNode":{"id":17085,"name":"BroadcastTxSummary","nameLocations":["35640:18:31"],"nodeType":"IdentifierPath","referencedDeclaration":16189,"src":"35640:18:31"},"referencedDeclaration":16189,"src":"35640:18:31","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$16189_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"visibility":"internal"}],"src":"35639:27:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17104,"nodeType":"FunctionDefinition","src":"35926:169:31","nodes":[],"documentation":{"id":17090,"nodeType":"StructuredDocumentation","src":"35673:248:31","text":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f7afe919","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"35935:13:31","parameters":{"id":17098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17092,"mutability":"mutable","name":"contractName","nameLocation":"35965:12:31","nodeType":"VariableDeclaration","scope":17104,"src":"35949:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17091,"name":"string","nodeType":"ElementaryTypeName","src":"35949:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17094,"mutability":"mutable","name":"chainId","nameLocation":"35986:7:31","nodeType":"VariableDeclaration","scope":17104,"src":"35979:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17093,"name":"uint64","nodeType":"ElementaryTypeName","src":"35979:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17097,"mutability":"mutable","name":"txType","nameLocation":"36011:6:31","nodeType":"VariableDeclaration","scope":17104,"src":"35995:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$16015","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":17096,"nodeType":"UserDefinedTypeName","pathNode":{"id":17095,"name":"BroadcastTxType","nameLocations":["35995:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":16015,"src":"35995:15:31"},"referencedDeclaration":16015,"src":"35995:15:31","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$16015","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"35948:70:31"},"returnParameters":{"id":17103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17104,"src":"36066:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$16189_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":17100,"nodeType":"UserDefinedTypeName","pathNode":{"id":17099,"name":"BroadcastTxSummary","nameLocations":["36066:18:31"],"nodeType":"IdentifierPath","referencedDeclaration":16189,"src":"36066:18:31"},"referencedDeclaration":16189,"src":"36066:18:31","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$16189_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":17101,"nodeType":"ArrayTypeName","src":"36066:20:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$16189_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"36065:29:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17116,"nodeType":"FunctionDefinition","src":"36326:145:31","nodes":[],"documentation":{"id":17105,"nodeType":"StructuredDocumentation","src":"36101:220:31","text":"Returns all broadcasts for the given contract on `chainId`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f2fa4a26","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"36335:13:31","parameters":{"id":17110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17107,"mutability":"mutable","name":"contractName","nameLocation":"36365:12:31","nodeType":"VariableDeclaration","scope":17116,"src":"36349:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17106,"name":"string","nodeType":"ElementaryTypeName","src":"36349:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17109,"mutability":"mutable","name":"chainId","nameLocation":"36386:7:31","nodeType":"VariableDeclaration","scope":17116,"src":"36379:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17108,"name":"uint64","nodeType":"ElementaryTypeName","src":"36379:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"36348:46:31"},"returnParameters":{"id":17115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17116,"src":"36442:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$16189_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":17112,"nodeType":"UserDefinedTypeName","pathNode":{"id":17111,"name":"BroadcastTxSummary","nameLocations":["36442:18:31"],"nodeType":"IdentifierPath","referencedDeclaration":16189,"src":"36442:18:31"},"referencedDeclaration":16189,"src":"36442:18:31","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$16189_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":17113,"nodeType":"ArrayTypeName","src":"36442:20:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$16189_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"36441:29:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17124,"nodeType":"FunctionDefinition","src":"36709:101:31","nodes":[],"documentation":{"id":17117,"nodeType":"StructuredDocumentation","src":"36477:227:31","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"36718:7:31","parameters":{"id":17120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17119,"mutability":"mutable","name":"artifactPath","nameLocation":"36742:12:31","nodeType":"VariableDeclaration","scope":17124,"src":"36726:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17118,"name":"string","nodeType":"ElementaryTypeName","src":"36726:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36725:30:31"},"returnParameters":{"id":17123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17122,"mutability":"mutable","name":"creationBytecode","nameLocation":"36792:16:31","nodeType":"VariableDeclaration","scope":17124,"src":"36779:29:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17121,"name":"bytes","nodeType":"ElementaryTypeName","src":"36779:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36778:31:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17132,"nodeType":"FunctionDefinition","src":"37048:108:31","nodes":[],"documentation":{"id":17125,"nodeType":"StructuredDocumentation","src":"36816:227:31","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"37057:15:31","parameters":{"id":17128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17127,"mutability":"mutable","name":"artifactPath","nameLocation":"37089:12:31","nodeType":"VariableDeclaration","scope":17132,"src":"37073:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17126,"name":"string","nodeType":"ElementaryTypeName","src":"37073:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37072:30:31"},"returnParameters":{"id":17131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17130,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"37139:15:31","nodeType":"VariableDeclaration","scope":17132,"src":"37126:28:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17129,"name":"bytes","nodeType":"ElementaryTypeName","src":"37126:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37125:30:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17140,"nodeType":"FunctionDefinition","src":"37232:101:31","nodes":[],"documentation":{"id":17133,"nodeType":"StructuredDocumentation","src":"37162:65:31","text":"Returns the most recent deployment for the current `chainId`."},"functionSelector":"a8091d97","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"37241:13:31","parameters":{"id":17136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17135,"mutability":"mutable","name":"contractName","nameLocation":"37271:12:31","nodeType":"VariableDeclaration","scope":17140,"src":"37255:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17134,"name":"string","nodeType":"ElementaryTypeName","src":"37255:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37254:30:31"},"returnParameters":{"id":17139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17138,"mutability":"mutable","name":"deployedAddress","nameLocation":"37316:15:31","nodeType":"VariableDeclaration","scope":17140,"src":"37308:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17137,"name":"address","nodeType":"ElementaryTypeName","src":"37308:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37307:25:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17150,"nodeType":"FunctionDefinition","src":"37418:141:31","nodes":[],"documentation":{"id":17141,"nodeType":"StructuredDocumentation","src":"37339:74:31","text":"Returns the most recent deployment for the given contract on `chainId`"},"functionSelector":"0debd5d6","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"37427:13:31","parameters":{"id":17146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17143,"mutability":"mutable","name":"contractName","nameLocation":"37457:12:31","nodeType":"VariableDeclaration","scope":17150,"src":"37441:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17142,"name":"string","nodeType":"ElementaryTypeName","src":"37441:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17145,"mutability":"mutable","name":"chainId","nameLocation":"37478:7:31","nodeType":"VariableDeclaration","scope":17150,"src":"37471:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17144,"name":"uint64","nodeType":"ElementaryTypeName","src":"37471:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"37440:46:31"},"returnParameters":{"id":17149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17148,"mutability":"mutable","name":"deployedAddress","nameLocation":"37542:15:31","nodeType":"VariableDeclaration","scope":17150,"src":"37534:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17147,"name":"address","nodeType":"ElementaryTypeName","src":"37534:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37533:25:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17161,"nodeType":"FunctionDefinition","src":"37828:153:31","nodes":[],"documentation":{"id":17151,"nodeType":"StructuredDocumentation","src":"37565:258:31","text":"Returns all deployments for the given contract on `chainId`\n Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber.\n The most recent deployment is the first element, and the oldest is the last."},"functionSelector":"74e133dd","implemented":false,"kind":"function","modifiers":[],"name":"getDeployments","nameLocation":"37837:14:31","parameters":{"id":17156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17153,"mutability":"mutable","name":"contractName","nameLocation":"37868:12:31","nodeType":"VariableDeclaration","scope":17161,"src":"37852:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17152,"name":"string","nodeType":"ElementaryTypeName","src":"37852:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17155,"mutability":"mutable","name":"chainId","nameLocation":"37889:7:31","nodeType":"VariableDeclaration","scope":17161,"src":"37882:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17154,"name":"uint64","nodeType":"ElementaryTypeName","src":"37882:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"37851:46:31"},"returnParameters":{"id":17160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17159,"mutability":"mutable","name":"deployedAddresses","nameLocation":"37962:17:31","nodeType":"VariableDeclaration","scope":17161,"src":"37945:34:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17157,"name":"address","nodeType":"ElementaryTypeName","src":"37945:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17158,"nodeType":"ArrayTypeName","src":"37945:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"37944:36:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17169,"nodeType":"FunctionDefinition","src":"38087:73:31","nodes":[],"documentation":{"id":17162,"nodeType":"StructuredDocumentation","src":"37987:95:31","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"38096:5:31","parameters":{"id":17165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17164,"mutability":"mutable","name":"path","nameLocation":"38118:4:31","nodeType":"VariableDeclaration","scope":17169,"src":"38102:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17163,"name":"string","nodeType":"ElementaryTypeName","src":"38102:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38101:22:31"},"returnParameters":{"id":17168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17167,"mutability":"mutable","name":"result","nameLocation":"38152:6:31","nodeType":"VariableDeclaration","scope":17169,"src":"38147:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17166,"name":"bool","nodeType":"ElementaryTypeName","src":"38147:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38146:13:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17177,"nodeType":"FunctionDefinition","src":"38269:74:31","nodes":[],"documentation":{"id":17170,"nodeType":"StructuredDocumentation","src":"38166:98:31","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"38278:6:31","parameters":{"id":17173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17172,"mutability":"mutable","name":"path","nameLocation":"38301:4:31","nodeType":"VariableDeclaration","scope":17177,"src":"38285:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17171,"name":"string","nodeType":"ElementaryTypeName","src":"38285:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38284:22:31"},"returnParameters":{"id":17176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17175,"mutability":"mutable","name":"result","nameLocation":"38335:6:31","nodeType":"VariableDeclaration","scope":17177,"src":"38330:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17174,"name":"bool","nodeType":"ElementaryTypeName","src":"38330:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38329:13:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17183,"nodeType":"FunctionDefinition","src":"38399:66:31","nodes":[],"documentation":{"id":17178,"nodeType":"StructuredDocumentation","src":"38349:45:31","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"38408:11:31","parameters":{"id":17179,"nodeType":"ParameterList","parameters":[],"src":"38419:2:31"},"returnParameters":{"id":17182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17181,"mutability":"mutable","name":"path","nameLocation":"38459:4:31","nodeType":"VariableDeclaration","scope":17183,"src":"38445:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17180,"name":"string","nodeType":"ElementaryTypeName","src":"38445:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38444:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17191,"nodeType":"FunctionDefinition","src":"38532:83:31","nodes":[],"documentation":{"id":17184,"nodeType":"StructuredDocumentation","src":"38471:56:31","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"38541:6:31","parameters":{"id":17187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17186,"mutability":"mutable","name":"promptText","nameLocation":"38564:10:31","nodeType":"VariableDeclaration","scope":17191,"src":"38548:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17185,"name":"string","nodeType":"ElementaryTypeName","src":"38548:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38547:28:31"},"returnParameters":{"id":17190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17189,"mutability":"mutable","name":"input","nameLocation":"38608:5:31","nodeType":"VariableDeclaration","scope":17191,"src":"38594:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17188,"name":"string","nodeType":"ElementaryTypeName","src":"38594:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38593:21:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17199,"nodeType":"FunctionDefinition","src":"38678:78:31","nodes":[],"documentation":{"id":17192,"nodeType":"StructuredDocumentation","src":"38621:52:31","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"38687:13:31","parameters":{"id":17195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17194,"mutability":"mutable","name":"promptText","nameLocation":"38717:10:31","nodeType":"VariableDeclaration","scope":17199,"src":"38701:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17193,"name":"string","nodeType":"ElementaryTypeName","src":"38701:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38700:28:31"},"returnParameters":{"id":17198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17199,"src":"38747:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17196,"name":"address","nodeType":"ElementaryTypeName","src":"38747:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38746:9:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17207,"nodeType":"FunctionDefinition","src":"38830:89:31","nodes":[],"documentation":{"id":17200,"nodeType":"StructuredDocumentation","src":"38762:63:31","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"38839:12:31","parameters":{"id":17203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17202,"mutability":"mutable","name":"promptText","nameLocation":"38868:10:31","nodeType":"VariableDeclaration","scope":17207,"src":"38852:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17201,"name":"string","nodeType":"ElementaryTypeName","src":"38852:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38851:28:31"},"returnParameters":{"id":17206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17205,"mutability":"mutable","name":"input","nameLocation":"38912:5:31","nodeType":"VariableDeclaration","scope":17207,"src":"38898:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17204,"name":"string","nodeType":"ElementaryTypeName","src":"38898:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38897:21:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17215,"nodeType":"FunctionDefinition","src":"38999:81:31","nodes":[],"documentation":{"id":17208,"nodeType":"StructuredDocumentation","src":"38925:69:31","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"39008:16:31","parameters":{"id":17211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17210,"mutability":"mutable","name":"promptText","nameLocation":"39041:10:31","nodeType":"VariableDeclaration","scope":17215,"src":"39025:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17209,"name":"string","nodeType":"ElementaryTypeName","src":"39025:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39024:28:31"},"returnParameters":{"id":17214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17215,"src":"39071:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17212,"name":"uint256","nodeType":"ElementaryTypeName","src":"39071:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39070:9:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17223,"nodeType":"FunctionDefinition","src":"39140:75:31","nodes":[],"documentation":{"id":17216,"nodeType":"StructuredDocumentation","src":"39086:49:31","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"39149:10:31","parameters":{"id":17219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17218,"mutability":"mutable","name":"promptText","nameLocation":"39176:10:31","nodeType":"VariableDeclaration","scope":17223,"src":"39160:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17217,"name":"string","nodeType":"ElementaryTypeName","src":"39160:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39159:28:31"},"returnParameters":{"id":17222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17223,"src":"39206:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17220,"name":"uint256","nodeType":"ElementaryTypeName","src":"39206:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39205:9:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17233,"nodeType":"FunctionDefinition","src":"39463:89:31","nodes":[],"documentation":{"id":17224,"nodeType":"StructuredDocumentation","src":"39221:237:31","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"39472:7:31","parameters":{"id":17227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17226,"mutability":"mutable","name":"path","nameLocation":"39496:4:31","nodeType":"VariableDeclaration","scope":17233,"src":"39480:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17225,"name":"string","nodeType":"ElementaryTypeName","src":"39480:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39479:22:31"},"returnParameters":{"id":17232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17231,"mutability":"mutable","name":"entries","nameLocation":"39543:7:31","nodeType":"VariableDeclaration","scope":17233,"src":"39525:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16063_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":17229,"nodeType":"UserDefinedTypeName","pathNode":{"id":17228,"name":"DirEntry","nameLocations":["39525:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":16063,"src":"39525:8:31"},"referencedDeclaration":16063,"src":"39525:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$16063_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":17230,"nodeType":"ArrayTypeName","src":"39525:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16063_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"39524:27:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17245,"nodeType":"FunctionDefinition","src":"39589:106:31","nodes":[],"documentation":{"id":17234,"nodeType":"StructuredDocumentation","src":"39558:26:31","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"39598:7:31","parameters":{"id":17239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17236,"mutability":"mutable","name":"path","nameLocation":"39622:4:31","nodeType":"VariableDeclaration","scope":17245,"src":"39606:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17235,"name":"string","nodeType":"ElementaryTypeName","src":"39606:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17238,"mutability":"mutable","name":"maxDepth","nameLocation":"39635:8:31","nodeType":"VariableDeclaration","scope":17245,"src":"39628:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17237,"name":"uint64","nodeType":"ElementaryTypeName","src":"39628:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"39605:39:31"},"returnParameters":{"id":17244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17243,"mutability":"mutable","name":"entries","nameLocation":"39686:7:31","nodeType":"VariableDeclaration","scope":17245,"src":"39668:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16063_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":17241,"nodeType":"UserDefinedTypeName","pathNode":{"id":17240,"name":"DirEntry","nameLocations":["39668:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":16063,"src":"39668:8:31"},"referencedDeclaration":16063,"src":"39668:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$16063_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":17242,"nodeType":"ArrayTypeName","src":"39668:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16063_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"39667:27:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17259,"nodeType":"FunctionDefinition","src":"39732:148:31","nodes":[],"documentation":{"id":17246,"nodeType":"StructuredDocumentation","src":"39701:26:31","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"39741:7:31","parameters":{"id":17253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17248,"mutability":"mutable","name":"path","nameLocation":"39765:4:31","nodeType":"VariableDeclaration","scope":17259,"src":"39749:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17247,"name":"string","nodeType":"ElementaryTypeName","src":"39749:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17250,"mutability":"mutable","name":"maxDepth","nameLocation":"39778:8:31","nodeType":"VariableDeclaration","scope":17259,"src":"39771:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17249,"name":"uint64","nodeType":"ElementaryTypeName","src":"39771:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17252,"mutability":"mutable","name":"followLinks","nameLocation":"39793:11:31","nodeType":"VariableDeclaration","scope":17259,"src":"39788:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17251,"name":"bool","nodeType":"ElementaryTypeName","src":"39788:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39748:57:31"},"returnParameters":{"id":17258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17257,"mutability":"mutable","name":"entries","nameLocation":"39871:7:31","nodeType":"VariableDeclaration","scope":17259,"src":"39853:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16063_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":17255,"nodeType":"UserDefinedTypeName","pathNode":{"id":17254,"name":"DirEntry","nameLocations":["39853:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":16063,"src":"39853:8:31"},"referencedDeclaration":16063,"src":"39853:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$16063_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":17256,"nodeType":"ArrayTypeName","src":"39853:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16063_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"39852:27:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17267,"nodeType":"FunctionDefinition","src":"39978:83:31","nodes":[],"documentation":{"id":17260,"nodeType":"StructuredDocumentation","src":"39886:87:31","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"39987:8:31","parameters":{"id":17263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17262,"mutability":"mutable","name":"path","nameLocation":"40012:4:31","nodeType":"VariableDeclaration","scope":17267,"src":"39996:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17261,"name":"string","nodeType":"ElementaryTypeName","src":"39996:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39995:22:31"},"returnParameters":{"id":17266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17265,"mutability":"mutable","name":"data","nameLocation":"40055:4:31","nodeType":"VariableDeclaration","scope":17267,"src":"40041:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17264,"name":"string","nodeType":"ElementaryTypeName","src":"40041:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40040:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17275,"nodeType":"FunctionDefinition","src":"40159:88:31","nodes":[],"documentation":{"id":17268,"nodeType":"StructuredDocumentation","src":"40067:87:31","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"40168:14:31","parameters":{"id":17271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17270,"mutability":"mutable","name":"path","nameLocation":"40199:4:31","nodeType":"VariableDeclaration","scope":17275,"src":"40183:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17269,"name":"string","nodeType":"ElementaryTypeName","src":"40183:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40182:22:31"},"returnParameters":{"id":17274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17273,"mutability":"mutable","name":"data","nameLocation":"40241:4:31","nodeType":"VariableDeclaration","scope":17275,"src":"40228:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17272,"name":"bytes","nodeType":"ElementaryTypeName","src":"40228:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40227:19:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17283,"nodeType":"FunctionDefinition","src":"40296:83:31","nodes":[],"documentation":{"id":17276,"nodeType":"StructuredDocumentation","src":"40253:38:31","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"40305:8:31","parameters":{"id":17279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17278,"mutability":"mutable","name":"path","nameLocation":"40330:4:31","nodeType":"VariableDeclaration","scope":17283,"src":"40314:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17277,"name":"string","nodeType":"ElementaryTypeName","src":"40314:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40313:22:31"},"returnParameters":{"id":17282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17281,"mutability":"mutable","name":"line","nameLocation":"40373:4:31","nodeType":"VariableDeclaration","scope":17283,"src":"40359:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17280,"name":"string","nodeType":"ElementaryTypeName","src":"40359:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40358:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17291,"nodeType":"FunctionDefinition","src":"40638:93:31","nodes":[],"documentation":{"id":17284,"nodeType":"StructuredDocumentation","src":"40385:248:31","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"40647:8:31","parameters":{"id":17287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17286,"mutability":"mutable","name":"linkPath","nameLocation":"40672:8:31","nodeType":"VariableDeclaration","scope":17291,"src":"40656:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17285,"name":"string","nodeType":"ElementaryTypeName","src":"40656:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40655:26:31"},"returnParameters":{"id":17290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17289,"mutability":"mutable","name":"targetPath","nameLocation":"40719:10:31","nodeType":"VariableDeclaration","scope":17291,"src":"40705:24:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17288,"name":"string","nodeType":"ElementaryTypeName","src":"40705:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40704:26:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17299,"nodeType":"FunctionDefinition","src":"41121:66:31","nodes":[],"documentation":{"id":17292,"nodeType":"StructuredDocumentation","src":"40737:379:31","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"41130:9:31","parameters":{"id":17297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17294,"mutability":"mutable","name":"path","nameLocation":"41156:4:31","nodeType":"VariableDeclaration","scope":17299,"src":"41140:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17293,"name":"string","nodeType":"ElementaryTypeName","src":"41140:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17296,"mutability":"mutable","name":"recursive","nameLocation":"41167:9:31","nodeType":"VariableDeclaration","scope":17299,"src":"41162:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17295,"name":"bool","nodeType":"ElementaryTypeName","src":"41162:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41139:38:31"},"returnParameters":{"id":17298,"nodeType":"ParameterList","parameters":[],"src":"41186:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17305,"nodeType":"FunctionDefinition","src":"41520:51:31","nodes":[],"documentation":{"id":17300,"nodeType":"StructuredDocumentation","src":"41193:322:31","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"41529:10:31","parameters":{"id":17303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17302,"mutability":"mutable","name":"path","nameLocation":"41556:4:31","nodeType":"VariableDeclaration","scope":17305,"src":"41540:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17301,"name":"string","nodeType":"ElementaryTypeName","src":"41540:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41539:22:31"},"returnParameters":{"id":17304,"nodeType":"ParameterList","parameters":[],"src":"41570:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17315,"nodeType":"FunctionDefinition","src":"41678:91:31","nodes":[],"documentation":{"id":17306,"nodeType":"StructuredDocumentation","src":"41577:96:31","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"41687:6:31","parameters":{"id":17310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17309,"mutability":"mutable","name":"commandInput","nameLocation":"41712:12:31","nodeType":"VariableDeclaration","scope":17315,"src":"41694:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17307,"name":"string","nodeType":"ElementaryTypeName","src":"41694:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17308,"nodeType":"ArrayTypeName","src":"41694:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"41693:32:31"},"returnParameters":{"id":17314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17313,"mutability":"mutable","name":"result","nameLocation":"41761:6:31","nodeType":"VariableDeclaration","scope":17315,"src":"41744:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$16097_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":17312,"nodeType":"UserDefinedTypeName","pathNode":{"id":17311,"name":"FfiResult","nameLocations":["41744:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":16097,"src":"41744:9:31"},"referencedDeclaration":16097,"src":"41744:9:31","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$16097_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"41743:25:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17321,"nodeType":"FunctionDefinition","src":"41834:65:31","nodes":[],"documentation":{"id":17316,"nodeType":"StructuredDocumentation","src":"41775:54:31","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"41843:8:31","parameters":{"id":17317,"nodeType":"ParameterList","parameters":[],"src":"41851:2:31"},"returnParameters":{"id":17320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17319,"mutability":"mutable","name":"milliseconds","nameLocation":"41885:12:31","nodeType":"VariableDeclaration","scope":17321,"src":"41877:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17318,"name":"uint256","nodeType":"ElementaryTypeName","src":"41877:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41876:22:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17329,"nodeType":"FunctionDefinition","src":"42068:72:31","nodes":[],"documentation":{"id":17322,"nodeType":"StructuredDocumentation","src":"41905:158:31","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"42077:9:31","parameters":{"id":17327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17324,"mutability":"mutable","name":"path","nameLocation":"42103:4:31","nodeType":"VariableDeclaration","scope":17329,"src":"42087:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17323,"name":"string","nodeType":"ElementaryTypeName","src":"42087:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17326,"mutability":"mutable","name":"data","nameLocation":"42125:4:31","nodeType":"VariableDeclaration","scope":17329,"src":"42109:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17325,"name":"string","nodeType":"ElementaryTypeName","src":"42109:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42086:44:31"},"returnParameters":{"id":17328,"nodeType":"ParameterList","parameters":[],"src":"42139:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17337,"nodeType":"FunctionDefinition","src":"42318:77:31","nodes":[],"documentation":{"id":17330,"nodeType":"StructuredDocumentation","src":"42146:167:31","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"42327:15:31","parameters":{"id":17335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17332,"mutability":"mutable","name":"path","nameLocation":"42359:4:31","nodeType":"VariableDeclaration","scope":17337,"src":"42343:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17331,"name":"string","nodeType":"ElementaryTypeName","src":"42343:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17334,"mutability":"mutable","name":"data","nameLocation":"42380:4:31","nodeType":"VariableDeclaration","scope":17337,"src":"42365:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17333,"name":"bytes","nodeType":"ElementaryTypeName","src":"42365:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42342:43:31"},"returnParameters":{"id":17336,"nodeType":"ParameterList","parameters":[],"src":"42394:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17345,"nodeType":"FunctionDefinition","src":"42516:72:31","nodes":[],"documentation":{"id":17338,"nodeType":"StructuredDocumentation","src":"42401:110:31","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"42525:9:31","parameters":{"id":17343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17340,"mutability":"mutable","name":"path","nameLocation":"42551:4:31","nodeType":"VariableDeclaration","scope":17345,"src":"42535:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17339,"name":"string","nodeType":"ElementaryTypeName","src":"42535:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17342,"mutability":"mutable","name":"data","nameLocation":"42573:4:31","nodeType":"VariableDeclaration","scope":17345,"src":"42557:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17341,"name":"string","nodeType":"ElementaryTypeName","src":"42557:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42534:44:31"},"returnParameters":{"id":17344,"nodeType":"ParameterList","parameters":[],"src":"42587:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17355,"nodeType":"FunctionDefinition","src":"42674:95:31","nodes":[],"documentation":{"id":17346,"nodeType":"StructuredDocumentation","src":"42625:44:31","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"42683:13:31","parameters":{"id":17351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17348,"mutability":"mutable","name":"json","nameLocation":"42713:4:31","nodeType":"VariableDeclaration","scope":17355,"src":"42697:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17347,"name":"string","nodeType":"ElementaryTypeName","src":"42697:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17350,"mutability":"mutable","name":"key","nameLocation":"42735:3:31","nodeType":"VariableDeclaration","scope":17355,"src":"42719:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17349,"name":"string","nodeType":"ElementaryTypeName","src":"42719:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42696:43:31"},"returnParameters":{"id":17354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17355,"src":"42763:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17352,"name":"bool","nodeType":"ElementaryTypeName","src":"42763:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42762:6:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17365,"nodeType":"FunctionDefinition","src":"42850:101:31","nodes":[],"documentation":{"id":17356,"nodeType":"StructuredDocumentation","src":"42775:70:31","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"42859:16:31","parameters":{"id":17361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17358,"mutability":"mutable","name":"json","nameLocation":"42892:4:31","nodeType":"VariableDeclaration","scope":17365,"src":"42876:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17357,"name":"string","nodeType":"ElementaryTypeName","src":"42876:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17360,"mutability":"mutable","name":"key","nameLocation":"42914:3:31","nodeType":"VariableDeclaration","scope":17365,"src":"42898:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17359,"name":"string","nodeType":"ElementaryTypeName","src":"42898:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42875:43:31"},"returnParameters":{"id":17364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17365,"src":"42942:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17362,"name":"address","nodeType":"ElementaryTypeName","src":"42942:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42941:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17376,"nodeType":"FunctionDefinition","src":"43034:139:31","nodes":[],"documentation":{"id":17366,"nodeType":"StructuredDocumentation","src":"42957:72:31","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"43043:21:31","parameters":{"id":17371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17368,"mutability":"mutable","name":"json","nameLocation":"43081:4:31","nodeType":"VariableDeclaration","scope":17376,"src":"43065:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17367,"name":"string","nodeType":"ElementaryTypeName","src":"43065:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17370,"mutability":"mutable","name":"key","nameLocation":"43103:3:31","nodeType":"VariableDeclaration","scope":17376,"src":"43087:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17369,"name":"string","nodeType":"ElementaryTypeName","src":"43087:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43064:43:31"},"returnParameters":{"id":17375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17376,"src":"43155:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17372,"name":"address","nodeType":"ElementaryTypeName","src":"43155:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17373,"nodeType":"ArrayTypeName","src":"43155:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"43154:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17386,"nodeType":"FunctionDefinition","src":"43251:95:31","nodes":[],"documentation":{"id":17377,"nodeType":"StructuredDocumentation","src":"43179:67:31","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"43260:13:31","parameters":{"id":17382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17379,"mutability":"mutable","name":"json","nameLocation":"43290:4:31","nodeType":"VariableDeclaration","scope":17386,"src":"43274:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17378,"name":"string","nodeType":"ElementaryTypeName","src":"43274:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17381,"mutability":"mutable","name":"key","nameLocation":"43312:3:31","nodeType":"VariableDeclaration","scope":17386,"src":"43296:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17380,"name":"string","nodeType":"ElementaryTypeName","src":"43296:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43273:43:31"},"returnParameters":{"id":17385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17386,"src":"43340:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17383,"name":"bool","nodeType":"ElementaryTypeName","src":"43340:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43339:6:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17397,"nodeType":"FunctionDefinition","src":"43426:109:31","nodes":[],"documentation":{"id":17387,"nodeType":"StructuredDocumentation","src":"43352:69:31","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"43435:18:31","parameters":{"id":17392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17389,"mutability":"mutable","name":"json","nameLocation":"43470:4:31","nodeType":"VariableDeclaration","scope":17397,"src":"43454:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17388,"name":"string","nodeType":"ElementaryTypeName","src":"43454:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17391,"mutability":"mutable","name":"key","nameLocation":"43492:3:31","nodeType":"VariableDeclaration","scope":17397,"src":"43476:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17390,"name":"string","nodeType":"ElementaryTypeName","src":"43476:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43453:43:31"},"returnParameters":{"id":17396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17397,"src":"43520:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17393,"name":"bool","nodeType":"ElementaryTypeName","src":"43520:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17394,"nodeType":"ArrayTypeName","src":"43520:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"43519:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17407,"nodeType":"FunctionDefinition","src":"43614:104:31","nodes":[],"documentation":{"id":17398,"nodeType":"StructuredDocumentation","src":"43541:68:31","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"43623:14:31","parameters":{"id":17403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17400,"mutability":"mutable","name":"json","nameLocation":"43654:4:31","nodeType":"VariableDeclaration","scope":17407,"src":"43638:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17399,"name":"string","nodeType":"ElementaryTypeName","src":"43638:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17402,"mutability":"mutable","name":"key","nameLocation":"43676:3:31","nodeType":"VariableDeclaration","scope":17407,"src":"43660:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17401,"name":"string","nodeType":"ElementaryTypeName","src":"43660:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43637:43:31"},"returnParameters":{"id":17406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17407,"src":"43704:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17404,"name":"bytes","nodeType":"ElementaryTypeName","src":"43704:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43703:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17417,"nodeType":"FunctionDefinition","src":"43799:101:31","nodes":[],"documentation":{"id":17408,"nodeType":"StructuredDocumentation","src":"43724:70:31","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"43808:16:31","parameters":{"id":17413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17410,"mutability":"mutable","name":"json","nameLocation":"43841:4:31","nodeType":"VariableDeclaration","scope":17417,"src":"43825:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17409,"name":"string","nodeType":"ElementaryTypeName","src":"43825:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17412,"mutability":"mutable","name":"key","nameLocation":"43863:3:31","nodeType":"VariableDeclaration","scope":17417,"src":"43847:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17411,"name":"string","nodeType":"ElementaryTypeName","src":"43847:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43824:43:31"},"returnParameters":{"id":17416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17417,"src":"43891:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"43891:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"43890:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17428,"nodeType":"FunctionDefinition","src":"43983:139:31","nodes":[],"documentation":{"id":17418,"nodeType":"StructuredDocumentation","src":"43906:72:31","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"43992:21:31","parameters":{"id":17423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17420,"mutability":"mutable","name":"json","nameLocation":"44030:4:31","nodeType":"VariableDeclaration","scope":17428,"src":"44014:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17419,"name":"string","nodeType":"ElementaryTypeName","src":"44014:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17422,"mutability":"mutable","name":"key","nameLocation":"44052:3:31","nodeType":"VariableDeclaration","scope":17428,"src":"44036:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17421,"name":"string","nodeType":"ElementaryTypeName","src":"44036:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44013:43:31"},"returnParameters":{"id":17427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17428,"src":"44104:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"44104:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17425,"nodeType":"ArrayTypeName","src":"44104:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"44103:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17439,"nodeType":"FunctionDefinition","src":"44203:111:31","nodes":[],"documentation":{"id":17429,"nodeType":"StructuredDocumentation","src":"44128:70:31","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"44212:19:31","parameters":{"id":17434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17431,"mutability":"mutable","name":"json","nameLocation":"44248:4:31","nodeType":"VariableDeclaration","scope":17439,"src":"44232:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17430,"name":"string","nodeType":"ElementaryTypeName","src":"44232:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17433,"mutability":"mutable","name":"key","nameLocation":"44270:3:31","nodeType":"VariableDeclaration","scope":17439,"src":"44254:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17432,"name":"string","nodeType":"ElementaryTypeName","src":"44254:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44231:43:31"},"returnParameters":{"id":17438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17439,"src":"44298:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17435,"name":"bytes","nodeType":"ElementaryTypeName","src":"44298:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17436,"nodeType":"ArrayTypeName","src":"44298:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"44297:16:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17449,"nodeType":"FunctionDefinition","src":"44394:96:31","nodes":[],"documentation":{"id":17440,"nodeType":"StructuredDocumentation","src":"44320:69:31","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"44403:12:31","parameters":{"id":17445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17442,"mutability":"mutable","name":"json","nameLocation":"44432:4:31","nodeType":"VariableDeclaration","scope":17449,"src":"44416:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17441,"name":"string","nodeType":"ElementaryTypeName","src":"44416:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17444,"mutability":"mutable","name":"key","nameLocation":"44454:3:31","nodeType":"VariableDeclaration","scope":17449,"src":"44438:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17443,"name":"string","nodeType":"ElementaryTypeName","src":"44438:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44415:43:31"},"returnParameters":{"id":17448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17449,"src":"44482:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17446,"name":"int256","nodeType":"ElementaryTypeName","src":"44482:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"44481:8:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17460,"nodeType":"FunctionDefinition","src":"44572:110:31","nodes":[],"documentation":{"id":17450,"nodeType":"StructuredDocumentation","src":"44496:71:31","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"44581:17:31","parameters":{"id":17455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17452,"mutability":"mutable","name":"json","nameLocation":"44615:4:31","nodeType":"VariableDeclaration","scope":17460,"src":"44599:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17451,"name":"string","nodeType":"ElementaryTypeName","src":"44599:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17454,"mutability":"mutable","name":"key","nameLocation":"44637:3:31","nodeType":"VariableDeclaration","scope":17460,"src":"44621:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17453,"name":"string","nodeType":"ElementaryTypeName","src":"44621:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44598:43:31"},"returnParameters":{"id":17459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17460,"src":"44665:15:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17456,"name":"int256","nodeType":"ElementaryTypeName","src":"44665:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17457,"nodeType":"ArrayTypeName","src":"44665:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"44664:17:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17471,"nodeType":"FunctionDefinition","src":"44747:111:31","nodes":[],"documentation":{"id":17461,"nodeType":"StructuredDocumentation","src":"44688:54:31","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"44756:13:31","parameters":{"id":17466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17463,"mutability":"mutable","name":"json","nameLocation":"44786:4:31","nodeType":"VariableDeclaration","scope":17471,"src":"44770:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17462,"name":"string","nodeType":"ElementaryTypeName","src":"44770:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17465,"mutability":"mutable","name":"key","nameLocation":"44808:3:31","nodeType":"VariableDeclaration","scope":17471,"src":"44792:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17464,"name":"string","nodeType":"ElementaryTypeName","src":"44792:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44769:43:31"},"returnParameters":{"id":17470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17469,"mutability":"mutable","name":"keys","nameLocation":"44852:4:31","nodeType":"VariableDeclaration","scope":17471,"src":"44836:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17467,"name":"string","nodeType":"ElementaryTypeName","src":"44836:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17468,"nodeType":"ArrayTypeName","src":"44836:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"44835:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17481,"nodeType":"FunctionDefinition","src":"44938:106:31","nodes":[],"documentation":{"id":17472,"nodeType":"StructuredDocumentation","src":"44864:69:31","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"44947:15:31","parameters":{"id":17477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17474,"mutability":"mutable","name":"json","nameLocation":"44979:4:31","nodeType":"VariableDeclaration","scope":17481,"src":"44963:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17473,"name":"string","nodeType":"ElementaryTypeName","src":"44963:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17476,"mutability":"mutable","name":"key","nameLocation":"45001:3:31","nodeType":"VariableDeclaration","scope":17481,"src":"44985:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17475,"name":"string","nodeType":"ElementaryTypeName","src":"44985:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44962:43:31"},"returnParameters":{"id":17480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17481,"src":"45029:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17478,"name":"string","nodeType":"ElementaryTypeName","src":"45029:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45028:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17492,"nodeType":"FunctionDefinition","src":"45126:113:31","nodes":[],"documentation":{"id":17482,"nodeType":"StructuredDocumentation","src":"45050:71:31","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"45135:20:31","parameters":{"id":17487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17484,"mutability":"mutable","name":"json","nameLocation":"45172:4:31","nodeType":"VariableDeclaration","scope":17492,"src":"45156:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17483,"name":"string","nodeType":"ElementaryTypeName","src":"45156:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17486,"mutability":"mutable","name":"key","nameLocation":"45194:3:31","nodeType":"VariableDeclaration","scope":17492,"src":"45178:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17485,"name":"string","nodeType":"ElementaryTypeName","src":"45178:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45155:43:31"},"returnParameters":{"id":17491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17492,"src":"45222:15:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17488,"name":"string","nodeType":"ElementaryTypeName","src":"45222:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17489,"nodeType":"ArrayTypeName","src":"45222:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"45221:17:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17504,"nodeType":"FunctionDefinition","src":"45356:165:31","nodes":[],"documentation":{"id":17493,"nodeType":"StructuredDocumentation","src":"45245:106:31","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"45365:18:31","parameters":{"id":17500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17495,"mutability":"mutable","name":"json","nameLocation":"45400:4:31","nodeType":"VariableDeclaration","scope":17504,"src":"45384:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17494,"name":"string","nodeType":"ElementaryTypeName","src":"45384:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17497,"mutability":"mutable","name":"key","nameLocation":"45422:3:31","nodeType":"VariableDeclaration","scope":17504,"src":"45406:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17496,"name":"string","nodeType":"ElementaryTypeName","src":"45406:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17499,"mutability":"mutable","name":"typeDescription","nameLocation":"45443:15:31","nodeType":"VariableDeclaration","scope":17504,"src":"45427:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17498,"name":"string","nodeType":"ElementaryTypeName","src":"45427:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45383:76:31"},"returnParameters":{"id":17503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17504,"src":"45507:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17501,"name":"bytes","nodeType":"ElementaryTypeName","src":"45507:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45506:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17514,"nodeType":"FunctionDefinition","src":"45623:139:31","nodes":[],"documentation":{"id":17505,"nodeType":"StructuredDocumentation","src":"45527:91:31","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"45632:13:31","parameters":{"id":17510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17507,"mutability":"mutable","name":"json","nameLocation":"45662:4:31","nodeType":"VariableDeclaration","scope":17514,"src":"45646:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17506,"name":"string","nodeType":"ElementaryTypeName","src":"45646:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17509,"mutability":"mutable","name":"typeDescription","nameLocation":"45684:15:31","nodeType":"VariableDeclaration","scope":17514,"src":"45668:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17508,"name":"string","nodeType":"ElementaryTypeName","src":"45668:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45645:55:31"},"returnParameters":{"id":17513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17514,"src":"45748:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17511,"name":"bytes","nodeType":"ElementaryTypeName","src":"45748:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45747:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17526,"nodeType":"FunctionDefinition","src":"45873:160:31","nodes":[],"documentation":{"id":17515,"nodeType":"StructuredDocumentation","src":"45768:100:31","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"45882:13:31","parameters":{"id":17522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17517,"mutability":"mutable","name":"json","nameLocation":"45912:4:31","nodeType":"VariableDeclaration","scope":17526,"src":"45896:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17516,"name":"string","nodeType":"ElementaryTypeName","src":"45896:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17519,"mutability":"mutable","name":"key","nameLocation":"45934:3:31","nodeType":"VariableDeclaration","scope":17526,"src":"45918:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17518,"name":"string","nodeType":"ElementaryTypeName","src":"45918:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17521,"mutability":"mutable","name":"typeDescription","nameLocation":"45955:15:31","nodeType":"VariableDeclaration","scope":17526,"src":"45939:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17520,"name":"string","nodeType":"ElementaryTypeName","src":"45939:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45895:76:31"},"returnParameters":{"id":17525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17526,"src":"46019:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17523,"name":"bytes","nodeType":"ElementaryTypeName","src":"46019:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46018:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17536,"nodeType":"FunctionDefinition","src":"46114:98:31","nodes":[],"documentation":{"id":17527,"nodeType":"StructuredDocumentation","src":"46039:70:31","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"46123:13:31","parameters":{"id":17532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17529,"mutability":"mutable","name":"json","nameLocation":"46153:4:31","nodeType":"VariableDeclaration","scope":17536,"src":"46137:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17528,"name":"string","nodeType":"ElementaryTypeName","src":"46137:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17531,"mutability":"mutable","name":"key","nameLocation":"46175:3:31","nodeType":"VariableDeclaration","scope":17536,"src":"46159:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17530,"name":"string","nodeType":"ElementaryTypeName","src":"46159:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46136:43:31"},"returnParameters":{"id":17535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17536,"src":"46203:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17533,"name":"uint256","nodeType":"ElementaryTypeName","src":"46203:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46202:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17547,"nodeType":"FunctionDefinition","src":"46295:112:31","nodes":[],"documentation":{"id":17537,"nodeType":"StructuredDocumentation","src":"46218:72:31","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"46304:18:31","parameters":{"id":17542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17539,"mutability":"mutable","name":"json","nameLocation":"46339:4:31","nodeType":"VariableDeclaration","scope":17547,"src":"46323:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17538,"name":"string","nodeType":"ElementaryTypeName","src":"46323:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17541,"mutability":"mutable","name":"key","nameLocation":"46361:3:31","nodeType":"VariableDeclaration","scope":17547,"src":"46345:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17540,"name":"string","nodeType":"ElementaryTypeName","src":"46345:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46322:43:31"},"returnParameters":{"id":17546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17547,"src":"46389:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17543,"name":"uint256","nodeType":"ElementaryTypeName","src":"46389:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17544,"nodeType":"ArrayTypeName","src":"46389:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"46388:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17555,"nodeType":"FunctionDefinition","src":"46448:93:31","nodes":[],"documentation":{"id":17548,"nodeType":"StructuredDocumentation","src":"46413:30:31","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"46457:9:31","parameters":{"id":17551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17550,"mutability":"mutable","name":"json","nameLocation":"46483:4:31","nodeType":"VariableDeclaration","scope":17555,"src":"46467:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17549,"name":"string","nodeType":"ElementaryTypeName","src":"46467:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46466:22:31"},"returnParameters":{"id":17554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17553,"mutability":"mutable","name":"abiEncodedData","nameLocation":"46525:14:31","nodeType":"VariableDeclaration","scope":17555,"src":"46512:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17552,"name":"bytes","nodeType":"ElementaryTypeName","src":"46512:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46511:29:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17565,"nodeType":"FunctionDefinition","src":"46591:114:31","nodes":[],"documentation":{"id":17556,"nodeType":"StructuredDocumentation","src":"46547:39:31","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"46600:9:31","parameters":{"id":17561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17558,"mutability":"mutable","name":"json","nameLocation":"46626:4:31","nodeType":"VariableDeclaration","scope":17565,"src":"46610:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17557,"name":"string","nodeType":"ElementaryTypeName","src":"46610:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17560,"mutability":"mutable","name":"key","nameLocation":"46648:3:31","nodeType":"VariableDeclaration","scope":17565,"src":"46632:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17559,"name":"string","nodeType":"ElementaryTypeName","src":"46632:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46609:43:31"},"returnParameters":{"id":17564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17563,"mutability":"mutable","name":"abiEncodedData","nameLocation":"46689:14:31","nodeType":"VariableDeclaration","scope":17565,"src":"46676:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17562,"name":"bytes","nodeType":"ElementaryTypeName","src":"46676:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46675:29:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17577,"nodeType":"FunctionDefinition","src":"46740:148:31","nodes":[],"documentation":{"id":17566,"nodeType":"StructuredDocumentation","src":"46711:24:31","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"46749:16:31","parameters":{"id":17573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17568,"mutability":"mutable","name":"objectKey","nameLocation":"46782:9:31","nodeType":"VariableDeclaration","scope":17577,"src":"46766:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17567,"name":"string","nodeType":"ElementaryTypeName","src":"46766:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17570,"mutability":"mutable","name":"valueKey","nameLocation":"46809:8:31","nodeType":"VariableDeclaration","scope":17577,"src":"46793:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17569,"name":"string","nodeType":"ElementaryTypeName","src":"46793:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17572,"mutability":"mutable","name":"value","nameLocation":"46827:5:31","nodeType":"VariableDeclaration","scope":17577,"src":"46819:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17571,"name":"address","nodeType":"ElementaryTypeName","src":"46819:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46765:68:31"},"returnParameters":{"id":17576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17575,"mutability":"mutable","name":"json","nameLocation":"46882:4:31","nodeType":"VariableDeclaration","scope":17577,"src":"46868:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17574,"name":"string","nodeType":"ElementaryTypeName","src":"46868:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46867:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17590,"nodeType":"FunctionDefinition","src":"46923:160:31","nodes":[],"documentation":{"id":17578,"nodeType":"StructuredDocumentation","src":"46894:24:31","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"46932:16:31","parameters":{"id":17586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17580,"mutability":"mutable","name":"objectKey","nameLocation":"46965:9:31","nodeType":"VariableDeclaration","scope":17590,"src":"46949:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17579,"name":"string","nodeType":"ElementaryTypeName","src":"46949:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17582,"mutability":"mutable","name":"valueKey","nameLocation":"46992:8:31","nodeType":"VariableDeclaration","scope":17590,"src":"46976:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17581,"name":"string","nodeType":"ElementaryTypeName","src":"46976:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17585,"mutability":"mutable","name":"values","nameLocation":"47021:6:31","nodeType":"VariableDeclaration","scope":17590,"src":"47002:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17583,"name":"address","nodeType":"ElementaryTypeName","src":"47002:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17584,"nodeType":"ArrayTypeName","src":"47002:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"46948:80:31"},"returnParameters":{"id":17589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17588,"mutability":"mutable","name":"json","nameLocation":"47077:4:31","nodeType":"VariableDeclaration","scope":17590,"src":"47063:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17587,"name":"string","nodeType":"ElementaryTypeName","src":"47063:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47062:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17602,"nodeType":"FunctionDefinition","src":"47118:142:31","nodes":[],"documentation":{"id":17591,"nodeType":"StructuredDocumentation","src":"47089:24:31","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"47127:13:31","parameters":{"id":17598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17593,"mutability":"mutable","name":"objectKey","nameLocation":"47157:9:31","nodeType":"VariableDeclaration","scope":17602,"src":"47141:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17592,"name":"string","nodeType":"ElementaryTypeName","src":"47141:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17595,"mutability":"mutable","name":"valueKey","nameLocation":"47184:8:31","nodeType":"VariableDeclaration","scope":17602,"src":"47168:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17594,"name":"string","nodeType":"ElementaryTypeName","src":"47168:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17597,"mutability":"mutable","name":"value","nameLocation":"47199:5:31","nodeType":"VariableDeclaration","scope":17602,"src":"47194:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17596,"name":"bool","nodeType":"ElementaryTypeName","src":"47194:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"47140:65:31"},"returnParameters":{"id":17601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17600,"mutability":"mutable","name":"json","nameLocation":"47254:4:31","nodeType":"VariableDeclaration","scope":17602,"src":"47240:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17599,"name":"string","nodeType":"ElementaryTypeName","src":"47240:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47239:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17615,"nodeType":"FunctionDefinition","src":"47295:154:31","nodes":[],"documentation":{"id":17603,"nodeType":"StructuredDocumentation","src":"47266:24:31","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"47304:13:31","parameters":{"id":17611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17605,"mutability":"mutable","name":"objectKey","nameLocation":"47334:9:31","nodeType":"VariableDeclaration","scope":17615,"src":"47318:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17604,"name":"string","nodeType":"ElementaryTypeName","src":"47318:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17607,"mutability":"mutable","name":"valueKey","nameLocation":"47361:8:31","nodeType":"VariableDeclaration","scope":17615,"src":"47345:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17606,"name":"string","nodeType":"ElementaryTypeName","src":"47345:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17610,"mutability":"mutable","name":"values","nameLocation":"47387:6:31","nodeType":"VariableDeclaration","scope":17615,"src":"47371:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17608,"name":"bool","nodeType":"ElementaryTypeName","src":"47371:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17609,"nodeType":"ArrayTypeName","src":"47371:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"47317:77:31"},"returnParameters":{"id":17614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17613,"mutability":"mutable","name":"json","nameLocation":"47443:4:31","nodeType":"VariableDeclaration","scope":17615,"src":"47429:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17612,"name":"string","nodeType":"ElementaryTypeName","src":"47429:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47428:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17627,"nodeType":"FunctionDefinition","src":"47484:148:31","nodes":[],"documentation":{"id":17616,"nodeType":"StructuredDocumentation","src":"47455:24:31","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"47493:16:31","parameters":{"id":17623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17618,"mutability":"mutable","name":"objectKey","nameLocation":"47526:9:31","nodeType":"VariableDeclaration","scope":17627,"src":"47510:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17617,"name":"string","nodeType":"ElementaryTypeName","src":"47510:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17620,"mutability":"mutable","name":"valueKey","nameLocation":"47553:8:31","nodeType":"VariableDeclaration","scope":17627,"src":"47537:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17619,"name":"string","nodeType":"ElementaryTypeName","src":"47537:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17622,"mutability":"mutable","name":"value","nameLocation":"47571:5:31","nodeType":"VariableDeclaration","scope":17627,"src":"47563:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47563:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47509:68:31"},"returnParameters":{"id":17626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17625,"mutability":"mutable","name":"json","nameLocation":"47626:4:31","nodeType":"VariableDeclaration","scope":17627,"src":"47612:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17624,"name":"string","nodeType":"ElementaryTypeName","src":"47612:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47611:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17640,"nodeType":"FunctionDefinition","src":"47667:160:31","nodes":[],"documentation":{"id":17628,"nodeType":"StructuredDocumentation","src":"47638:24:31","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"47676:16:31","parameters":{"id":17636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17630,"mutability":"mutable","name":"objectKey","nameLocation":"47709:9:31","nodeType":"VariableDeclaration","scope":17640,"src":"47693:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17629,"name":"string","nodeType":"ElementaryTypeName","src":"47693:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17632,"mutability":"mutable","name":"valueKey","nameLocation":"47736:8:31","nodeType":"VariableDeclaration","scope":17640,"src":"47720:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17631,"name":"string","nodeType":"ElementaryTypeName","src":"47720:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17635,"mutability":"mutable","name":"values","nameLocation":"47765:6:31","nodeType":"VariableDeclaration","scope":17640,"src":"47746:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47746:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17634,"nodeType":"ArrayTypeName","src":"47746:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"47692:80:31"},"returnParameters":{"id":17639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17638,"mutability":"mutable","name":"json","nameLocation":"47821:4:31","nodeType":"VariableDeclaration","scope":17640,"src":"47807:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17637,"name":"string","nodeType":"ElementaryTypeName","src":"47807:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47806:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17652,"nodeType":"FunctionDefinition","src":"47862:153:31","nodes":[],"documentation":{"id":17641,"nodeType":"StructuredDocumentation","src":"47833:24:31","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"47871:14:31","parameters":{"id":17648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17643,"mutability":"mutable","name":"objectKey","nameLocation":"47902:9:31","nodeType":"VariableDeclaration","scope":17652,"src":"47886:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17642,"name":"string","nodeType":"ElementaryTypeName","src":"47886:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17645,"mutability":"mutable","name":"valueKey","nameLocation":"47929:8:31","nodeType":"VariableDeclaration","scope":17652,"src":"47913:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17644,"name":"string","nodeType":"ElementaryTypeName","src":"47913:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17647,"mutability":"mutable","name":"value","nameLocation":"47954:5:31","nodeType":"VariableDeclaration","scope":17652,"src":"47939:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17646,"name":"bytes","nodeType":"ElementaryTypeName","src":"47939:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47885:75:31"},"returnParameters":{"id":17651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17650,"mutability":"mutable","name":"json","nameLocation":"48009:4:31","nodeType":"VariableDeclaration","scope":17652,"src":"47995:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17649,"name":"string","nodeType":"ElementaryTypeName","src":"47995:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47994:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17665,"nodeType":"FunctionDefinition","src":"48050:156:31","nodes":[],"documentation":{"id":17653,"nodeType":"StructuredDocumentation","src":"48021:24:31","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"48059:14:31","parameters":{"id":17661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17655,"mutability":"mutable","name":"objectKey","nameLocation":"48090:9:31","nodeType":"VariableDeclaration","scope":17665,"src":"48074:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17654,"name":"string","nodeType":"ElementaryTypeName","src":"48074:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17657,"mutability":"mutable","name":"valueKey","nameLocation":"48117:8:31","nodeType":"VariableDeclaration","scope":17665,"src":"48101:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17656,"name":"string","nodeType":"ElementaryTypeName","src":"48101:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17660,"mutability":"mutable","name":"values","nameLocation":"48144:6:31","nodeType":"VariableDeclaration","scope":17665,"src":"48127:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17658,"name":"bytes","nodeType":"ElementaryTypeName","src":"48127:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17659,"nodeType":"ArrayTypeName","src":"48127:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"48073:78:31"},"returnParameters":{"id":17664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17663,"mutability":"mutable","name":"json","nameLocation":"48200:4:31","nodeType":"VariableDeclaration","scope":17665,"src":"48186:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17662,"name":"string","nodeType":"ElementaryTypeName","src":"48186:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48185:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17677,"nodeType":"FunctionDefinition","src":"48241:143:31","nodes":[],"documentation":{"id":17666,"nodeType":"StructuredDocumentation","src":"48212:24:31","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"48250:12:31","parameters":{"id":17673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17668,"mutability":"mutable","name":"objectKey","nameLocation":"48279:9:31","nodeType":"VariableDeclaration","scope":17677,"src":"48263:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17667,"name":"string","nodeType":"ElementaryTypeName","src":"48263:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17670,"mutability":"mutable","name":"valueKey","nameLocation":"48306:8:31","nodeType":"VariableDeclaration","scope":17677,"src":"48290:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17669,"name":"string","nodeType":"ElementaryTypeName","src":"48290:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17672,"mutability":"mutable","name":"value","nameLocation":"48323:5:31","nodeType":"VariableDeclaration","scope":17677,"src":"48316:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17671,"name":"int256","nodeType":"ElementaryTypeName","src":"48316:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"48262:67:31"},"returnParameters":{"id":17676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17675,"mutability":"mutable","name":"json","nameLocation":"48378:4:31","nodeType":"VariableDeclaration","scope":17677,"src":"48364:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17674,"name":"string","nodeType":"ElementaryTypeName","src":"48364:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48363:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17690,"nodeType":"FunctionDefinition","src":"48419:155:31","nodes":[],"documentation":{"id":17678,"nodeType":"StructuredDocumentation","src":"48390:24:31","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"48428:12:31","parameters":{"id":17686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17680,"mutability":"mutable","name":"objectKey","nameLocation":"48457:9:31","nodeType":"VariableDeclaration","scope":17690,"src":"48441:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17679,"name":"string","nodeType":"ElementaryTypeName","src":"48441:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17682,"mutability":"mutable","name":"valueKey","nameLocation":"48484:8:31","nodeType":"VariableDeclaration","scope":17690,"src":"48468:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17681,"name":"string","nodeType":"ElementaryTypeName","src":"48468:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17685,"mutability":"mutable","name":"values","nameLocation":"48512:6:31","nodeType":"VariableDeclaration","scope":17690,"src":"48494:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17683,"name":"int256","nodeType":"ElementaryTypeName","src":"48494:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17684,"nodeType":"ArrayTypeName","src":"48494:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"48440:79:31"},"returnParameters":{"id":17689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17688,"mutability":"mutable","name":"json","nameLocation":"48568:4:31","nodeType":"VariableDeclaration","scope":17690,"src":"48554:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17687,"name":"string","nodeType":"ElementaryTypeName","src":"48554:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48553:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17700,"nodeType":"FunctionDefinition","src":"48771:111:31","nodes":[],"documentation":{"id":17691,"nodeType":"StructuredDocumentation","src":"48580:186:31","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"48780:13:31","parameters":{"id":17696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17693,"mutability":"mutable","name":"objectKey","nameLocation":"48810:9:31","nodeType":"VariableDeclaration","scope":17700,"src":"48794:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17692,"name":"string","nodeType":"ElementaryTypeName","src":"48794:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17695,"mutability":"mutable","name":"value","nameLocation":"48837:5:31","nodeType":"VariableDeclaration","scope":17700,"src":"48821:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17694,"name":"string","nodeType":"ElementaryTypeName","src":"48821:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48793:50:31"},"returnParameters":{"id":17699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17698,"mutability":"mutable","name":"json","nameLocation":"48876:4:31","nodeType":"VariableDeclaration","scope":17700,"src":"48862:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17697,"name":"string","nodeType":"ElementaryTypeName","src":"48862:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48861:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17710,"nodeType":"FunctionDefinition","src":"48917:149:31","nodes":[],"documentation":{"id":17701,"nodeType":"StructuredDocumentation","src":"48888:24:31","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"48926:17:31","parameters":{"id":17706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17703,"mutability":"mutable","name":"typeDescription","nameLocation":"48960:15:31","nodeType":"VariableDeclaration","scope":17710,"src":"48944:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17702,"name":"string","nodeType":"ElementaryTypeName","src":"48944:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17705,"mutability":"mutable","name":"value","nameLocation":"48992:5:31","nodeType":"VariableDeclaration","scope":17710,"src":"48977:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17704,"name":"bytes","nodeType":"ElementaryTypeName","src":"48977:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48943:55:31"},"returnParameters":{"id":17709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17708,"mutability":"mutable","name":"json","nameLocation":"49060:4:31","nodeType":"VariableDeclaration","scope":17710,"src":"49046:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17707,"name":"string","nodeType":"ElementaryTypeName","src":"49046:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49045:20:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17724,"nodeType":"FunctionDefinition","src":"49101:211:31","nodes":[],"documentation":{"id":17711,"nodeType":"StructuredDocumentation","src":"49072:24:31","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"49110:17:31","parameters":{"id":17720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17713,"mutability":"mutable","name":"objectKey","nameLocation":"49153:9:31","nodeType":"VariableDeclaration","scope":17724,"src":"49137:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17712,"name":"string","nodeType":"ElementaryTypeName","src":"49137:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17715,"mutability":"mutable","name":"valueKey","nameLocation":"49188:8:31","nodeType":"VariableDeclaration","scope":17724,"src":"49172:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17714,"name":"string","nodeType":"ElementaryTypeName","src":"49172:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17717,"mutability":"mutable","name":"typeDescription","nameLocation":"49222:15:31","nodeType":"VariableDeclaration","scope":17724,"src":"49206:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17716,"name":"string","nodeType":"ElementaryTypeName","src":"49206:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17719,"mutability":"mutable","name":"value","nameLocation":"49262:5:31","nodeType":"VariableDeclaration","scope":17724,"src":"49247:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17718,"name":"bytes","nodeType":"ElementaryTypeName","src":"49247:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49127:146:31"},"returnParameters":{"id":17723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17722,"mutability":"mutable","name":"json","nameLocation":"49306:4:31","nodeType":"VariableDeclaration","scope":17724,"src":"49292:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17721,"name":"string","nodeType":"ElementaryTypeName","src":"49292:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49291:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17736,"nodeType":"FunctionDefinition","src":"49347:155:31","nodes":[],"documentation":{"id":17725,"nodeType":"StructuredDocumentation","src":"49318:24:31","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"49356:15:31","parameters":{"id":17732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17727,"mutability":"mutable","name":"objectKey","nameLocation":"49388:9:31","nodeType":"VariableDeclaration","scope":17736,"src":"49372:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17726,"name":"string","nodeType":"ElementaryTypeName","src":"49372:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17729,"mutability":"mutable","name":"valueKey","nameLocation":"49415:8:31","nodeType":"VariableDeclaration","scope":17736,"src":"49399:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17728,"name":"string","nodeType":"ElementaryTypeName","src":"49399:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17731,"mutability":"mutable","name":"value","nameLocation":"49441:5:31","nodeType":"VariableDeclaration","scope":17736,"src":"49425:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17730,"name":"string","nodeType":"ElementaryTypeName","src":"49425:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49371:76:31"},"returnParameters":{"id":17735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17734,"mutability":"mutable","name":"json","nameLocation":"49496:4:31","nodeType":"VariableDeclaration","scope":17736,"src":"49482:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17733,"name":"string","nodeType":"ElementaryTypeName","src":"49482:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49481:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17749,"nodeType":"FunctionDefinition","src":"49537:158:31","nodes":[],"documentation":{"id":17737,"nodeType":"StructuredDocumentation","src":"49508:24:31","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"49546:15:31","parameters":{"id":17745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17739,"mutability":"mutable","name":"objectKey","nameLocation":"49578:9:31","nodeType":"VariableDeclaration","scope":17749,"src":"49562:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17738,"name":"string","nodeType":"ElementaryTypeName","src":"49562:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17741,"mutability":"mutable","name":"valueKey","nameLocation":"49605:8:31","nodeType":"VariableDeclaration","scope":17749,"src":"49589:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17740,"name":"string","nodeType":"ElementaryTypeName","src":"49589:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17744,"mutability":"mutable","name":"values","nameLocation":"49633:6:31","nodeType":"VariableDeclaration","scope":17749,"src":"49615:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17742,"name":"string","nodeType":"ElementaryTypeName","src":"49615:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17743,"nodeType":"ArrayTypeName","src":"49615:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"49561:79:31"},"returnParameters":{"id":17748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17747,"mutability":"mutable","name":"json","nameLocation":"49689:4:31","nodeType":"VariableDeclaration","scope":17749,"src":"49675:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17746,"name":"string","nodeType":"ElementaryTypeName","src":"49675:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49674:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17761,"nodeType":"FunctionDefinition","src":"49730:150:31","nodes":[],"documentation":{"id":17750,"nodeType":"StructuredDocumentation","src":"49701:24:31","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"49739:18:31","parameters":{"id":17757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17752,"mutability":"mutable","name":"objectKey","nameLocation":"49774:9:31","nodeType":"VariableDeclaration","scope":17761,"src":"49758:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17751,"name":"string","nodeType":"ElementaryTypeName","src":"49758:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17754,"mutability":"mutable","name":"valueKey","nameLocation":"49801:8:31","nodeType":"VariableDeclaration","scope":17761,"src":"49785:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17753,"name":"string","nodeType":"ElementaryTypeName","src":"49785:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17756,"mutability":"mutable","name":"value","nameLocation":"49819:5:31","nodeType":"VariableDeclaration","scope":17761,"src":"49811:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17755,"name":"uint256","nodeType":"ElementaryTypeName","src":"49811:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49757:68:31"},"returnParameters":{"id":17760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17759,"mutability":"mutable","name":"json","nameLocation":"49874:4:31","nodeType":"VariableDeclaration","scope":17761,"src":"49860:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17758,"name":"string","nodeType":"ElementaryTypeName","src":"49860:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49859:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17773,"nodeType":"FunctionDefinition","src":"49915:145:31","nodes":[],"documentation":{"id":17762,"nodeType":"StructuredDocumentation","src":"49886:24:31","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"49924:13:31","parameters":{"id":17769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17764,"mutability":"mutable","name":"objectKey","nameLocation":"49954:9:31","nodeType":"VariableDeclaration","scope":17773,"src":"49938:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17763,"name":"string","nodeType":"ElementaryTypeName","src":"49938:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17766,"mutability":"mutable","name":"valueKey","nameLocation":"49981:8:31","nodeType":"VariableDeclaration","scope":17773,"src":"49965:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17765,"name":"string","nodeType":"ElementaryTypeName","src":"49965:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17768,"mutability":"mutable","name":"value","nameLocation":"49999:5:31","nodeType":"VariableDeclaration","scope":17773,"src":"49991:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17767,"name":"uint256","nodeType":"ElementaryTypeName","src":"49991:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49937:68:31"},"returnParameters":{"id":17772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17771,"mutability":"mutable","name":"json","nameLocation":"50054:4:31","nodeType":"VariableDeclaration","scope":17773,"src":"50040:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17770,"name":"string","nodeType":"ElementaryTypeName","src":"50040:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50039:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17786,"nodeType":"FunctionDefinition","src":"50095:157:31","nodes":[],"documentation":{"id":17774,"nodeType":"StructuredDocumentation","src":"50066:24:31","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"50104:13:31","parameters":{"id":17782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17776,"mutability":"mutable","name":"objectKey","nameLocation":"50134:9:31","nodeType":"VariableDeclaration","scope":17786,"src":"50118:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17775,"name":"string","nodeType":"ElementaryTypeName","src":"50118:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17778,"mutability":"mutable","name":"valueKey","nameLocation":"50161:8:31","nodeType":"VariableDeclaration","scope":17786,"src":"50145:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17777,"name":"string","nodeType":"ElementaryTypeName","src":"50145:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17781,"mutability":"mutable","name":"values","nameLocation":"50190:6:31","nodeType":"VariableDeclaration","scope":17786,"src":"50171:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17779,"name":"uint256","nodeType":"ElementaryTypeName","src":"50171:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17780,"nodeType":"ArrayTypeName","src":"50171:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"50117:80:31"},"returnParameters":{"id":17785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17784,"mutability":"mutable","name":"json","nameLocation":"50246:4:31","nodeType":"VariableDeclaration","scope":17786,"src":"50232:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17783,"name":"string","nodeType":"ElementaryTypeName","src":"50232:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50231:20:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17794,"nodeType":"FunctionDefinition","src":"50352:72:31","nodes":[],"documentation":{"id":17787,"nodeType":"StructuredDocumentation","src":"50258:89:31","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"50361:9:31","parameters":{"id":17792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17789,"mutability":"mutable","name":"json","nameLocation":"50387:4:31","nodeType":"VariableDeclaration","scope":17794,"src":"50371:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17788,"name":"string","nodeType":"ElementaryTypeName","src":"50371:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17791,"mutability":"mutable","name":"path","nameLocation":"50409:4:31","nodeType":"VariableDeclaration","scope":17794,"src":"50393:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17790,"name":"string","nodeType":"ElementaryTypeName","src":"50393:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50370:44:31"},"returnParameters":{"id":17793,"nodeType":"ParameterList","parameters":[],"src":"50423:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17804,"nodeType":"FunctionDefinition","src":"50650:98:31","nodes":[],"documentation":{"id":17795,"nodeType":"StructuredDocumentation","src":"50430:215:31","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"50659:9:31","parameters":{"id":17802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17797,"mutability":"mutable","name":"json","nameLocation":"50685:4:31","nodeType":"VariableDeclaration","scope":17804,"src":"50669:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17796,"name":"string","nodeType":"ElementaryTypeName","src":"50669:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17799,"mutability":"mutable","name":"path","nameLocation":"50707:4:31","nodeType":"VariableDeclaration","scope":17804,"src":"50691:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17798,"name":"string","nodeType":"ElementaryTypeName","src":"50691:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17801,"mutability":"mutable","name":"valueKey","nameLocation":"50729:8:31","nodeType":"VariableDeclaration","scope":17804,"src":"50713:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17800,"name":"string","nodeType":"ElementaryTypeName","src":"50713:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50668:70:31"},"returnParameters":{"id":17803,"nodeType":"ParameterList","parameters":[],"src":"50747:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17814,"nodeType":"FunctionDefinition","src":"50910:91:31","nodes":[],"documentation":{"id":17805,"nodeType":"StructuredDocumentation","src":"50754:151:31","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"50919:9:31","parameters":{"id":17810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17807,"mutability":"mutable","name":"json","nameLocation":"50945:4:31","nodeType":"VariableDeclaration","scope":17814,"src":"50929:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17806,"name":"string","nodeType":"ElementaryTypeName","src":"50929:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17809,"mutability":"mutable","name":"key","nameLocation":"50967:3:31","nodeType":"VariableDeclaration","scope":17814,"src":"50951:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17808,"name":"string","nodeType":"ElementaryTypeName","src":"50951:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50928:43:31"},"returnParameters":{"id":17813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17814,"src":"50995:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17811,"name":"bool","nodeType":"ElementaryTypeName","src":"50995:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"50994:6:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17821,"nodeType":"FunctionDefinition","src":"51102:79:31","nodes":[],"documentation":{"id":17815,"nodeType":"StructuredDocumentation","src":"51043:54:31","text":"Designate the next call as an EIP-7702 transaction"},"functionSelector":"14ae3519","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"51111:16:31","parameters":{"id":17819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17818,"mutability":"mutable","name":"signedDelegation","nameLocation":"51154:16:31","nodeType":"VariableDeclaration","scope":17821,"src":"51128:42:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$16201_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":17817,"nodeType":"UserDefinedTypeName","pathNode":{"id":17816,"name":"SignedDelegation","nameLocations":["51128:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":16201,"src":"51128:16:31"},"referencedDeclaration":16201,"src":"51128:16:31","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$16201_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"51127:44:31"},"returnParameters":{"id":17820,"nodeType":"ParameterList","parameters":[],"src":"51180:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17827,"nodeType":"FunctionDefinition","src":"51256:63:31","nodes":[],"documentation":{"id":17822,"nodeType":"StructuredDocumentation","src":"51187:64:31","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"51265:23:31","parameters":{"id":17825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17824,"mutability":"mutable","name":"data","nameLocation":"51304:4:31","nodeType":"VariableDeclaration","scope":17827,"src":"51289:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17823,"name":"bytes","nodeType":"ElementaryTypeName","src":"51289:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51288:21:31"},"returnParameters":{"id":17826,"nodeType":"ParameterList","parameters":[],"src":"51318:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17831,"nodeType":"FunctionDefinition","src":"51822:30:31","nodes":[],"documentation":{"id":17828,"nodeType":"StructuredDocumentation","src":"51325:492:31","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"51831:9:31","parameters":{"id":17829,"nodeType":"ParameterList","parameters":[],"src":"51840:2:31"},"returnParameters":{"id":17830,"nodeType":"ParameterList","parameters":[],"src":"51851:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17837,"nodeType":"FunctionDefinition","src":"52022:44:31","nodes":[],"documentation":{"id":17832,"nodeType":"StructuredDocumentation","src":"51858:159:31","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"52031:9:31","parameters":{"id":17835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17834,"mutability":"mutable","name":"signer","nameLocation":"52049:6:31","nodeType":"VariableDeclaration","scope":17837,"src":"52041:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17833,"name":"address","nodeType":"ElementaryTypeName","src":"52041:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52040:16:31"},"returnParameters":{"id":17836,"nodeType":"ParameterList","parameters":[],"src":"52065:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17843,"nodeType":"FunctionDefinition","src":"52240:48:31","nodes":[],"documentation":{"id":17838,"nodeType":"StructuredDocumentation","src":"52072:163:31","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"52249:9:31","parameters":{"id":17841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17840,"mutability":"mutable","name":"privateKey","nameLocation":"52267:10:31","nodeType":"VariableDeclaration","scope":17843,"src":"52259:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17839,"name":"uint256","nodeType":"ElementaryTypeName","src":"52259:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52258:20:31"},"returnParameters":{"id":17842,"nodeType":"ParameterList","parameters":[],"src":"52287:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17850,"nodeType":"FunctionDefinition","src":"52377:66:31","nodes":[],"documentation":{"id":17844,"nodeType":"StructuredDocumentation","src":"52294:78:31","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"52386:10:31","parameters":{"id":17845,"nodeType":"ParameterList","parameters":[],"src":"52396:2:31"},"returnParameters":{"id":17849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17848,"mutability":"mutable","name":"wallets","nameLocation":"52434:7:31","nodeType":"VariableDeclaration","scope":17850,"src":"52417:24:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17846,"name":"address","nodeType":"ElementaryTypeName","src":"52417:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17847,"nodeType":"ArrayTypeName","src":"52417:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"52416:26:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17861,"nodeType":"FunctionDefinition","src":"52543:153:31","nodes":[],"documentation":{"id":17851,"nodeType":"StructuredDocumentation","src":"52449:89:31","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"functionSelector":"c7fa7288","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"52552:23:31","parameters":{"id":17856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17853,"mutability":"mutable","name":"implementation","nameLocation":"52584:14:31","nodeType":"VariableDeclaration","scope":17861,"src":"52576:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17852,"name":"address","nodeType":"ElementaryTypeName","src":"52576:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17855,"mutability":"mutable","name":"privateKey","nameLocation":"52608:10:31","nodeType":"VariableDeclaration","scope":17861,"src":"52600:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17854,"name":"uint256","nodeType":"ElementaryTypeName","src":"52600:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52575:44:31"},"returnParameters":{"id":17860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17859,"mutability":"mutable","name":"signedDelegation","nameLocation":"52678:16:31","nodeType":"VariableDeclaration","scope":17861,"src":"52654:40:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$16201_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":17858,"nodeType":"UserDefinedTypeName","pathNode":{"id":17857,"name":"SignedDelegation","nameLocations":["52654:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":16201,"src":"52654:16:31"},"referencedDeclaration":16201,"src":"52654:16:31","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$16201_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"52653:42:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17872,"nodeType":"FunctionDefinition","src":"52756:144:31","nodes":[],"documentation":{"id":17862,"nodeType":"StructuredDocumentation","src":"52702:49:31","text":"Sign an EIP-7702 authorization for delegation"},"functionSelector":"5b593c7b","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"52765:14:31","parameters":{"id":17867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17864,"mutability":"mutable","name":"implementation","nameLocation":"52788:14:31","nodeType":"VariableDeclaration","scope":17872,"src":"52780:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17863,"name":"address","nodeType":"ElementaryTypeName","src":"52780:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17866,"mutability":"mutable","name":"privateKey","nameLocation":"52812:10:31","nodeType":"VariableDeclaration","scope":17872,"src":"52804:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17865,"name":"uint256","nodeType":"ElementaryTypeName","src":"52804:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52779:44:31"},"returnParameters":{"id":17871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17870,"mutability":"mutable","name":"signedDelegation","nameLocation":"52882:16:31","nodeType":"VariableDeclaration","scope":17872,"src":"52858:40:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$16201_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":17869,"nodeType":"UserDefinedTypeName","pathNode":{"id":17868,"name":"SignedDelegation","nameLocations":["52858:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":16201,"src":"52858:16:31"},"referencedDeclaration":16201,"src":"52858:16:31","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$16201_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"52857:42:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17876,"nodeType":"FunctionDefinition","src":"53410:35:31","nodes":[],"documentation":{"id":17873,"nodeType":"StructuredDocumentation","src":"52906:499:31","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"53419:14:31","parameters":{"id":17874,"nodeType":"ParameterList","parameters":[],"src":"53433:2:31"},"returnParameters":{"id":17875,"nodeType":"ParameterList","parameters":[],"src":"53444:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17882,"nodeType":"FunctionDefinition","src":"53607:49:31","nodes":[],"documentation":{"id":17877,"nodeType":"StructuredDocumentation","src":"53451:151:31","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"53616:14:31","parameters":{"id":17880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17879,"mutability":"mutable","name":"signer","nameLocation":"53639:6:31","nodeType":"VariableDeclaration","scope":17882,"src":"53631:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17878,"name":"address","nodeType":"ElementaryTypeName","src":"53631:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"53630:16:31"},"returnParameters":{"id":17881,"nodeType":"ParameterList","parameters":[],"src":"53655:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17888,"nodeType":"FunctionDefinition","src":"53822:53:31","nodes":[],"documentation":{"id":17883,"nodeType":"StructuredDocumentation","src":"53662:155:31","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"53831:14:31","parameters":{"id":17886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17885,"mutability":"mutable","name":"privateKey","nameLocation":"53854:10:31","nodeType":"VariableDeclaration","scope":17888,"src":"53846:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17884,"name":"uint256","nodeType":"ElementaryTypeName","src":"53846:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53845:20:31"},"returnParameters":{"id":17887,"nodeType":"ParameterList","parameters":[],"src":"53874:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17892,"nodeType":"FunctionDefinition","src":"53928:34:31","nodes":[],"documentation":{"id":17889,"nodeType":"StructuredDocumentation","src":"53881:42:31","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"53937:13:31","parameters":{"id":17890,"nodeType":"ParameterList","parameters":[],"src":"53950:2:31"},"returnParameters":{"id":17891,"nodeType":"ParameterList","parameters":[],"src":"53961:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17902,"nodeType":"FunctionDefinition","src":"54074:98:31","nodes":[],"documentation":{"id":17893,"nodeType":"StructuredDocumentation","src":"54001:68:31","text":"Returns true if `search` is found in `subject`, false otherwise."},"functionSelector":"3fb18aec","implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"54083:8:31","parameters":{"id":17898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17895,"mutability":"mutable","name":"subject","nameLocation":"54108:7:31","nodeType":"VariableDeclaration","scope":17902,"src":"54092:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17894,"name":"string","nodeType":"ElementaryTypeName","src":"54092:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17897,"mutability":"mutable","name":"search","nameLocation":"54133:6:31","nodeType":"VariableDeclaration","scope":17902,"src":"54117:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17896,"name":"string","nodeType":"ElementaryTypeName","src":"54117:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54091:49:31"},"returnParameters":{"id":17901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17900,"mutability":"mutable","name":"result","nameLocation":"54164:6:31","nodeType":"VariableDeclaration","scope":17902,"src":"54159:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17899,"name":"bool","nodeType":"ElementaryTypeName","src":"54159:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"54158:13:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17912,"nodeType":"FunctionDefinition","src":"54388:93:31","nodes":[],"documentation":{"id":17903,"nodeType":"StructuredDocumentation","src":"54178:205:31","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"54397:7:31","parameters":{"id":17908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17905,"mutability":"mutable","name":"input","nameLocation":"54421:5:31","nodeType":"VariableDeclaration","scope":17912,"src":"54405:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17904,"name":"string","nodeType":"ElementaryTypeName","src":"54405:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17907,"mutability":"mutable","name":"key","nameLocation":"54444:3:31","nodeType":"VariableDeclaration","scope":17912,"src":"54428:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17906,"name":"string","nodeType":"ElementaryTypeName","src":"54428:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54404:44:31"},"returnParameters":{"id":17911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17912,"src":"54472:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17909,"name":"uint256","nodeType":"ElementaryTypeName","src":"54472:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54471:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17920,"nodeType":"FunctionDefinition","src":"54540:100:31","nodes":[],"documentation":{"id":17913,"nodeType":"StructuredDocumentation","src":"54487:48:31","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"54549:12:31","parameters":{"id":17916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17915,"mutability":"mutable","name":"stringifiedValue","nameLocation":"54578:16:31","nodeType":"VariableDeclaration","scope":17920,"src":"54562:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17914,"name":"string","nodeType":"ElementaryTypeName","src":"54562:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54561:34:31"},"returnParameters":{"id":17919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17918,"mutability":"mutable","name":"parsedValue","nameLocation":"54627:11:31","nodeType":"VariableDeclaration","scope":17920,"src":"54619:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17917,"name":"address","nodeType":"ElementaryTypeName","src":"54619:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"54618:21:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17928,"nodeType":"FunctionDefinition","src":"54695:94:31","nodes":[],"documentation":{"id":17921,"nodeType":"StructuredDocumentation","src":"54646:44:31","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"54704:9:31","parameters":{"id":17924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17923,"mutability":"mutable","name":"stringifiedValue","nameLocation":"54730:16:31","nodeType":"VariableDeclaration","scope":17928,"src":"54714:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17922,"name":"string","nodeType":"ElementaryTypeName","src":"54714:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54713:34:31"},"returnParameters":{"id":17927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17926,"mutability":"mutable","name":"parsedValue","nameLocation":"54776:11:31","nodeType":"VariableDeclaration","scope":17928,"src":"54771:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17925,"name":"bool","nodeType":"ElementaryTypeName","src":"54771:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"54770:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17936,"nodeType":"FunctionDefinition","src":"54843:103:31","nodes":[],"documentation":{"id":17929,"nodeType":"StructuredDocumentation","src":"54795:43:31","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"54852:10:31","parameters":{"id":17932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17931,"mutability":"mutable","name":"stringifiedValue","nameLocation":"54879:16:31","nodeType":"VariableDeclaration","scope":17936,"src":"54863:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17930,"name":"string","nodeType":"ElementaryTypeName","src":"54863:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54862:34:31"},"returnParameters":{"id":17935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17934,"mutability":"mutable","name":"parsedValue","nameLocation":"54933:11:31","nodeType":"VariableDeclaration","scope":17936,"src":"54920:24:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17933,"name":"bytes","nodeType":"ElementaryTypeName","src":"54920:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54919:26:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17944,"nodeType":"FunctionDefinition","src":"55004:100:31","nodes":[],"documentation":{"id":17937,"nodeType":"StructuredDocumentation","src":"54952:47:31","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"55013:12:31","parameters":{"id":17940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17939,"mutability":"mutable","name":"stringifiedValue","nameLocation":"55042:16:31","nodeType":"VariableDeclaration","scope":17944,"src":"55026:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17938,"name":"string","nodeType":"ElementaryTypeName","src":"55026:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55025:34:31"},"returnParameters":{"id":17943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17942,"mutability":"mutable","name":"parsedValue","nameLocation":"55091:11:31","nodeType":"VariableDeclaration","scope":17944,"src":"55083:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55083:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"55082:21:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17952,"nodeType":"FunctionDefinition","src":"55161:95:31","nodes":[],"documentation":{"id":17945,"nodeType":"StructuredDocumentation","src":"55110:46:31","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"55170:8:31","parameters":{"id":17948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17947,"mutability":"mutable","name":"stringifiedValue","nameLocation":"55195:16:31","nodeType":"VariableDeclaration","scope":17952,"src":"55179:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17946,"name":"string","nodeType":"ElementaryTypeName","src":"55179:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55178:34:31"},"returnParameters":{"id":17951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17950,"mutability":"mutable","name":"parsedValue","nameLocation":"55243:11:31","nodeType":"VariableDeclaration","scope":17952,"src":"55236:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17949,"name":"int256","nodeType":"ElementaryTypeName","src":"55236:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55235:20:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17960,"nodeType":"FunctionDefinition","src":"55314:97:31","nodes":[],"documentation":{"id":17953,"nodeType":"StructuredDocumentation","src":"55262:47:31","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"55323:9:31","parameters":{"id":17956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17955,"mutability":"mutable","name":"stringifiedValue","nameLocation":"55349:16:31","nodeType":"VariableDeclaration","scope":17960,"src":"55333:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17954,"name":"string","nodeType":"ElementaryTypeName","src":"55333:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55332:34:31"},"returnParameters":{"id":17959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17958,"mutability":"mutable","name":"parsedValue","nameLocation":"55398:11:31","nodeType":"VariableDeclaration","scope":17960,"src":"55390:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17957,"name":"uint256","nodeType":"ElementaryTypeName","src":"55390:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55389:21:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17972,"nodeType":"FunctionDefinition","src":"55489:151:31","nodes":[],"documentation":{"id":17961,"nodeType":"StructuredDocumentation","src":"55417:67:31","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"55498:7:31","parameters":{"id":17968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17963,"mutability":"mutable","name":"input","nameLocation":"55522:5:31","nodeType":"VariableDeclaration","scope":17972,"src":"55506:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17962,"name":"string","nodeType":"ElementaryTypeName","src":"55506:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17965,"mutability":"mutable","name":"from","nameLocation":"55545:4:31","nodeType":"VariableDeclaration","scope":17972,"src":"55529:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17964,"name":"string","nodeType":"ElementaryTypeName","src":"55529:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17967,"mutability":"mutable","name":"to","nameLocation":"55567:2:31","nodeType":"VariableDeclaration","scope":17972,"src":"55551:18:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17966,"name":"string","nodeType":"ElementaryTypeName","src":"55551:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55505:65:31"},"returnParameters":{"id":17971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17970,"mutability":"mutable","name":"output","nameLocation":"55632:6:31","nodeType":"VariableDeclaration","scope":17972,"src":"55618:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17969,"name":"string","nodeType":"ElementaryTypeName","src":"55618:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55617:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17983,"nodeType":"FunctionDefinition","src":"55733:113:31","nodes":[],"documentation":{"id":17973,"nodeType":"StructuredDocumentation","src":"55646:82:31","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"55742:5:31","parameters":{"id":17978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17975,"mutability":"mutable","name":"input","nameLocation":"55764:5:31","nodeType":"VariableDeclaration","scope":17983,"src":"55748:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17974,"name":"string","nodeType":"ElementaryTypeName","src":"55748:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17977,"mutability":"mutable","name":"delimiter","nameLocation":"55787:9:31","nodeType":"VariableDeclaration","scope":17983,"src":"55771:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17976,"name":"string","nodeType":"ElementaryTypeName","src":"55771:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55747:50:31"},"returnParameters":{"id":17982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17981,"mutability":"mutable","name":"outputs","nameLocation":"55837:7:31","nodeType":"VariableDeclaration","scope":17983,"src":"55821:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17979,"name":"string","nodeType":"ElementaryTypeName","src":"55821:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17980,"nodeType":"ArrayTypeName","src":"55821:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"55820:25:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17991,"nodeType":"FunctionDefinition","src":"55908:89:31","nodes":[],"documentation":{"id":17984,"nodeType":"StructuredDocumentation","src":"55852:51:31","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"55917:11:31","parameters":{"id":17987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17986,"mutability":"mutable","name":"input","nameLocation":"55945:5:31","nodeType":"VariableDeclaration","scope":17991,"src":"55929:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17985,"name":"string","nodeType":"ElementaryTypeName","src":"55929:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55928:23:31"},"returnParameters":{"id":17990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17989,"mutability":"mutable","name":"output","nameLocation":"55989:6:31","nodeType":"VariableDeclaration","scope":17991,"src":"55975:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17988,"name":"string","nodeType":"ElementaryTypeName","src":"55975:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55974:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17999,"nodeType":"FunctionDefinition","src":"56051:88:31","nodes":[],"documentation":{"id":17992,"nodeType":"StructuredDocumentation","src":"56003:43:31","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56060:8:31","parameters":{"id":17995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17994,"mutability":"mutable","name":"value","nameLocation":"56077:5:31","nodeType":"VariableDeclaration","scope":17999,"src":"56069:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17993,"name":"address","nodeType":"ElementaryTypeName","src":"56069:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"56068:15:31"},"returnParameters":{"id":17998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17997,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56121:16:31","nodeType":"VariableDeclaration","scope":17999,"src":"56107:30:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17996,"name":"string","nodeType":"ElementaryTypeName","src":"56107:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56106:32:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18007,"nodeType":"FunctionDefinition","src":"56193:95:31","nodes":[],"documentation":{"id":18000,"nodeType":"StructuredDocumentation","src":"56145:43:31","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56202:8:31","parameters":{"id":18003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18002,"mutability":"mutable","name":"value","nameLocation":"56226:5:31","nodeType":"VariableDeclaration","scope":18007,"src":"56211:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18001,"name":"bytes","nodeType":"ElementaryTypeName","src":"56211:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56210:22:31"},"returnParameters":{"id":18006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18005,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56270:16:31","nodeType":"VariableDeclaration","scope":18007,"src":"56256:30:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18004,"name":"string","nodeType":"ElementaryTypeName","src":"56256:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56255:32:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18015,"nodeType":"FunctionDefinition","src":"56342:88:31","nodes":[],"documentation":{"id":18008,"nodeType":"StructuredDocumentation","src":"56294:43:31","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56351:8:31","parameters":{"id":18011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18010,"mutability":"mutable","name":"value","nameLocation":"56368:5:31","nodeType":"VariableDeclaration","scope":18015,"src":"56360:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56360:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"56359:15:31"},"returnParameters":{"id":18014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18013,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56412:16:31","nodeType":"VariableDeclaration","scope":18015,"src":"56398:30:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18012,"name":"string","nodeType":"ElementaryTypeName","src":"56398:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56397:32:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18023,"nodeType":"FunctionDefinition","src":"56484:85:31","nodes":[],"documentation":{"id":18016,"nodeType":"StructuredDocumentation","src":"56436:43:31","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56493:8:31","parameters":{"id":18019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18018,"mutability":"mutable","name":"value","nameLocation":"56507:5:31","nodeType":"VariableDeclaration","scope":18023,"src":"56502:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18017,"name":"bool","nodeType":"ElementaryTypeName","src":"56502:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56501:12:31"},"returnParameters":{"id":18022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18021,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56551:16:31","nodeType":"VariableDeclaration","scope":18023,"src":"56537:30:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18020,"name":"string","nodeType":"ElementaryTypeName","src":"56537:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56536:32:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18031,"nodeType":"FunctionDefinition","src":"56623:88:31","nodes":[],"documentation":{"id":18024,"nodeType":"StructuredDocumentation","src":"56575:43:31","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56632:8:31","parameters":{"id":18027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18026,"mutability":"mutable","name":"value","nameLocation":"56649:5:31","nodeType":"VariableDeclaration","scope":18031,"src":"56641:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18025,"name":"uint256","nodeType":"ElementaryTypeName","src":"56641:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56640:15:31"},"returnParameters":{"id":18030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18029,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56693:16:31","nodeType":"VariableDeclaration","scope":18031,"src":"56679:30:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18028,"name":"string","nodeType":"ElementaryTypeName","src":"56679:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56678:32:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18039,"nodeType":"FunctionDefinition","src":"56765:87:31","nodes":[],"documentation":{"id":18032,"nodeType":"StructuredDocumentation","src":"56717:43:31","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"56774:8:31","parameters":{"id":18035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18034,"mutability":"mutable","name":"value","nameLocation":"56790:5:31","nodeType":"VariableDeclaration","scope":18039,"src":"56783:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18033,"name":"int256","nodeType":"ElementaryTypeName","src":"56783:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"56782:14:31"},"returnParameters":{"id":18038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18037,"mutability":"mutable","name":"stringifiedValue","nameLocation":"56834:16:31","nodeType":"VariableDeclaration","scope":18039,"src":"56820:30:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18036,"name":"string","nodeType":"ElementaryTypeName","src":"56820:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56819:32:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18047,"nodeType":"FunctionDefinition","src":"56914:89:31","nodes":[],"documentation":{"id":18040,"nodeType":"StructuredDocumentation","src":"56858:51:31","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"56923:11:31","parameters":{"id":18043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18042,"mutability":"mutable","name":"input","nameLocation":"56951:5:31","nodeType":"VariableDeclaration","scope":18047,"src":"56935:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18041,"name":"string","nodeType":"ElementaryTypeName","src":"56935:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56934:23:31"},"returnParameters":{"id":18046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18045,"mutability":"mutable","name":"output","nameLocation":"56995:6:31","nodeType":"VariableDeclaration","scope":18047,"src":"56981:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18044,"name":"string","nodeType":"ElementaryTypeName","src":"56981:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56980:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18055,"nodeType":"FunctionDefinition","src":"57086:82:31","nodes":[],"documentation":{"id":18048,"nodeType":"StructuredDocumentation","src":"57009:72:31","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"57095:4:31","parameters":{"id":18051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18050,"mutability":"mutable","name":"input","nameLocation":"57116:5:31","nodeType":"VariableDeclaration","scope":18055,"src":"57100:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18049,"name":"string","nodeType":"ElementaryTypeName","src":"57100:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57099:23:31"},"returnParameters":{"id":18054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18053,"mutability":"mutable","name":"output","nameLocation":"57160:6:31","nodeType":"VariableDeclaration","scope":18055,"src":"57146:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18052,"name":"string","nodeType":"ElementaryTypeName","src":"57146:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57145:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18067,"nodeType":"FunctionDefinition","src":"57363:113:31","nodes":[],"documentation":{"id":18056,"nodeType":"StructuredDocumentation","src":"57208:150:31","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"57372:24:31","parameters":{"id":18065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18058,"mutability":"mutable","name":"left","nameLocation":"57405:4:31","nodeType":"VariableDeclaration","scope":18067,"src":"57397:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18057,"name":"uint256","nodeType":"ElementaryTypeName","src":"57397:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18060,"mutability":"mutable","name":"right","nameLocation":"57419:5:31","nodeType":"VariableDeclaration","scope":18067,"src":"57411:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18059,"name":"uint256","nodeType":"ElementaryTypeName","src":"57411:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18062,"mutability":"mutable","name":"maxDelta","nameLocation":"57434:8:31","nodeType":"VariableDeclaration","scope":18067,"src":"57426:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18061,"name":"uint256","nodeType":"ElementaryTypeName","src":"57426:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18064,"mutability":"mutable","name":"decimals","nameLocation":"57452:8:31","nodeType":"VariableDeclaration","scope":18067,"src":"57444:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18063,"name":"uint256","nodeType":"ElementaryTypeName","src":"57444:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57396:65:31"},"returnParameters":{"id":18066,"nodeType":"ParameterList","parameters":[],"src":"57475:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18081,"nodeType":"FunctionDefinition","src":"57691:182:31","nodes":[],"documentation":{"id":18068,"nodeType":"StructuredDocumentation","src":"57482:204:31","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"57700:24:31","parameters":{"id":18079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18070,"mutability":"mutable","name":"left","nameLocation":"57742:4:31","nodeType":"VariableDeclaration","scope":18081,"src":"57734:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18069,"name":"uint256","nodeType":"ElementaryTypeName","src":"57734:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18072,"mutability":"mutable","name":"right","nameLocation":"57764:5:31","nodeType":"VariableDeclaration","scope":18081,"src":"57756:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18071,"name":"uint256","nodeType":"ElementaryTypeName","src":"57756:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18074,"mutability":"mutable","name":"maxDelta","nameLocation":"57787:8:31","nodeType":"VariableDeclaration","scope":18081,"src":"57779:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18073,"name":"uint256","nodeType":"ElementaryTypeName","src":"57779:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18076,"mutability":"mutable","name":"decimals","nameLocation":"57813:8:31","nodeType":"VariableDeclaration","scope":18081,"src":"57805:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18075,"name":"uint256","nodeType":"ElementaryTypeName","src":"57805:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18078,"mutability":"mutable","name":"error","nameLocation":"57847:5:31","nodeType":"VariableDeclaration","scope":18081,"src":"57831:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18077,"name":"string","nodeType":"ElementaryTypeName","src":"57831:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57724:134:31"},"returnParameters":{"id":18080,"nodeType":"ParameterList","parameters":[],"src":"57872:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18093,"nodeType":"FunctionDefinition","src":"58033:111:31","nodes":[],"documentation":{"id":18082,"nodeType":"StructuredDocumentation","src":"57879:149:31","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"58042:24:31","parameters":{"id":18091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18084,"mutability":"mutable","name":"left","nameLocation":"58074:4:31","nodeType":"VariableDeclaration","scope":18093,"src":"58067:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18083,"name":"int256","nodeType":"ElementaryTypeName","src":"58067:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18086,"mutability":"mutable","name":"right","nameLocation":"58087:5:31","nodeType":"VariableDeclaration","scope":18093,"src":"58080:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18085,"name":"int256","nodeType":"ElementaryTypeName","src":"58080:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18088,"mutability":"mutable","name":"maxDelta","nameLocation":"58102:8:31","nodeType":"VariableDeclaration","scope":18093,"src":"58094:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18087,"name":"uint256","nodeType":"ElementaryTypeName","src":"58094:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18090,"mutability":"mutable","name":"decimals","nameLocation":"58120:8:31","nodeType":"VariableDeclaration","scope":18093,"src":"58112:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18089,"name":"uint256","nodeType":"ElementaryTypeName","src":"58112:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58066:63:31"},"returnParameters":{"id":18092,"nodeType":"ParameterList","parameters":[],"src":"58143:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18107,"nodeType":"FunctionDefinition","src":"58358:180:31","nodes":[],"documentation":{"id":18094,"nodeType":"StructuredDocumentation","src":"58150:203:31","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"58367:24:31","parameters":{"id":18105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18096,"mutability":"mutable","name":"left","nameLocation":"58408:4:31","nodeType":"VariableDeclaration","scope":18107,"src":"58401:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18095,"name":"int256","nodeType":"ElementaryTypeName","src":"58401:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18098,"mutability":"mutable","name":"right","nameLocation":"58429:5:31","nodeType":"VariableDeclaration","scope":18107,"src":"58422:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18097,"name":"int256","nodeType":"ElementaryTypeName","src":"58422:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18100,"mutability":"mutable","name":"maxDelta","nameLocation":"58452:8:31","nodeType":"VariableDeclaration","scope":18107,"src":"58444:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18099,"name":"uint256","nodeType":"ElementaryTypeName","src":"58444:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18102,"mutability":"mutable","name":"decimals","nameLocation":"58478:8:31","nodeType":"VariableDeclaration","scope":18107,"src":"58470:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18101,"name":"uint256","nodeType":"ElementaryTypeName","src":"58470:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18104,"mutability":"mutable","name":"error","nameLocation":"58512:5:31","nodeType":"VariableDeclaration","scope":18107,"src":"58496:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18103,"name":"string","nodeType":"ElementaryTypeName","src":"58496:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58391:132:31"},"returnParameters":{"id":18106,"nodeType":"ParameterList","parameters":[],"src":"58537:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18117,"nodeType":"FunctionDefinition","src":"58642:88:31","nodes":[],"documentation":{"id":18108,"nodeType":"StructuredDocumentation","src":"58544:93:31","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"58651:17:31","parameters":{"id":18115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18110,"mutability":"mutable","name":"left","nameLocation":"58677:4:31","nodeType":"VariableDeclaration","scope":18117,"src":"58669:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18109,"name":"uint256","nodeType":"ElementaryTypeName","src":"58669:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18112,"mutability":"mutable","name":"right","nameLocation":"58691:5:31","nodeType":"VariableDeclaration","scope":18117,"src":"58683:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18111,"name":"uint256","nodeType":"ElementaryTypeName","src":"58683:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18114,"mutability":"mutable","name":"maxDelta","nameLocation":"58706:8:31","nodeType":"VariableDeclaration","scope":18117,"src":"58698:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18113,"name":"uint256","nodeType":"ElementaryTypeName","src":"58698:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58668:47:31"},"returnParameters":{"id":18116,"nodeType":"ParameterList","parameters":[],"src":"58729:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18129,"nodeType":"FunctionDefinition","src":"58896:111:31","nodes":[],"documentation":{"id":18118,"nodeType":"StructuredDocumentation","src":"58736:155:31","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"58905:17:31","parameters":{"id":18127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18120,"mutability":"mutable","name":"left","nameLocation":"58931:4:31","nodeType":"VariableDeclaration","scope":18129,"src":"58923:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18119,"name":"uint256","nodeType":"ElementaryTypeName","src":"58923:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18122,"mutability":"mutable","name":"right","nameLocation":"58945:5:31","nodeType":"VariableDeclaration","scope":18129,"src":"58937:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18121,"name":"uint256","nodeType":"ElementaryTypeName","src":"58937:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18124,"mutability":"mutable","name":"maxDelta","nameLocation":"58960:8:31","nodeType":"VariableDeclaration","scope":18129,"src":"58952:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18123,"name":"uint256","nodeType":"ElementaryTypeName","src":"58952:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18126,"mutability":"mutable","name":"error","nameLocation":"58986:5:31","nodeType":"VariableDeclaration","scope":18129,"src":"58970:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18125,"name":"string","nodeType":"ElementaryTypeName","src":"58970:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58922:70:31"},"returnParameters":{"id":18128,"nodeType":"ParameterList","parameters":[],"src":"59006:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18139,"nodeType":"FunctionDefinition","src":"59110:86:31","nodes":[],"documentation":{"id":18130,"nodeType":"StructuredDocumentation","src":"59013:92:31","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"59119:17:31","parameters":{"id":18137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18132,"mutability":"mutable","name":"left","nameLocation":"59144:4:31","nodeType":"VariableDeclaration","scope":18139,"src":"59137:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18131,"name":"int256","nodeType":"ElementaryTypeName","src":"59137:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18134,"mutability":"mutable","name":"right","nameLocation":"59157:5:31","nodeType":"VariableDeclaration","scope":18139,"src":"59150:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18133,"name":"int256","nodeType":"ElementaryTypeName","src":"59150:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18136,"mutability":"mutable","name":"maxDelta","nameLocation":"59172:8:31","nodeType":"VariableDeclaration","scope":18139,"src":"59164:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18135,"name":"uint256","nodeType":"ElementaryTypeName","src":"59164:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59136:45:31"},"returnParameters":{"id":18138,"nodeType":"ParameterList","parameters":[],"src":"59195:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18151,"nodeType":"FunctionDefinition","src":"59361:109:31","nodes":[],"documentation":{"id":18140,"nodeType":"StructuredDocumentation","src":"59202:154:31","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"59370:17:31","parameters":{"id":18149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18142,"mutability":"mutable","name":"left","nameLocation":"59395:4:31","nodeType":"VariableDeclaration","scope":18151,"src":"59388:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18141,"name":"int256","nodeType":"ElementaryTypeName","src":"59388:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18144,"mutability":"mutable","name":"right","nameLocation":"59408:5:31","nodeType":"VariableDeclaration","scope":18151,"src":"59401:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18143,"name":"int256","nodeType":"ElementaryTypeName","src":"59401:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18146,"mutability":"mutable","name":"maxDelta","nameLocation":"59423:8:31","nodeType":"VariableDeclaration","scope":18151,"src":"59415:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18145,"name":"uint256","nodeType":"ElementaryTypeName","src":"59415:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18148,"mutability":"mutable","name":"error","nameLocation":"59449:5:31","nodeType":"VariableDeclaration","scope":18151,"src":"59433:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18147,"name":"string","nodeType":"ElementaryTypeName","src":"59433:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59387:68:31"},"returnParameters":{"id":18150,"nodeType":"ParameterList","parameters":[],"src":"59469:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18163,"nodeType":"FunctionDefinition","src":"59741:136:31","nodes":[],"documentation":{"id":18152,"nodeType":"StructuredDocumentation","src":"59476:260:31","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"59750:24:31","parameters":{"id":18161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18154,"mutability":"mutable","name":"left","nameLocation":"59783:4:31","nodeType":"VariableDeclaration","scope":18163,"src":"59775:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18153,"name":"uint256","nodeType":"ElementaryTypeName","src":"59775:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18156,"mutability":"mutable","name":"right","nameLocation":"59797:5:31","nodeType":"VariableDeclaration","scope":18163,"src":"59789:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18155,"name":"uint256","nodeType":"ElementaryTypeName","src":"59789:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18158,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"59812:15:31","nodeType":"VariableDeclaration","scope":18163,"src":"59804:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18157,"name":"uint256","nodeType":"ElementaryTypeName","src":"59804:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18160,"mutability":"mutable","name":"decimals","nameLocation":"59837:8:31","nodeType":"VariableDeclaration","scope":18163,"src":"59829:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18159,"name":"uint256","nodeType":"ElementaryTypeName","src":"59829:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59774:72:31"},"returnParameters":{"id":18162,"nodeType":"ParameterList","parameters":[],"src":"59876:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18177,"nodeType":"FunctionDefinition","src":"60202:189:31","nodes":[],"documentation":{"id":18164,"nodeType":"StructuredDocumentation","src":"59883:314:31","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"60211:24:31","parameters":{"id":18175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18166,"mutability":"mutable","name":"left","nameLocation":"60253:4:31","nodeType":"VariableDeclaration","scope":18177,"src":"60245:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18165,"name":"uint256","nodeType":"ElementaryTypeName","src":"60245:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18168,"mutability":"mutable","name":"right","nameLocation":"60275:5:31","nodeType":"VariableDeclaration","scope":18177,"src":"60267:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18167,"name":"uint256","nodeType":"ElementaryTypeName","src":"60267:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18170,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"60298:15:31","nodeType":"VariableDeclaration","scope":18177,"src":"60290:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18169,"name":"uint256","nodeType":"ElementaryTypeName","src":"60290:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18172,"mutability":"mutable","name":"decimals","nameLocation":"60331:8:31","nodeType":"VariableDeclaration","scope":18177,"src":"60323:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18171,"name":"uint256","nodeType":"ElementaryTypeName","src":"60323:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18174,"mutability":"mutable","name":"error","nameLocation":"60365:5:31","nodeType":"VariableDeclaration","scope":18177,"src":"60349:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18173,"name":"string","nodeType":"ElementaryTypeName","src":"60349:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60235:141:31"},"returnParameters":{"id":18176,"nodeType":"ParameterList","parameters":[],"src":"60390:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18189,"nodeType":"FunctionDefinition","src":"60661:134:31","nodes":[],"documentation":{"id":18178,"nodeType":"StructuredDocumentation","src":"60397:259:31","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"60670:24:31","parameters":{"id":18187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18180,"mutability":"mutable","name":"left","nameLocation":"60702:4:31","nodeType":"VariableDeclaration","scope":18189,"src":"60695:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18179,"name":"int256","nodeType":"ElementaryTypeName","src":"60695:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18182,"mutability":"mutable","name":"right","nameLocation":"60715:5:31","nodeType":"VariableDeclaration","scope":18189,"src":"60708:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18181,"name":"int256","nodeType":"ElementaryTypeName","src":"60708:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18184,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"60730:15:31","nodeType":"VariableDeclaration","scope":18189,"src":"60722:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18183,"name":"uint256","nodeType":"ElementaryTypeName","src":"60722:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18186,"mutability":"mutable","name":"decimals","nameLocation":"60755:8:31","nodeType":"VariableDeclaration","scope":18189,"src":"60747:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18185,"name":"uint256","nodeType":"ElementaryTypeName","src":"60747:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60694:70:31"},"returnParameters":{"id":18188,"nodeType":"ParameterList","parameters":[],"src":"60794:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18203,"nodeType":"FunctionDefinition","src":"61119:187:31","nodes":[],"documentation":{"id":18190,"nodeType":"StructuredDocumentation","src":"60801:313:31","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"61128:24:31","parameters":{"id":18201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18192,"mutability":"mutable","name":"left","nameLocation":"61169:4:31","nodeType":"VariableDeclaration","scope":18203,"src":"61162:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18191,"name":"int256","nodeType":"ElementaryTypeName","src":"61162:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18194,"mutability":"mutable","name":"right","nameLocation":"61190:5:31","nodeType":"VariableDeclaration","scope":18203,"src":"61183:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18193,"name":"int256","nodeType":"ElementaryTypeName","src":"61183:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18196,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"61213:15:31","nodeType":"VariableDeclaration","scope":18203,"src":"61205:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18195,"name":"uint256","nodeType":"ElementaryTypeName","src":"61205:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18198,"mutability":"mutable","name":"decimals","nameLocation":"61246:8:31","nodeType":"VariableDeclaration","scope":18203,"src":"61238:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18197,"name":"uint256","nodeType":"ElementaryTypeName","src":"61238:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18200,"mutability":"mutable","name":"error","nameLocation":"61280:5:31","nodeType":"VariableDeclaration","scope":18203,"src":"61264:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18199,"name":"string","nodeType":"ElementaryTypeName","src":"61264:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61152:139:31"},"returnParameters":{"id":18202,"nodeType":"ParameterList","parameters":[],"src":"61305:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18213,"nodeType":"FunctionDefinition","src":"61520:95:31","nodes":[],"documentation":{"id":18204,"nodeType":"StructuredDocumentation","src":"61312:203:31","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"61529:17:31","parameters":{"id":18211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18206,"mutability":"mutable","name":"left","nameLocation":"61555:4:31","nodeType":"VariableDeclaration","scope":18213,"src":"61547:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18205,"name":"uint256","nodeType":"ElementaryTypeName","src":"61547:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18208,"mutability":"mutable","name":"right","nameLocation":"61569:5:31","nodeType":"VariableDeclaration","scope":18213,"src":"61561:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18207,"name":"uint256","nodeType":"ElementaryTypeName","src":"61561:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18210,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"61584:15:31","nodeType":"VariableDeclaration","scope":18213,"src":"61576:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18209,"name":"uint256","nodeType":"ElementaryTypeName","src":"61576:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61546:54:31"},"returnParameters":{"id":18212,"nodeType":"ParameterList","parameters":[],"src":"61614:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18225,"nodeType":"FunctionDefinition","src":"61891:134:31","nodes":[],"documentation":{"id":18214,"nodeType":"StructuredDocumentation","src":"61621:265:31","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"61900:17:31","parameters":{"id":18223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18216,"mutability":"mutable","name":"left","nameLocation":"61926:4:31","nodeType":"VariableDeclaration","scope":18225,"src":"61918:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18215,"name":"uint256","nodeType":"ElementaryTypeName","src":"61918:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18218,"mutability":"mutable","name":"right","nameLocation":"61940:5:31","nodeType":"VariableDeclaration","scope":18225,"src":"61932:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18217,"name":"uint256","nodeType":"ElementaryTypeName","src":"61932:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18220,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"61955:15:31","nodeType":"VariableDeclaration","scope":18225,"src":"61947:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18219,"name":"uint256","nodeType":"ElementaryTypeName","src":"61947:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18222,"mutability":"mutable","name":"error","nameLocation":"61988:5:31","nodeType":"VariableDeclaration","scope":18225,"src":"61972:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18221,"name":"string","nodeType":"ElementaryTypeName","src":"61972:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61917:77:31"},"returnParameters":{"id":18224,"nodeType":"ParameterList","parameters":[],"src":"62024:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18235,"nodeType":"FunctionDefinition","src":"62238:93:31","nodes":[],"documentation":{"id":18226,"nodeType":"StructuredDocumentation","src":"62031:202:31","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"62247:17:31","parameters":{"id":18233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18228,"mutability":"mutable","name":"left","nameLocation":"62272:4:31","nodeType":"VariableDeclaration","scope":18235,"src":"62265:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18227,"name":"int256","nodeType":"ElementaryTypeName","src":"62265:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18230,"mutability":"mutable","name":"right","nameLocation":"62285:5:31","nodeType":"VariableDeclaration","scope":18235,"src":"62278:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18229,"name":"int256","nodeType":"ElementaryTypeName","src":"62278:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18232,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"62300:15:31","nodeType":"VariableDeclaration","scope":18235,"src":"62292:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18231,"name":"uint256","nodeType":"ElementaryTypeName","src":"62292:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62264:52:31"},"returnParameters":{"id":18234,"nodeType":"ParameterList","parameters":[],"src":"62330:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18247,"nodeType":"FunctionDefinition","src":"62606:132:31","nodes":[],"documentation":{"id":18236,"nodeType":"StructuredDocumentation","src":"62337:264:31","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"62615:17:31","parameters":{"id":18245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18238,"mutability":"mutable","name":"left","nameLocation":"62640:4:31","nodeType":"VariableDeclaration","scope":18247,"src":"62633:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18237,"name":"int256","nodeType":"ElementaryTypeName","src":"62633:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18240,"mutability":"mutable","name":"right","nameLocation":"62653:5:31","nodeType":"VariableDeclaration","scope":18247,"src":"62646:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18239,"name":"int256","nodeType":"ElementaryTypeName","src":"62646:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18242,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"62668:15:31","nodeType":"VariableDeclaration","scope":18247,"src":"62660:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18241,"name":"uint256","nodeType":"ElementaryTypeName","src":"62660:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18244,"mutability":"mutable","name":"error","nameLocation":"62701:5:31","nodeType":"VariableDeclaration","scope":18247,"src":"62685:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18243,"name":"string","nodeType":"ElementaryTypeName","src":"62685:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62632:75:31"},"returnParameters":{"id":18246,"nodeType":"ParameterList","parameters":[],"src":"62737:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18257,"nodeType":"FunctionDefinition","src":"62847:86:31","nodes":[],"documentation":{"id":18248,"nodeType":"StructuredDocumentation","src":"62744:98:31","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"62856:15:31","parameters":{"id":18255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18250,"mutability":"mutable","name":"left","nameLocation":"62880:4:31","nodeType":"VariableDeclaration","scope":18257,"src":"62872:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18249,"name":"uint256","nodeType":"ElementaryTypeName","src":"62872:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18252,"mutability":"mutable","name":"right","nameLocation":"62894:5:31","nodeType":"VariableDeclaration","scope":18257,"src":"62886:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18251,"name":"uint256","nodeType":"ElementaryTypeName","src":"62886:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18254,"mutability":"mutable","name":"decimals","nameLocation":"62909:8:31","nodeType":"VariableDeclaration","scope":18257,"src":"62901:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18253,"name":"uint256","nodeType":"ElementaryTypeName","src":"62901:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62871:47:31"},"returnParameters":{"id":18256,"nodeType":"ParameterList","parameters":[],"src":"62932:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18269,"nodeType":"FunctionDefinition","src":"63104:109:31","nodes":[],"documentation":{"id":18258,"nodeType":"StructuredDocumentation","src":"62939:160:31","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"63113:15:31","parameters":{"id":18267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18260,"mutability":"mutable","name":"left","nameLocation":"63137:4:31","nodeType":"VariableDeclaration","scope":18269,"src":"63129:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18259,"name":"uint256","nodeType":"ElementaryTypeName","src":"63129:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18262,"mutability":"mutable","name":"right","nameLocation":"63151:5:31","nodeType":"VariableDeclaration","scope":18269,"src":"63143:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18261,"name":"uint256","nodeType":"ElementaryTypeName","src":"63143:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18264,"mutability":"mutable","name":"decimals","nameLocation":"63166:8:31","nodeType":"VariableDeclaration","scope":18269,"src":"63158:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18263,"name":"uint256","nodeType":"ElementaryTypeName","src":"63158:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18266,"mutability":"mutable","name":"error","nameLocation":"63192:5:31","nodeType":"VariableDeclaration","scope":18269,"src":"63176:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18265,"name":"string","nodeType":"ElementaryTypeName","src":"63176:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63128:70:31"},"returnParameters":{"id":18268,"nodeType":"ParameterList","parameters":[],"src":"63212:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18279,"nodeType":"FunctionDefinition","src":"63321:84:31","nodes":[],"documentation":{"id":18270,"nodeType":"StructuredDocumentation","src":"63219:97:31","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"63330:15:31","parameters":{"id":18277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18272,"mutability":"mutable","name":"left","nameLocation":"63353:4:31","nodeType":"VariableDeclaration","scope":18279,"src":"63346:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18271,"name":"int256","nodeType":"ElementaryTypeName","src":"63346:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18274,"mutability":"mutable","name":"right","nameLocation":"63366:5:31","nodeType":"VariableDeclaration","scope":18279,"src":"63359:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18273,"name":"int256","nodeType":"ElementaryTypeName","src":"63359:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18276,"mutability":"mutable","name":"decimals","nameLocation":"63381:8:31","nodeType":"VariableDeclaration","scope":18279,"src":"63373:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18275,"name":"uint256","nodeType":"ElementaryTypeName","src":"63373:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63345:45:31"},"returnParameters":{"id":18278,"nodeType":"ParameterList","parameters":[],"src":"63404:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18291,"nodeType":"FunctionDefinition","src":"63575:107:31","nodes":[],"documentation":{"id":18280,"nodeType":"StructuredDocumentation","src":"63411:159:31","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"63584:15:31","parameters":{"id":18289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18282,"mutability":"mutable","name":"left","nameLocation":"63607:4:31","nodeType":"VariableDeclaration","scope":18291,"src":"63600:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18281,"name":"int256","nodeType":"ElementaryTypeName","src":"63600:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18284,"mutability":"mutable","name":"right","nameLocation":"63620:5:31","nodeType":"VariableDeclaration","scope":18291,"src":"63613:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18283,"name":"int256","nodeType":"ElementaryTypeName","src":"63613:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18286,"mutability":"mutable","name":"decimals","nameLocation":"63635:8:31","nodeType":"VariableDeclaration","scope":18291,"src":"63627:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18285,"name":"uint256","nodeType":"ElementaryTypeName","src":"63627:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18288,"mutability":"mutable","name":"error","nameLocation":"63661:5:31","nodeType":"VariableDeclaration","scope":18291,"src":"63645:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18287,"name":"string","nodeType":"ElementaryTypeName","src":"63645:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63599:68:31"},"returnParameters":{"id":18290,"nodeType":"ParameterList","parameters":[],"src":"63681:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18299,"nodeType":"FunctionDefinition","src":"63738:55:31","nodes":[],"documentation":{"id":18292,"nodeType":"StructuredDocumentation","src":"63688:45:31","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"63747:8:31","parameters":{"id":18297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18294,"mutability":"mutable","name":"left","nameLocation":"63761:4:31","nodeType":"VariableDeclaration","scope":18299,"src":"63756:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18293,"name":"bool","nodeType":"ElementaryTypeName","src":"63756:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18296,"mutability":"mutable","name":"right","nameLocation":"63772:5:31","nodeType":"VariableDeclaration","scope":18299,"src":"63767:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18295,"name":"bool","nodeType":"ElementaryTypeName","src":"63767:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63755:23:31"},"returnParameters":{"id":18298,"nodeType":"ParameterList","parameters":[],"src":"63792:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18309,"nodeType":"FunctionDefinition","src":"63906:78:31","nodes":[],"documentation":{"id":18300,"nodeType":"StructuredDocumentation","src":"63799:102:31","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"63915:8:31","parameters":{"id":18307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18302,"mutability":"mutable","name":"left","nameLocation":"63929:4:31","nodeType":"VariableDeclaration","scope":18309,"src":"63924:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18301,"name":"bool","nodeType":"ElementaryTypeName","src":"63924:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18304,"mutability":"mutable","name":"right","nameLocation":"63940:5:31","nodeType":"VariableDeclaration","scope":18309,"src":"63935:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18303,"name":"bool","nodeType":"ElementaryTypeName","src":"63935:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18306,"mutability":"mutable","name":"error","nameLocation":"63963:5:31","nodeType":"VariableDeclaration","scope":18309,"src":"63947:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18305,"name":"string","nodeType":"ElementaryTypeName","src":"63947:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63923:46:31"},"returnParameters":{"id":18308,"nodeType":"ParameterList","parameters":[],"src":"63983:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18317,"nodeType":"FunctionDefinition","src":"64042:77:31","nodes":[],"documentation":{"id":18310,"nodeType":"StructuredDocumentation","src":"63990:47:31","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64051:8:31","parameters":{"id":18315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18312,"mutability":"mutable","name":"left","nameLocation":"64076:4:31","nodeType":"VariableDeclaration","scope":18317,"src":"64060:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18311,"name":"string","nodeType":"ElementaryTypeName","src":"64060:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18314,"mutability":"mutable","name":"right","nameLocation":"64098:5:31","nodeType":"VariableDeclaration","scope":18317,"src":"64082:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18313,"name":"string","nodeType":"ElementaryTypeName","src":"64082:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64059:45:31"},"returnParameters":{"id":18316,"nodeType":"ParameterList","parameters":[],"src":"64118:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18327,"nodeType":"FunctionDefinition","src":"64234:100:31","nodes":[],"documentation":{"id":18318,"nodeType":"StructuredDocumentation","src":"64125:104:31","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64243:8:31","parameters":{"id":18325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18320,"mutability":"mutable","name":"left","nameLocation":"64268:4:31","nodeType":"VariableDeclaration","scope":18327,"src":"64252:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18319,"name":"string","nodeType":"ElementaryTypeName","src":"64252:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18322,"mutability":"mutable","name":"right","nameLocation":"64290:5:31","nodeType":"VariableDeclaration","scope":18327,"src":"64274:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18321,"name":"string","nodeType":"ElementaryTypeName","src":"64274:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18324,"mutability":"mutable","name":"error","nameLocation":"64313:5:31","nodeType":"VariableDeclaration","scope":18327,"src":"64297:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18323,"name":"string","nodeType":"ElementaryTypeName","src":"64297:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64251:68:31"},"returnParameters":{"id":18326,"nodeType":"ParameterList","parameters":[],"src":"64333:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18335,"nodeType":"FunctionDefinition","src":"64391:75:31","nodes":[],"documentation":{"id":18328,"nodeType":"StructuredDocumentation","src":"64340:46:31","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64400:8:31","parameters":{"id":18333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18330,"mutability":"mutable","name":"left","nameLocation":"64424:4:31","nodeType":"VariableDeclaration","scope":18335,"src":"64409:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18329,"name":"bytes","nodeType":"ElementaryTypeName","src":"64409:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18332,"mutability":"mutable","name":"right","nameLocation":"64445:5:31","nodeType":"VariableDeclaration","scope":18335,"src":"64430:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18331,"name":"bytes","nodeType":"ElementaryTypeName","src":"64430:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"64408:43:31"},"returnParameters":{"id":18334,"nodeType":"ParameterList","parameters":[],"src":"64465:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18345,"nodeType":"FunctionDefinition","src":"64580:98:31","nodes":[],"documentation":{"id":18336,"nodeType":"StructuredDocumentation","src":"64472:103:31","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64589:8:31","parameters":{"id":18343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18338,"mutability":"mutable","name":"left","nameLocation":"64613:4:31","nodeType":"VariableDeclaration","scope":18345,"src":"64598:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18337,"name":"bytes","nodeType":"ElementaryTypeName","src":"64598:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18340,"mutability":"mutable","name":"right","nameLocation":"64634:5:31","nodeType":"VariableDeclaration","scope":18345,"src":"64619:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18339,"name":"bytes","nodeType":"ElementaryTypeName","src":"64619:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18342,"mutability":"mutable","name":"error","nameLocation":"64657:5:31","nodeType":"VariableDeclaration","scope":18345,"src":"64641:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18341,"name":"string","nodeType":"ElementaryTypeName","src":"64641:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64597:66:31"},"returnParameters":{"id":18344,"nodeType":"ParameterList","parameters":[],"src":"64677:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18355,"nodeType":"FunctionDefinition","src":"64744:77:31","nodes":[],"documentation":{"id":18346,"nodeType":"StructuredDocumentation","src":"64684:55:31","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64753:8:31","parameters":{"id":18353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18349,"mutability":"mutable","name":"left","nameLocation":"64778:4:31","nodeType":"VariableDeclaration","scope":18355,"src":"64762:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18347,"name":"bool","nodeType":"ElementaryTypeName","src":"64762:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18348,"nodeType":"ArrayTypeName","src":"64762:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18352,"mutability":"mutable","name":"right","nameLocation":"64800:5:31","nodeType":"VariableDeclaration","scope":18355,"src":"64784:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18350,"name":"bool","nodeType":"ElementaryTypeName","src":"64784:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18351,"nodeType":"ArrayTypeName","src":"64784:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"64761:45:31"},"returnParameters":{"id":18354,"nodeType":"ParameterList","parameters":[],"src":"64820:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18367,"nodeType":"FunctionDefinition","src":"64944:100:31","nodes":[],"documentation":{"id":18356,"nodeType":"StructuredDocumentation","src":"64827:112:31","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"64953:8:31","parameters":{"id":18365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18359,"mutability":"mutable","name":"left","nameLocation":"64978:4:31","nodeType":"VariableDeclaration","scope":18367,"src":"64962:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18357,"name":"bool","nodeType":"ElementaryTypeName","src":"64962:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18358,"nodeType":"ArrayTypeName","src":"64962:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18362,"mutability":"mutable","name":"right","nameLocation":"65000:5:31","nodeType":"VariableDeclaration","scope":18367,"src":"64984:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18360,"name":"bool","nodeType":"ElementaryTypeName","src":"64984:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18361,"nodeType":"ArrayTypeName","src":"64984:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18364,"mutability":"mutable","name":"error","nameLocation":"65023:5:31","nodeType":"VariableDeclaration","scope":18367,"src":"65007:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18363,"name":"string","nodeType":"ElementaryTypeName","src":"65007:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64961:68:31"},"returnParameters":{"id":18366,"nodeType":"ParameterList","parameters":[],"src":"65043:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18377,"nodeType":"FunctionDefinition","src":"65112:83:31","nodes":[],"documentation":{"id":18368,"nodeType":"StructuredDocumentation","src":"65050:57:31","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65121:8:31","parameters":{"id":18375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18371,"mutability":"mutable","name":"left","nameLocation":"65149:4:31","nodeType":"VariableDeclaration","scope":18377,"src":"65130:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18369,"name":"uint256","nodeType":"ElementaryTypeName","src":"65130:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18370,"nodeType":"ArrayTypeName","src":"65130:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18374,"mutability":"mutable","name":"right","nameLocation":"65174:5:31","nodeType":"VariableDeclaration","scope":18377,"src":"65155:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18372,"name":"uint256","nodeType":"ElementaryTypeName","src":"65155:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18373,"nodeType":"ArrayTypeName","src":"65155:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"65129:51:31"},"returnParameters":{"id":18376,"nodeType":"ParameterList","parameters":[],"src":"65194:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18389,"nodeType":"FunctionDefinition","src":"65321:106:31","nodes":[],"documentation":{"id":18378,"nodeType":"StructuredDocumentation","src":"65201:115:31","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65330:8:31","parameters":{"id":18387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18381,"mutability":"mutable","name":"left","nameLocation":"65358:4:31","nodeType":"VariableDeclaration","scope":18389,"src":"65339:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18379,"name":"uint256","nodeType":"ElementaryTypeName","src":"65339:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18380,"nodeType":"ArrayTypeName","src":"65339:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18384,"mutability":"mutable","name":"right","nameLocation":"65383:5:31","nodeType":"VariableDeclaration","scope":18389,"src":"65364:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18382,"name":"uint256","nodeType":"ElementaryTypeName","src":"65364:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18383,"nodeType":"ArrayTypeName","src":"65364:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18386,"mutability":"mutable","name":"error","nameLocation":"65406:5:31","nodeType":"VariableDeclaration","scope":18389,"src":"65390:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18385,"name":"string","nodeType":"ElementaryTypeName","src":"65390:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65338:74:31"},"returnParameters":{"id":18388,"nodeType":"ParameterList","parameters":[],"src":"65426:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18399,"nodeType":"FunctionDefinition","src":"65495:81:31","nodes":[],"documentation":{"id":18390,"nodeType":"StructuredDocumentation","src":"65433:57:31","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65504:8:31","parameters":{"id":18397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18393,"mutability":"mutable","name":"left","nameLocation":"65531:4:31","nodeType":"VariableDeclaration","scope":18399,"src":"65513:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18391,"name":"int256","nodeType":"ElementaryTypeName","src":"65513:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18392,"nodeType":"ArrayTypeName","src":"65513:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18396,"mutability":"mutable","name":"right","nameLocation":"65555:5:31","nodeType":"VariableDeclaration","scope":18399,"src":"65537:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18394,"name":"int256","nodeType":"ElementaryTypeName","src":"65537:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18395,"nodeType":"ArrayTypeName","src":"65537:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"65512:49:31"},"returnParameters":{"id":18398,"nodeType":"ParameterList","parameters":[],"src":"65575:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18411,"nodeType":"FunctionDefinition","src":"65701:104:31","nodes":[],"documentation":{"id":18400,"nodeType":"StructuredDocumentation","src":"65582:114:31","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65710:8:31","parameters":{"id":18409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18403,"mutability":"mutable","name":"left","nameLocation":"65737:4:31","nodeType":"VariableDeclaration","scope":18411,"src":"65719:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18401,"name":"int256","nodeType":"ElementaryTypeName","src":"65719:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18402,"nodeType":"ArrayTypeName","src":"65719:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18406,"mutability":"mutable","name":"right","nameLocation":"65761:5:31","nodeType":"VariableDeclaration","scope":18411,"src":"65743:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18404,"name":"int256","nodeType":"ElementaryTypeName","src":"65743:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18405,"nodeType":"ArrayTypeName","src":"65743:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18408,"mutability":"mutable","name":"error","nameLocation":"65784:5:31","nodeType":"VariableDeclaration","scope":18411,"src":"65768:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18407,"name":"string","nodeType":"ElementaryTypeName","src":"65768:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65718:72:31"},"returnParameters":{"id":18410,"nodeType":"ParameterList","parameters":[],"src":"65804:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18419,"nodeType":"FunctionDefinition","src":"65864:61:31","nodes":[],"documentation":{"id":18412,"nodeType":"StructuredDocumentation","src":"65811:48:31","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"65873:8:31","parameters":{"id":18417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18414,"mutability":"mutable","name":"left","nameLocation":"65890:4:31","nodeType":"VariableDeclaration","scope":18419,"src":"65882:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18413,"name":"uint256","nodeType":"ElementaryTypeName","src":"65882:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18416,"mutability":"mutable","name":"right","nameLocation":"65904:5:31","nodeType":"VariableDeclaration","scope":18419,"src":"65896:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18415,"name":"uint256","nodeType":"ElementaryTypeName","src":"65896:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65881:29:31"},"returnParameters":{"id":18418,"nodeType":"ParameterList","parameters":[],"src":"65924:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18429,"nodeType":"FunctionDefinition","src":"65994:83:31","nodes":[],"documentation":{"id":18420,"nodeType":"StructuredDocumentation","src":"65931:58:31","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66003:8:31","parameters":{"id":18427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18423,"mutability":"mutable","name":"left","nameLocation":"66031:4:31","nodeType":"VariableDeclaration","scope":18429,"src":"66012:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18421,"name":"address","nodeType":"ElementaryTypeName","src":"66012:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18422,"nodeType":"ArrayTypeName","src":"66012:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18426,"mutability":"mutable","name":"right","nameLocation":"66056:5:31","nodeType":"VariableDeclaration","scope":18429,"src":"66037:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18424,"name":"address","nodeType":"ElementaryTypeName","src":"66037:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18425,"nodeType":"ArrayTypeName","src":"66037:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"66011:51:31"},"returnParameters":{"id":18428,"nodeType":"ParameterList","parameters":[],"src":"66076:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18441,"nodeType":"FunctionDefinition","src":"66203:106:31","nodes":[],"documentation":{"id":18430,"nodeType":"StructuredDocumentation","src":"66083:115:31","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66212:8:31","parameters":{"id":18439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18433,"mutability":"mutable","name":"left","nameLocation":"66240:4:31","nodeType":"VariableDeclaration","scope":18441,"src":"66221:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18431,"name":"address","nodeType":"ElementaryTypeName","src":"66221:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18432,"nodeType":"ArrayTypeName","src":"66221:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18436,"mutability":"mutable","name":"right","nameLocation":"66265:5:31","nodeType":"VariableDeclaration","scope":18441,"src":"66246:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18434,"name":"address","nodeType":"ElementaryTypeName","src":"66246:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18435,"nodeType":"ArrayTypeName","src":"66246:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18438,"mutability":"mutable","name":"error","nameLocation":"66288:5:31","nodeType":"VariableDeclaration","scope":18441,"src":"66272:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18437,"name":"string","nodeType":"ElementaryTypeName","src":"66272:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66220:74:31"},"returnParameters":{"id":18440,"nodeType":"ParameterList","parameters":[],"src":"66308:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18451,"nodeType":"FunctionDefinition","src":"66378:83:31","nodes":[],"documentation":{"id":18442,"nodeType":"StructuredDocumentation","src":"66315:58:31","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66387:8:31","parameters":{"id":18449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18445,"mutability":"mutable","name":"left","nameLocation":"66415:4:31","nodeType":"VariableDeclaration","scope":18451,"src":"66396:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66396:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18444,"nodeType":"ArrayTypeName","src":"66396:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18448,"mutability":"mutable","name":"right","nameLocation":"66440:5:31","nodeType":"VariableDeclaration","scope":18451,"src":"66421:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66421:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18447,"nodeType":"ArrayTypeName","src":"66421:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"66395:51:31"},"returnParameters":{"id":18450,"nodeType":"ParameterList","parameters":[],"src":"66460:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18463,"nodeType":"FunctionDefinition","src":"66587:106:31","nodes":[],"documentation":{"id":18452,"nodeType":"StructuredDocumentation","src":"66467:115:31","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66596:8:31","parameters":{"id":18461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18455,"mutability":"mutable","name":"left","nameLocation":"66624:4:31","nodeType":"VariableDeclaration","scope":18463,"src":"66605:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66605:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18454,"nodeType":"ArrayTypeName","src":"66605:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18458,"mutability":"mutable","name":"right","nameLocation":"66649:5:31","nodeType":"VariableDeclaration","scope":18463,"src":"66630:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66630:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18457,"nodeType":"ArrayTypeName","src":"66630:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18460,"mutability":"mutable","name":"error","nameLocation":"66672:5:31","nodeType":"VariableDeclaration","scope":18463,"src":"66656:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18459,"name":"string","nodeType":"ElementaryTypeName","src":"66656:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66604:74:31"},"returnParameters":{"id":18462,"nodeType":"ParameterList","parameters":[],"src":"66692:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18473,"nodeType":"FunctionDefinition","src":"66761:81:31","nodes":[],"documentation":{"id":18464,"nodeType":"StructuredDocumentation","src":"66699:57:31","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66770:8:31","parameters":{"id":18471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18467,"mutability":"mutable","name":"left","nameLocation":"66797:4:31","nodeType":"VariableDeclaration","scope":18473,"src":"66779:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18465,"name":"string","nodeType":"ElementaryTypeName","src":"66779:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18466,"nodeType":"ArrayTypeName","src":"66779:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18470,"mutability":"mutable","name":"right","nameLocation":"66821:5:31","nodeType":"VariableDeclaration","scope":18473,"src":"66803:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18468,"name":"string","nodeType":"ElementaryTypeName","src":"66803:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18469,"nodeType":"ArrayTypeName","src":"66803:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66778:49:31"},"returnParameters":{"id":18472,"nodeType":"ParameterList","parameters":[],"src":"66841:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18485,"nodeType":"FunctionDefinition","src":"66967:104:31","nodes":[],"documentation":{"id":18474,"nodeType":"StructuredDocumentation","src":"66848:114:31","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"66976:8:31","parameters":{"id":18483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18477,"mutability":"mutable","name":"left","nameLocation":"67003:4:31","nodeType":"VariableDeclaration","scope":18485,"src":"66985:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18475,"name":"string","nodeType":"ElementaryTypeName","src":"66985:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18476,"nodeType":"ArrayTypeName","src":"66985:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18480,"mutability":"mutable","name":"right","nameLocation":"67027:5:31","nodeType":"VariableDeclaration","scope":18485,"src":"67009:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18478,"name":"string","nodeType":"ElementaryTypeName","src":"67009:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18479,"nodeType":"ArrayTypeName","src":"67009:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18482,"mutability":"mutable","name":"error","nameLocation":"67050:5:31","nodeType":"VariableDeclaration","scope":18485,"src":"67034:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18481,"name":"string","nodeType":"ElementaryTypeName","src":"67034:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66984:72:31"},"returnParameters":{"id":18484,"nodeType":"ParameterList","parameters":[],"src":"67070:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18495,"nodeType":"FunctionDefinition","src":"67138:79:31","nodes":[],"documentation":{"id":18486,"nodeType":"StructuredDocumentation","src":"67077:56:31","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67147:8:31","parameters":{"id":18493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18489,"mutability":"mutable","name":"left","nameLocation":"67173:4:31","nodeType":"VariableDeclaration","scope":18495,"src":"67156:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18487,"name":"bytes","nodeType":"ElementaryTypeName","src":"67156:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18488,"nodeType":"ArrayTypeName","src":"67156:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18492,"mutability":"mutable","name":"right","nameLocation":"67196:5:31","nodeType":"VariableDeclaration","scope":18495,"src":"67179:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18490,"name":"bytes","nodeType":"ElementaryTypeName","src":"67179:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18491,"nodeType":"ArrayTypeName","src":"67179:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"67155:47:31"},"returnParameters":{"id":18494,"nodeType":"ParameterList","parameters":[],"src":"67216:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18507,"nodeType":"FunctionDefinition","src":"67341:102:31","nodes":[],"documentation":{"id":18496,"nodeType":"StructuredDocumentation","src":"67223:113:31","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67350:8:31","parameters":{"id":18505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18499,"mutability":"mutable","name":"left","nameLocation":"67376:4:31","nodeType":"VariableDeclaration","scope":18507,"src":"67359:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18497,"name":"bytes","nodeType":"ElementaryTypeName","src":"67359:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18498,"nodeType":"ArrayTypeName","src":"67359:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18502,"mutability":"mutable","name":"right","nameLocation":"67399:5:31","nodeType":"VariableDeclaration","scope":18507,"src":"67382:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18500,"name":"bytes","nodeType":"ElementaryTypeName","src":"67382:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18501,"nodeType":"ArrayTypeName","src":"67382:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18504,"mutability":"mutable","name":"error","nameLocation":"67422:5:31","nodeType":"VariableDeclaration","scope":18507,"src":"67406:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18503,"name":"string","nodeType":"ElementaryTypeName","src":"67406:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67358:70:31"},"returnParameters":{"id":18506,"nodeType":"ParameterList","parameters":[],"src":"67442:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18517,"nodeType":"FunctionDefinition","src":"67559:84:31","nodes":[],"documentation":{"id":18508,"nodeType":"StructuredDocumentation","src":"67449:105:31","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67568:8:31","parameters":{"id":18515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18510,"mutability":"mutable","name":"left","nameLocation":"67585:4:31","nodeType":"VariableDeclaration","scope":18517,"src":"67577:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18509,"name":"uint256","nodeType":"ElementaryTypeName","src":"67577:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18512,"mutability":"mutable","name":"right","nameLocation":"67599:5:31","nodeType":"VariableDeclaration","scope":18517,"src":"67591:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18511,"name":"uint256","nodeType":"ElementaryTypeName","src":"67591:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18514,"mutability":"mutable","name":"error","nameLocation":"67622:5:31","nodeType":"VariableDeclaration","scope":18517,"src":"67606:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18513,"name":"string","nodeType":"ElementaryTypeName","src":"67606:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67576:52:31"},"returnParameters":{"id":18516,"nodeType":"ParameterList","parameters":[],"src":"67642:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18525,"nodeType":"FunctionDefinition","src":"67701:59:31","nodes":[],"documentation":{"id":18518,"nodeType":"StructuredDocumentation","src":"67649:47:31","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67710:8:31","parameters":{"id":18523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18520,"mutability":"mutable","name":"left","nameLocation":"67726:4:31","nodeType":"VariableDeclaration","scope":18525,"src":"67719:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18519,"name":"int256","nodeType":"ElementaryTypeName","src":"67719:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18522,"mutability":"mutable","name":"right","nameLocation":"67739:5:31","nodeType":"VariableDeclaration","scope":18525,"src":"67732:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18521,"name":"int256","nodeType":"ElementaryTypeName","src":"67732:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67718:27:31"},"returnParameters":{"id":18524,"nodeType":"ParameterList","parameters":[],"src":"67759:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18535,"nodeType":"FunctionDefinition","src":"67875:82:31","nodes":[],"documentation":{"id":18526,"nodeType":"StructuredDocumentation","src":"67766:104:31","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"67884:8:31","parameters":{"id":18533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18528,"mutability":"mutable","name":"left","nameLocation":"67900:4:31","nodeType":"VariableDeclaration","scope":18535,"src":"67893:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18527,"name":"int256","nodeType":"ElementaryTypeName","src":"67893:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18530,"mutability":"mutable","name":"right","nameLocation":"67913:5:31","nodeType":"VariableDeclaration","scope":18535,"src":"67906:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18529,"name":"int256","nodeType":"ElementaryTypeName","src":"67906:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18532,"mutability":"mutable","name":"error","nameLocation":"67936:5:31","nodeType":"VariableDeclaration","scope":18535,"src":"67920:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18531,"name":"string","nodeType":"ElementaryTypeName","src":"67920:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67892:50:31"},"returnParameters":{"id":18534,"nodeType":"ParameterList","parameters":[],"src":"67956:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18543,"nodeType":"FunctionDefinition","src":"68016:61:31","nodes":[],"documentation":{"id":18536,"nodeType":"StructuredDocumentation","src":"67963:48:31","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68025:8:31","parameters":{"id":18541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18538,"mutability":"mutable","name":"left","nameLocation":"68042:4:31","nodeType":"VariableDeclaration","scope":18543,"src":"68034:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18537,"name":"address","nodeType":"ElementaryTypeName","src":"68034:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18540,"mutability":"mutable","name":"right","nameLocation":"68056:5:31","nodeType":"VariableDeclaration","scope":18543,"src":"68048:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18539,"name":"address","nodeType":"ElementaryTypeName","src":"68048:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68033:29:31"},"returnParameters":{"id":18542,"nodeType":"ParameterList","parameters":[],"src":"68076:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18553,"nodeType":"FunctionDefinition","src":"68193:84:31","nodes":[],"documentation":{"id":18544,"nodeType":"StructuredDocumentation","src":"68083:105:31","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68202:8:31","parameters":{"id":18551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18546,"mutability":"mutable","name":"left","nameLocation":"68219:4:31","nodeType":"VariableDeclaration","scope":18553,"src":"68211:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18545,"name":"address","nodeType":"ElementaryTypeName","src":"68211:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18548,"mutability":"mutable","name":"right","nameLocation":"68233:5:31","nodeType":"VariableDeclaration","scope":18553,"src":"68225:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18547,"name":"address","nodeType":"ElementaryTypeName","src":"68225:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18550,"mutability":"mutable","name":"error","nameLocation":"68256:5:31","nodeType":"VariableDeclaration","scope":18553,"src":"68240:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18549,"name":"string","nodeType":"ElementaryTypeName","src":"68240:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68210:52:31"},"returnParameters":{"id":18552,"nodeType":"ParameterList","parameters":[],"src":"68276:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18561,"nodeType":"FunctionDefinition","src":"68336:61:31","nodes":[],"documentation":{"id":18554,"nodeType":"StructuredDocumentation","src":"68283:48:31","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68345:8:31","parameters":{"id":18559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18556,"mutability":"mutable","name":"left","nameLocation":"68362:4:31","nodeType":"VariableDeclaration","scope":18561,"src":"68354:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68354:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18558,"mutability":"mutable","name":"right","nameLocation":"68376:5:31","nodeType":"VariableDeclaration","scope":18561,"src":"68368:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68368:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"68353:29:31"},"returnParameters":{"id":18560,"nodeType":"ParameterList","parameters":[],"src":"68396:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18571,"nodeType":"FunctionDefinition","src":"68513:84:31","nodes":[],"documentation":{"id":18562,"nodeType":"StructuredDocumentation","src":"68403:105:31","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"68522:8:31","parameters":{"id":18569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18564,"mutability":"mutable","name":"left","nameLocation":"68539:4:31","nodeType":"VariableDeclaration","scope":18571,"src":"68531:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68531:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18566,"mutability":"mutable","name":"right","nameLocation":"68553:5:31","nodeType":"VariableDeclaration","scope":18571,"src":"68545:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68545:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18568,"mutability":"mutable","name":"error","nameLocation":"68576:5:31","nodeType":"VariableDeclaration","scope":18571,"src":"68560:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18567,"name":"string","nodeType":"ElementaryTypeName","src":"68560:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68530:52:31"},"returnParameters":{"id":18570,"nodeType":"ParameterList","parameters":[],"src":"68596:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18577,"nodeType":"FunctionDefinition","src":"68654:51:31","nodes":[],"documentation":{"id":18572,"nodeType":"StructuredDocumentation","src":"68603:46:31","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"68663:11:31","parameters":{"id":18575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18574,"mutability":"mutable","name":"condition","nameLocation":"68680:9:31","nodeType":"VariableDeclaration","scope":18577,"src":"68675:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18573,"name":"bool","nodeType":"ElementaryTypeName","src":"68675:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68674:16:31"},"returnParameters":{"id":18576,"nodeType":"ParameterList","parameters":[],"src":"68704:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18585,"nodeType":"FunctionDefinition","src":"68819:74:31","nodes":[],"documentation":{"id":18578,"nodeType":"StructuredDocumentation","src":"68711:103:31","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"68828:11:31","parameters":{"id":18583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18580,"mutability":"mutable","name":"condition","nameLocation":"68845:9:31","nodeType":"VariableDeclaration","scope":18585,"src":"68840:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18579,"name":"bool","nodeType":"ElementaryTypeName","src":"68840:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18582,"mutability":"mutable","name":"error","nameLocation":"68872:5:31","nodeType":"VariableDeclaration","scope":18585,"src":"68856:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18581,"name":"string","nodeType":"ElementaryTypeName","src":"68856:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68839:39:31"},"returnParameters":{"id":18584,"nodeType":"ParameterList","parameters":[],"src":"68892:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18595,"nodeType":"FunctionDefinition","src":"69054:86:31","nodes":[],"documentation":{"id":18586,"nodeType":"StructuredDocumentation","src":"68899:150:31","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69063:15:31","parameters":{"id":18593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18588,"mutability":"mutable","name":"left","nameLocation":"69087:4:31","nodeType":"VariableDeclaration","scope":18595,"src":"69079:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18587,"name":"uint256","nodeType":"ElementaryTypeName","src":"69079:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18590,"mutability":"mutable","name":"right","nameLocation":"69101:5:31","nodeType":"VariableDeclaration","scope":18595,"src":"69093:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18589,"name":"uint256","nodeType":"ElementaryTypeName","src":"69093:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18592,"mutability":"mutable","name":"decimals","nameLocation":"69116:8:31","nodeType":"VariableDeclaration","scope":18595,"src":"69108:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18591,"name":"uint256","nodeType":"ElementaryTypeName","src":"69108:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69078:47:31"},"returnParameters":{"id":18594,"nodeType":"ParameterList","parameters":[],"src":"69139:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18607,"nodeType":"FunctionDefinition","src":"69355:109:31","nodes":[],"documentation":{"id":18596,"nodeType":"StructuredDocumentation","src":"69146:204:31","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69364:15:31","parameters":{"id":18605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18598,"mutability":"mutable","name":"left","nameLocation":"69388:4:31","nodeType":"VariableDeclaration","scope":18607,"src":"69380:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18597,"name":"uint256","nodeType":"ElementaryTypeName","src":"69380:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18600,"mutability":"mutable","name":"right","nameLocation":"69402:5:31","nodeType":"VariableDeclaration","scope":18607,"src":"69394:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18599,"name":"uint256","nodeType":"ElementaryTypeName","src":"69394:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18602,"mutability":"mutable","name":"decimals","nameLocation":"69417:8:31","nodeType":"VariableDeclaration","scope":18607,"src":"69409:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18601,"name":"uint256","nodeType":"ElementaryTypeName","src":"69409:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18604,"mutability":"mutable","name":"error","nameLocation":"69443:5:31","nodeType":"VariableDeclaration","scope":18607,"src":"69427:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18603,"name":"string","nodeType":"ElementaryTypeName","src":"69427:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69379:70:31"},"returnParameters":{"id":18606,"nodeType":"ParameterList","parameters":[],"src":"69463:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18617,"nodeType":"FunctionDefinition","src":"69624:84:31","nodes":[],"documentation":{"id":18608,"nodeType":"StructuredDocumentation","src":"69470:149:31","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69633:15:31","parameters":{"id":18615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18610,"mutability":"mutable","name":"left","nameLocation":"69656:4:31","nodeType":"VariableDeclaration","scope":18617,"src":"69649:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18609,"name":"int256","nodeType":"ElementaryTypeName","src":"69649:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18612,"mutability":"mutable","name":"right","nameLocation":"69669:5:31","nodeType":"VariableDeclaration","scope":18617,"src":"69662:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18611,"name":"int256","nodeType":"ElementaryTypeName","src":"69662:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18614,"mutability":"mutable","name":"decimals","nameLocation":"69684:8:31","nodeType":"VariableDeclaration","scope":18617,"src":"69676:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18613,"name":"uint256","nodeType":"ElementaryTypeName","src":"69676:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69648:45:31"},"returnParameters":{"id":18616,"nodeType":"ParameterList","parameters":[],"src":"69707:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18629,"nodeType":"FunctionDefinition","src":"69922:107:31","nodes":[],"documentation":{"id":18618,"nodeType":"StructuredDocumentation","src":"69714:203:31","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"69931:15:31","parameters":{"id":18627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18620,"mutability":"mutable","name":"left","nameLocation":"69954:4:31","nodeType":"VariableDeclaration","scope":18629,"src":"69947:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18619,"name":"int256","nodeType":"ElementaryTypeName","src":"69947:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18622,"mutability":"mutable","name":"right","nameLocation":"69967:5:31","nodeType":"VariableDeclaration","scope":18629,"src":"69960:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18621,"name":"int256","nodeType":"ElementaryTypeName","src":"69960:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18624,"mutability":"mutable","name":"decimals","nameLocation":"69982:8:31","nodeType":"VariableDeclaration","scope":18629,"src":"69974:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18623,"name":"uint256","nodeType":"ElementaryTypeName","src":"69974:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18626,"mutability":"mutable","name":"error","nameLocation":"70008:5:31","nodeType":"VariableDeclaration","scope":18629,"src":"69992:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18625,"name":"string","nodeType":"ElementaryTypeName","src":"69992:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69946:68:31"},"returnParameters":{"id":18628,"nodeType":"ParameterList","parameters":[],"src":"70028:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18637,"nodeType":"FunctionDefinition","src":"70133:61:31","nodes":[],"documentation":{"id":18630,"nodeType":"StructuredDocumentation","src":"70035:93:31","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70142:8:31","parameters":{"id":18635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18632,"mutability":"mutable","name":"left","nameLocation":"70159:4:31","nodeType":"VariableDeclaration","scope":18637,"src":"70151:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18631,"name":"uint256","nodeType":"ElementaryTypeName","src":"70151:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18634,"mutability":"mutable","name":"right","nameLocation":"70173:5:31","nodeType":"VariableDeclaration","scope":18637,"src":"70165:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18633,"name":"uint256","nodeType":"ElementaryTypeName","src":"70165:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70150:29:31"},"returnParameters":{"id":18636,"nodeType":"ParameterList","parameters":[],"src":"70193:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18647,"nodeType":"FunctionDefinition","src":"70360:84:31","nodes":[],"documentation":{"id":18638,"nodeType":"StructuredDocumentation","src":"70200:155:31","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70369:8:31","parameters":{"id":18645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18640,"mutability":"mutable","name":"left","nameLocation":"70386:4:31","nodeType":"VariableDeclaration","scope":18647,"src":"70378:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18639,"name":"uint256","nodeType":"ElementaryTypeName","src":"70378:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18642,"mutability":"mutable","name":"right","nameLocation":"70400:5:31","nodeType":"VariableDeclaration","scope":18647,"src":"70392:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18641,"name":"uint256","nodeType":"ElementaryTypeName","src":"70392:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18644,"mutability":"mutable","name":"error","nameLocation":"70423:5:31","nodeType":"VariableDeclaration","scope":18647,"src":"70407:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18643,"name":"string","nodeType":"ElementaryTypeName","src":"70407:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70377:52:31"},"returnParameters":{"id":18646,"nodeType":"ParameterList","parameters":[],"src":"70443:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18655,"nodeType":"FunctionDefinition","src":"70547:59:31","nodes":[],"documentation":{"id":18648,"nodeType":"StructuredDocumentation","src":"70450:92:31","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70556:8:31","parameters":{"id":18653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18650,"mutability":"mutable","name":"left","nameLocation":"70572:4:31","nodeType":"VariableDeclaration","scope":18655,"src":"70565:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18649,"name":"int256","nodeType":"ElementaryTypeName","src":"70565:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18652,"mutability":"mutable","name":"right","nameLocation":"70585:5:31","nodeType":"VariableDeclaration","scope":18655,"src":"70578:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18651,"name":"int256","nodeType":"ElementaryTypeName","src":"70578:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70564:27:31"},"returnParameters":{"id":18654,"nodeType":"ParameterList","parameters":[],"src":"70605:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18665,"nodeType":"FunctionDefinition","src":"70771:82:31","nodes":[],"documentation":{"id":18656,"nodeType":"StructuredDocumentation","src":"70612:154:31","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"70780:8:31","parameters":{"id":18663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18658,"mutability":"mutable","name":"left","nameLocation":"70796:4:31","nodeType":"VariableDeclaration","scope":18665,"src":"70789:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18657,"name":"int256","nodeType":"ElementaryTypeName","src":"70789:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18660,"mutability":"mutable","name":"right","nameLocation":"70809:5:31","nodeType":"VariableDeclaration","scope":18665,"src":"70802:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18659,"name":"int256","nodeType":"ElementaryTypeName","src":"70802:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18662,"mutability":"mutable","name":"error","nameLocation":"70832:5:31","nodeType":"VariableDeclaration","scope":18665,"src":"70816:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18661,"name":"string","nodeType":"ElementaryTypeName","src":"70816:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70788:50:31"},"returnParameters":{"id":18664,"nodeType":"ParameterList","parameters":[],"src":"70852:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18675,"nodeType":"FunctionDefinition","src":"71002:86:31","nodes":[],"documentation":{"id":18666,"nodeType":"StructuredDocumentation","src":"70859:138:31","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71011:15:31","parameters":{"id":18673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18668,"mutability":"mutable","name":"left","nameLocation":"71035:4:31","nodeType":"VariableDeclaration","scope":18675,"src":"71027:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18667,"name":"uint256","nodeType":"ElementaryTypeName","src":"71027:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18670,"mutability":"mutable","name":"right","nameLocation":"71049:5:31","nodeType":"VariableDeclaration","scope":18675,"src":"71041:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18669,"name":"uint256","nodeType":"ElementaryTypeName","src":"71041:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18672,"mutability":"mutable","name":"decimals","nameLocation":"71064:8:31","nodeType":"VariableDeclaration","scope":18675,"src":"71056:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18671,"name":"uint256","nodeType":"ElementaryTypeName","src":"71056:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71026:47:31"},"returnParameters":{"id":18674,"nodeType":"ParameterList","parameters":[],"src":"71087:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18687,"nodeType":"FunctionDefinition","src":"71291:109:31","nodes":[],"documentation":{"id":18676,"nodeType":"StructuredDocumentation","src":"71094:192:31","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71300:15:31","parameters":{"id":18685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18678,"mutability":"mutable","name":"left","nameLocation":"71324:4:31","nodeType":"VariableDeclaration","scope":18687,"src":"71316:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18677,"name":"uint256","nodeType":"ElementaryTypeName","src":"71316:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18680,"mutability":"mutable","name":"right","nameLocation":"71338:5:31","nodeType":"VariableDeclaration","scope":18687,"src":"71330:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18679,"name":"uint256","nodeType":"ElementaryTypeName","src":"71330:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18682,"mutability":"mutable","name":"decimals","nameLocation":"71353:8:31","nodeType":"VariableDeclaration","scope":18687,"src":"71345:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18681,"name":"uint256","nodeType":"ElementaryTypeName","src":"71345:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18684,"mutability":"mutable","name":"error","nameLocation":"71379:5:31","nodeType":"VariableDeclaration","scope":18687,"src":"71363:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18683,"name":"string","nodeType":"ElementaryTypeName","src":"71363:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71315:70:31"},"returnParameters":{"id":18686,"nodeType":"ParameterList","parameters":[],"src":"71399:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18697,"nodeType":"FunctionDefinition","src":"71548:84:31","nodes":[],"documentation":{"id":18688,"nodeType":"StructuredDocumentation","src":"71406:137:31","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71557:15:31","parameters":{"id":18695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18690,"mutability":"mutable","name":"left","nameLocation":"71580:4:31","nodeType":"VariableDeclaration","scope":18697,"src":"71573:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18689,"name":"int256","nodeType":"ElementaryTypeName","src":"71573:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18692,"mutability":"mutable","name":"right","nameLocation":"71593:5:31","nodeType":"VariableDeclaration","scope":18697,"src":"71586:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18691,"name":"int256","nodeType":"ElementaryTypeName","src":"71586:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18694,"mutability":"mutable","name":"decimals","nameLocation":"71608:8:31","nodeType":"VariableDeclaration","scope":18697,"src":"71600:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18693,"name":"uint256","nodeType":"ElementaryTypeName","src":"71600:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71572:45:31"},"returnParameters":{"id":18696,"nodeType":"ParameterList","parameters":[],"src":"71631:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18709,"nodeType":"FunctionDefinition","src":"71834:107:31","nodes":[],"documentation":{"id":18698,"nodeType":"StructuredDocumentation","src":"71638:191:31","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"71843:15:31","parameters":{"id":18707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18700,"mutability":"mutable","name":"left","nameLocation":"71866:4:31","nodeType":"VariableDeclaration","scope":18709,"src":"71859:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18699,"name":"int256","nodeType":"ElementaryTypeName","src":"71859:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18702,"mutability":"mutable","name":"right","nameLocation":"71879:5:31","nodeType":"VariableDeclaration","scope":18709,"src":"71872:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18701,"name":"int256","nodeType":"ElementaryTypeName","src":"71872:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18704,"mutability":"mutable","name":"decimals","nameLocation":"71894:8:31","nodeType":"VariableDeclaration","scope":18709,"src":"71886:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18703,"name":"uint256","nodeType":"ElementaryTypeName","src":"71886:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18706,"mutability":"mutable","name":"error","nameLocation":"71920:5:31","nodeType":"VariableDeclaration","scope":18709,"src":"71904:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18705,"name":"string","nodeType":"ElementaryTypeName","src":"71904:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71858:68:31"},"returnParameters":{"id":18708,"nodeType":"ParameterList","parameters":[],"src":"71940:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18717,"nodeType":"FunctionDefinition","src":"72033:61:31","nodes":[],"documentation":{"id":18710,"nodeType":"StructuredDocumentation","src":"71947:81:31","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72042:8:31","parameters":{"id":18715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18712,"mutability":"mutable","name":"left","nameLocation":"72059:4:31","nodeType":"VariableDeclaration","scope":18717,"src":"72051:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18711,"name":"uint256","nodeType":"ElementaryTypeName","src":"72051:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18714,"mutability":"mutable","name":"right","nameLocation":"72073:5:31","nodeType":"VariableDeclaration","scope":18717,"src":"72065:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18713,"name":"uint256","nodeType":"ElementaryTypeName","src":"72065:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72050:29:31"},"returnParameters":{"id":18716,"nodeType":"ParameterList","parameters":[],"src":"72093:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18727,"nodeType":"FunctionDefinition","src":"72248:84:31","nodes":[],"documentation":{"id":18718,"nodeType":"StructuredDocumentation","src":"72100:143:31","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72257:8:31","parameters":{"id":18725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18720,"mutability":"mutable","name":"left","nameLocation":"72274:4:31","nodeType":"VariableDeclaration","scope":18727,"src":"72266:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18719,"name":"uint256","nodeType":"ElementaryTypeName","src":"72266:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18722,"mutability":"mutable","name":"right","nameLocation":"72288:5:31","nodeType":"VariableDeclaration","scope":18727,"src":"72280:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18721,"name":"uint256","nodeType":"ElementaryTypeName","src":"72280:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18724,"mutability":"mutable","name":"error","nameLocation":"72311:5:31","nodeType":"VariableDeclaration","scope":18727,"src":"72295:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18723,"name":"string","nodeType":"ElementaryTypeName","src":"72295:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72265:52:31"},"returnParameters":{"id":18726,"nodeType":"ParameterList","parameters":[],"src":"72331:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18735,"nodeType":"FunctionDefinition","src":"72423:59:31","nodes":[],"documentation":{"id":18728,"nodeType":"StructuredDocumentation","src":"72338:80:31","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72432:8:31","parameters":{"id":18733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18730,"mutability":"mutable","name":"left","nameLocation":"72448:4:31","nodeType":"VariableDeclaration","scope":18735,"src":"72441:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18729,"name":"int256","nodeType":"ElementaryTypeName","src":"72441:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18732,"mutability":"mutable","name":"right","nameLocation":"72461:5:31","nodeType":"VariableDeclaration","scope":18735,"src":"72454:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18731,"name":"int256","nodeType":"ElementaryTypeName","src":"72454:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"72440:27:31"},"returnParameters":{"id":18734,"nodeType":"ParameterList","parameters":[],"src":"72481:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18745,"nodeType":"FunctionDefinition","src":"72635:82:31","nodes":[],"documentation":{"id":18736,"nodeType":"StructuredDocumentation","src":"72488:142:31","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"72644:8:31","parameters":{"id":18743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18738,"mutability":"mutable","name":"left","nameLocation":"72660:4:31","nodeType":"VariableDeclaration","scope":18745,"src":"72653:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18737,"name":"int256","nodeType":"ElementaryTypeName","src":"72653:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18740,"mutability":"mutable","name":"right","nameLocation":"72673:5:31","nodeType":"VariableDeclaration","scope":18745,"src":"72666:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18739,"name":"int256","nodeType":"ElementaryTypeName","src":"72666:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18742,"mutability":"mutable","name":"error","nameLocation":"72696:5:31","nodeType":"VariableDeclaration","scope":18745,"src":"72680:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18741,"name":"string","nodeType":"ElementaryTypeName","src":"72680:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72652:50:31"},"returnParameters":{"id":18744,"nodeType":"ParameterList","parameters":[],"src":"72716:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18755,"nodeType":"FunctionDefinition","src":"72875:86:31","nodes":[],"documentation":{"id":18746,"nodeType":"StructuredDocumentation","src":"72723:147:31","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"72884:15:31","parameters":{"id":18753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18748,"mutability":"mutable","name":"left","nameLocation":"72908:4:31","nodeType":"VariableDeclaration","scope":18755,"src":"72900:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18747,"name":"uint256","nodeType":"ElementaryTypeName","src":"72900:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18750,"mutability":"mutable","name":"right","nameLocation":"72922:5:31","nodeType":"VariableDeclaration","scope":18755,"src":"72914:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18749,"name":"uint256","nodeType":"ElementaryTypeName","src":"72914:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18752,"mutability":"mutable","name":"decimals","nameLocation":"72937:8:31","nodeType":"VariableDeclaration","scope":18755,"src":"72929:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18751,"name":"uint256","nodeType":"ElementaryTypeName","src":"72929:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72899:47:31"},"returnParameters":{"id":18754,"nodeType":"ParameterList","parameters":[],"src":"72960:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18767,"nodeType":"FunctionDefinition","src":"73173:109:31","nodes":[],"documentation":{"id":18756,"nodeType":"StructuredDocumentation","src":"72967:201:31","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"73182:15:31","parameters":{"id":18765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18758,"mutability":"mutable","name":"left","nameLocation":"73206:4:31","nodeType":"VariableDeclaration","scope":18767,"src":"73198:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18757,"name":"uint256","nodeType":"ElementaryTypeName","src":"73198:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18760,"mutability":"mutable","name":"right","nameLocation":"73220:5:31","nodeType":"VariableDeclaration","scope":18767,"src":"73212:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18759,"name":"uint256","nodeType":"ElementaryTypeName","src":"73212:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18762,"mutability":"mutable","name":"decimals","nameLocation":"73235:8:31","nodeType":"VariableDeclaration","scope":18767,"src":"73227:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18761,"name":"uint256","nodeType":"ElementaryTypeName","src":"73227:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18764,"mutability":"mutable","name":"error","nameLocation":"73261:5:31","nodeType":"VariableDeclaration","scope":18767,"src":"73245:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18763,"name":"string","nodeType":"ElementaryTypeName","src":"73245:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73197:70:31"},"returnParameters":{"id":18766,"nodeType":"ParameterList","parameters":[],"src":"73281:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18777,"nodeType":"FunctionDefinition","src":"73439:84:31","nodes":[],"documentation":{"id":18768,"nodeType":"StructuredDocumentation","src":"73288:146:31","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"73448:15:31","parameters":{"id":18775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18770,"mutability":"mutable","name":"left","nameLocation":"73471:4:31","nodeType":"VariableDeclaration","scope":18777,"src":"73464:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18769,"name":"int256","nodeType":"ElementaryTypeName","src":"73464:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18772,"mutability":"mutable","name":"right","nameLocation":"73484:5:31","nodeType":"VariableDeclaration","scope":18777,"src":"73477:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18771,"name":"int256","nodeType":"ElementaryTypeName","src":"73477:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18774,"mutability":"mutable","name":"decimals","nameLocation":"73499:8:31","nodeType":"VariableDeclaration","scope":18777,"src":"73491:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18773,"name":"uint256","nodeType":"ElementaryTypeName","src":"73491:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73463:45:31"},"returnParameters":{"id":18776,"nodeType":"ParameterList","parameters":[],"src":"73522:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18789,"nodeType":"FunctionDefinition","src":"73734:107:31","nodes":[],"documentation":{"id":18778,"nodeType":"StructuredDocumentation","src":"73529:200:31","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"73743:15:31","parameters":{"id":18787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18780,"mutability":"mutable","name":"left","nameLocation":"73766:4:31","nodeType":"VariableDeclaration","scope":18789,"src":"73759:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18779,"name":"int256","nodeType":"ElementaryTypeName","src":"73759:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18782,"mutability":"mutable","name":"right","nameLocation":"73779:5:31","nodeType":"VariableDeclaration","scope":18789,"src":"73772:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18781,"name":"int256","nodeType":"ElementaryTypeName","src":"73772:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18784,"mutability":"mutable","name":"decimals","nameLocation":"73794:8:31","nodeType":"VariableDeclaration","scope":18789,"src":"73786:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18783,"name":"uint256","nodeType":"ElementaryTypeName","src":"73786:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18786,"mutability":"mutable","name":"error","nameLocation":"73820:5:31","nodeType":"VariableDeclaration","scope":18789,"src":"73804:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18785,"name":"string","nodeType":"ElementaryTypeName","src":"73804:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73758:68:31"},"returnParameters":{"id":18788,"nodeType":"ParameterList","parameters":[],"src":"73840:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18797,"nodeType":"FunctionDefinition","src":"73942:61:31","nodes":[],"documentation":{"id":18790,"nodeType":"StructuredDocumentation","src":"73847:90:31","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"73951:8:31","parameters":{"id":18795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18792,"mutability":"mutable","name":"left","nameLocation":"73968:4:31","nodeType":"VariableDeclaration","scope":18797,"src":"73960:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18791,"name":"uint256","nodeType":"ElementaryTypeName","src":"73960:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18794,"mutability":"mutable","name":"right","nameLocation":"73982:5:31","nodeType":"VariableDeclaration","scope":18797,"src":"73974:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18793,"name":"uint256","nodeType":"ElementaryTypeName","src":"73974:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73959:29:31"},"returnParameters":{"id":18796,"nodeType":"ParameterList","parameters":[],"src":"74002:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18807,"nodeType":"FunctionDefinition","src":"74166:84:31","nodes":[],"documentation":{"id":18798,"nodeType":"StructuredDocumentation","src":"74009:152:31","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"74175:8:31","parameters":{"id":18805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18800,"mutability":"mutable","name":"left","nameLocation":"74192:4:31","nodeType":"VariableDeclaration","scope":18807,"src":"74184:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18799,"name":"uint256","nodeType":"ElementaryTypeName","src":"74184:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18802,"mutability":"mutable","name":"right","nameLocation":"74206:5:31","nodeType":"VariableDeclaration","scope":18807,"src":"74198:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18801,"name":"uint256","nodeType":"ElementaryTypeName","src":"74198:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18804,"mutability":"mutable","name":"error","nameLocation":"74229:5:31","nodeType":"VariableDeclaration","scope":18807,"src":"74213:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18803,"name":"string","nodeType":"ElementaryTypeName","src":"74213:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74183:52:31"},"returnParameters":{"id":18806,"nodeType":"ParameterList","parameters":[],"src":"74249:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18815,"nodeType":"FunctionDefinition","src":"74350:59:31","nodes":[],"documentation":{"id":18808,"nodeType":"StructuredDocumentation","src":"74256:89:31","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"74359:8:31","parameters":{"id":18813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18810,"mutability":"mutable","name":"left","nameLocation":"74375:4:31","nodeType":"VariableDeclaration","scope":18815,"src":"74368:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18809,"name":"int256","nodeType":"ElementaryTypeName","src":"74368:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18812,"mutability":"mutable","name":"right","nameLocation":"74388:5:31","nodeType":"VariableDeclaration","scope":18815,"src":"74381:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18811,"name":"int256","nodeType":"ElementaryTypeName","src":"74381:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"74367:27:31"},"returnParameters":{"id":18814,"nodeType":"ParameterList","parameters":[],"src":"74408:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18825,"nodeType":"FunctionDefinition","src":"74571:82:31","nodes":[],"documentation":{"id":18816,"nodeType":"StructuredDocumentation","src":"74415:151:31","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"74580:8:31","parameters":{"id":18823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18818,"mutability":"mutable","name":"left","nameLocation":"74596:4:31","nodeType":"VariableDeclaration","scope":18825,"src":"74589:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18817,"name":"int256","nodeType":"ElementaryTypeName","src":"74589:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18820,"mutability":"mutable","name":"right","nameLocation":"74609:5:31","nodeType":"VariableDeclaration","scope":18825,"src":"74602:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18819,"name":"int256","nodeType":"ElementaryTypeName","src":"74602:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18822,"mutability":"mutable","name":"error","nameLocation":"74632:5:31","nodeType":"VariableDeclaration","scope":18825,"src":"74616:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18821,"name":"string","nodeType":"ElementaryTypeName","src":"74616:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74588:50:31"},"returnParameters":{"id":18824,"nodeType":"ParameterList","parameters":[],"src":"74652:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18835,"nodeType":"FunctionDefinition","src":"74799:86:31","nodes":[],"documentation":{"id":18826,"nodeType":"StructuredDocumentation","src":"74659:135:31","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"74808:15:31","parameters":{"id":18833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18828,"mutability":"mutable","name":"left","nameLocation":"74832:4:31","nodeType":"VariableDeclaration","scope":18835,"src":"74824:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18827,"name":"uint256","nodeType":"ElementaryTypeName","src":"74824:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18830,"mutability":"mutable","name":"right","nameLocation":"74846:5:31","nodeType":"VariableDeclaration","scope":18835,"src":"74838:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18829,"name":"uint256","nodeType":"ElementaryTypeName","src":"74838:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18832,"mutability":"mutable","name":"decimals","nameLocation":"74861:8:31","nodeType":"VariableDeclaration","scope":18835,"src":"74853:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18831,"name":"uint256","nodeType":"ElementaryTypeName","src":"74853:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74823:47:31"},"returnParameters":{"id":18834,"nodeType":"ParameterList","parameters":[],"src":"74884:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18847,"nodeType":"FunctionDefinition","src":"75085:109:31","nodes":[],"documentation":{"id":18836,"nodeType":"StructuredDocumentation","src":"74891:189:31","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"75094:15:31","parameters":{"id":18845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18838,"mutability":"mutable","name":"left","nameLocation":"75118:4:31","nodeType":"VariableDeclaration","scope":18847,"src":"75110:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18837,"name":"uint256","nodeType":"ElementaryTypeName","src":"75110:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18840,"mutability":"mutable","name":"right","nameLocation":"75132:5:31","nodeType":"VariableDeclaration","scope":18847,"src":"75124:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18839,"name":"uint256","nodeType":"ElementaryTypeName","src":"75124:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18842,"mutability":"mutable","name":"decimals","nameLocation":"75147:8:31","nodeType":"VariableDeclaration","scope":18847,"src":"75139:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18841,"name":"uint256","nodeType":"ElementaryTypeName","src":"75139:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18844,"mutability":"mutable","name":"error","nameLocation":"75173:5:31","nodeType":"VariableDeclaration","scope":18847,"src":"75157:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18843,"name":"string","nodeType":"ElementaryTypeName","src":"75157:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75109:70:31"},"returnParameters":{"id":18846,"nodeType":"ParameterList","parameters":[],"src":"75193:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18857,"nodeType":"FunctionDefinition","src":"75339:84:31","nodes":[],"documentation":{"id":18848,"nodeType":"StructuredDocumentation","src":"75200:134:31","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"75348:15:31","parameters":{"id":18855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18850,"mutability":"mutable","name":"left","nameLocation":"75371:4:31","nodeType":"VariableDeclaration","scope":18857,"src":"75364:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18849,"name":"int256","nodeType":"ElementaryTypeName","src":"75364:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18852,"mutability":"mutable","name":"right","nameLocation":"75384:5:31","nodeType":"VariableDeclaration","scope":18857,"src":"75377:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18851,"name":"int256","nodeType":"ElementaryTypeName","src":"75377:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18854,"mutability":"mutable","name":"decimals","nameLocation":"75399:8:31","nodeType":"VariableDeclaration","scope":18857,"src":"75391:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18853,"name":"uint256","nodeType":"ElementaryTypeName","src":"75391:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75363:45:31"},"returnParameters":{"id":18856,"nodeType":"ParameterList","parameters":[],"src":"75422:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18869,"nodeType":"FunctionDefinition","src":"75622:107:31","nodes":[],"documentation":{"id":18858,"nodeType":"StructuredDocumentation","src":"75429:188:31","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"75631:15:31","parameters":{"id":18867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18860,"mutability":"mutable","name":"left","nameLocation":"75654:4:31","nodeType":"VariableDeclaration","scope":18869,"src":"75647:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18859,"name":"int256","nodeType":"ElementaryTypeName","src":"75647:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18862,"mutability":"mutable","name":"right","nameLocation":"75667:5:31","nodeType":"VariableDeclaration","scope":18869,"src":"75660:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18861,"name":"int256","nodeType":"ElementaryTypeName","src":"75660:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18864,"mutability":"mutable","name":"decimals","nameLocation":"75682:8:31","nodeType":"VariableDeclaration","scope":18869,"src":"75674:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18863,"name":"uint256","nodeType":"ElementaryTypeName","src":"75674:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18866,"mutability":"mutable","name":"error","nameLocation":"75708:5:31","nodeType":"VariableDeclaration","scope":18869,"src":"75692:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18865,"name":"string","nodeType":"ElementaryTypeName","src":"75692:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75646:68:31"},"returnParameters":{"id":18868,"nodeType":"ParameterList","parameters":[],"src":"75728:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18877,"nodeType":"FunctionDefinition","src":"75818:61:31","nodes":[],"documentation":{"id":18870,"nodeType":"StructuredDocumentation","src":"75735:78:31","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"75827:8:31","parameters":{"id":18875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18872,"mutability":"mutable","name":"left","nameLocation":"75844:4:31","nodeType":"VariableDeclaration","scope":18877,"src":"75836:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18871,"name":"uint256","nodeType":"ElementaryTypeName","src":"75836:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18874,"mutability":"mutable","name":"right","nameLocation":"75858:5:31","nodeType":"VariableDeclaration","scope":18877,"src":"75850:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18873,"name":"uint256","nodeType":"ElementaryTypeName","src":"75850:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75835:29:31"},"returnParameters":{"id":18876,"nodeType":"ParameterList","parameters":[],"src":"75878:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18887,"nodeType":"FunctionDefinition","src":"76030:84:31","nodes":[],"documentation":{"id":18878,"nodeType":"StructuredDocumentation","src":"75885:140:31","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"76039:8:31","parameters":{"id":18885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18880,"mutability":"mutable","name":"left","nameLocation":"76056:4:31","nodeType":"VariableDeclaration","scope":18887,"src":"76048:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18879,"name":"uint256","nodeType":"ElementaryTypeName","src":"76048:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18882,"mutability":"mutable","name":"right","nameLocation":"76070:5:31","nodeType":"VariableDeclaration","scope":18887,"src":"76062:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18881,"name":"uint256","nodeType":"ElementaryTypeName","src":"76062:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18884,"mutability":"mutable","name":"error","nameLocation":"76093:5:31","nodeType":"VariableDeclaration","scope":18887,"src":"76077:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18883,"name":"string","nodeType":"ElementaryTypeName","src":"76077:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76047:52:31"},"returnParameters":{"id":18886,"nodeType":"ParameterList","parameters":[],"src":"76113:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18895,"nodeType":"FunctionDefinition","src":"76202:59:31","nodes":[],"documentation":{"id":18888,"nodeType":"StructuredDocumentation","src":"76120:77:31","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"76211:8:31","parameters":{"id":18893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18890,"mutability":"mutable","name":"left","nameLocation":"76227:4:31","nodeType":"VariableDeclaration","scope":18895,"src":"76220:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18889,"name":"int256","nodeType":"ElementaryTypeName","src":"76220:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18892,"mutability":"mutable","name":"right","nameLocation":"76240:5:31","nodeType":"VariableDeclaration","scope":18895,"src":"76233:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18891,"name":"int256","nodeType":"ElementaryTypeName","src":"76233:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"76219:27:31"},"returnParameters":{"id":18894,"nodeType":"ParameterList","parameters":[],"src":"76260:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18905,"nodeType":"FunctionDefinition","src":"76411:82:31","nodes":[],"documentation":{"id":18896,"nodeType":"StructuredDocumentation","src":"76267:139:31","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"76420:8:31","parameters":{"id":18903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18898,"mutability":"mutable","name":"left","nameLocation":"76436:4:31","nodeType":"VariableDeclaration","scope":18905,"src":"76429:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18897,"name":"int256","nodeType":"ElementaryTypeName","src":"76429:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18900,"mutability":"mutable","name":"right","nameLocation":"76449:5:31","nodeType":"VariableDeclaration","scope":18905,"src":"76442:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18899,"name":"int256","nodeType":"ElementaryTypeName","src":"76442:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18902,"mutability":"mutable","name":"error","nameLocation":"76472:5:31","nodeType":"VariableDeclaration","scope":18905,"src":"76456:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18901,"name":"string","nodeType":"ElementaryTypeName","src":"76456:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76428:50:31"},"returnParameters":{"id":18904,"nodeType":"ParameterList","parameters":[],"src":"76492:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18915,"nodeType":"FunctionDefinition","src":"76606:89:31","nodes":[],"documentation":{"id":18906,"nodeType":"StructuredDocumentation","src":"76499:102:31","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"76615:18:31","parameters":{"id":18913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18908,"mutability":"mutable","name":"left","nameLocation":"76642:4:31","nodeType":"VariableDeclaration","scope":18915,"src":"76634:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18907,"name":"uint256","nodeType":"ElementaryTypeName","src":"76634:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18910,"mutability":"mutable","name":"right","nameLocation":"76656:5:31","nodeType":"VariableDeclaration","scope":18915,"src":"76648:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18909,"name":"uint256","nodeType":"ElementaryTypeName","src":"76648:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18912,"mutability":"mutable","name":"decimals","nameLocation":"76671:8:31","nodeType":"VariableDeclaration","scope":18915,"src":"76663:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18911,"name":"uint256","nodeType":"ElementaryTypeName","src":"76663:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76633:47:31"},"returnParameters":{"id":18914,"nodeType":"ParameterList","parameters":[],"src":"76694:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18927,"nodeType":"FunctionDefinition","src":"76870:112:31","nodes":[],"documentation":{"id":18916,"nodeType":"StructuredDocumentation","src":"76701:164:31","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"76879:18:31","parameters":{"id":18925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18918,"mutability":"mutable","name":"left","nameLocation":"76906:4:31","nodeType":"VariableDeclaration","scope":18927,"src":"76898:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18917,"name":"uint256","nodeType":"ElementaryTypeName","src":"76898:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18920,"mutability":"mutable","name":"right","nameLocation":"76920:5:31","nodeType":"VariableDeclaration","scope":18927,"src":"76912:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18919,"name":"uint256","nodeType":"ElementaryTypeName","src":"76912:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18922,"mutability":"mutable","name":"decimals","nameLocation":"76935:8:31","nodeType":"VariableDeclaration","scope":18927,"src":"76927:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18921,"name":"uint256","nodeType":"ElementaryTypeName","src":"76927:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18924,"mutability":"mutable","name":"error","nameLocation":"76961:5:31","nodeType":"VariableDeclaration","scope":18927,"src":"76945:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18923,"name":"string","nodeType":"ElementaryTypeName","src":"76945:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76897:70:31"},"returnParameters":{"id":18926,"nodeType":"ParameterList","parameters":[],"src":"76981:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18937,"nodeType":"FunctionDefinition","src":"77094:87:31","nodes":[],"documentation":{"id":18928,"nodeType":"StructuredDocumentation","src":"76988:101:31","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"77103:18:31","parameters":{"id":18935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18930,"mutability":"mutable","name":"left","nameLocation":"77129:4:31","nodeType":"VariableDeclaration","scope":18937,"src":"77122:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18929,"name":"int256","nodeType":"ElementaryTypeName","src":"77122:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18932,"mutability":"mutable","name":"right","nameLocation":"77142:5:31","nodeType":"VariableDeclaration","scope":18937,"src":"77135:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18931,"name":"int256","nodeType":"ElementaryTypeName","src":"77135:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18934,"mutability":"mutable","name":"decimals","nameLocation":"77157:8:31","nodeType":"VariableDeclaration","scope":18937,"src":"77149:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18933,"name":"uint256","nodeType":"ElementaryTypeName","src":"77149:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77121:45:31"},"returnParameters":{"id":18936,"nodeType":"ParameterList","parameters":[],"src":"77180:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18949,"nodeType":"FunctionDefinition","src":"77355:110:31","nodes":[],"documentation":{"id":18938,"nodeType":"StructuredDocumentation","src":"77187:163:31","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"77364:18:31","parameters":{"id":18947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18940,"mutability":"mutable","name":"left","nameLocation":"77390:4:31","nodeType":"VariableDeclaration","scope":18949,"src":"77383:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18939,"name":"int256","nodeType":"ElementaryTypeName","src":"77383:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18942,"mutability":"mutable","name":"right","nameLocation":"77403:5:31","nodeType":"VariableDeclaration","scope":18949,"src":"77396:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18941,"name":"int256","nodeType":"ElementaryTypeName","src":"77396:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18944,"mutability":"mutable","name":"decimals","nameLocation":"77418:8:31","nodeType":"VariableDeclaration","scope":18949,"src":"77410:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18943,"name":"uint256","nodeType":"ElementaryTypeName","src":"77410:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18946,"mutability":"mutable","name":"error","nameLocation":"77444:5:31","nodeType":"VariableDeclaration","scope":18949,"src":"77428:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18945,"name":"string","nodeType":"ElementaryTypeName","src":"77428:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77382:68:31"},"returnParameters":{"id":18948,"nodeType":"ParameterList","parameters":[],"src":"77464:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18957,"nodeType":"FunctionDefinition","src":"77525:58:31","nodes":[],"documentation":{"id":18950,"nodeType":"StructuredDocumentation","src":"77471:49:31","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77534:11:31","parameters":{"id":18955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18952,"mutability":"mutable","name":"left","nameLocation":"77551:4:31","nodeType":"VariableDeclaration","scope":18957,"src":"77546:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18951,"name":"bool","nodeType":"ElementaryTypeName","src":"77546:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18954,"mutability":"mutable","name":"right","nameLocation":"77562:5:31","nodeType":"VariableDeclaration","scope":18957,"src":"77557:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18953,"name":"bool","nodeType":"ElementaryTypeName","src":"77557:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77545:23:31"},"returnParameters":{"id":18956,"nodeType":"ParameterList","parameters":[],"src":"77582:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18967,"nodeType":"FunctionDefinition","src":"77700:81:31","nodes":[],"documentation":{"id":18958,"nodeType":"StructuredDocumentation","src":"77589:106:31","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77709:11:31","parameters":{"id":18965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18960,"mutability":"mutable","name":"left","nameLocation":"77726:4:31","nodeType":"VariableDeclaration","scope":18967,"src":"77721:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18959,"name":"bool","nodeType":"ElementaryTypeName","src":"77721:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18962,"mutability":"mutable","name":"right","nameLocation":"77737:5:31","nodeType":"VariableDeclaration","scope":18967,"src":"77732:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18961,"name":"bool","nodeType":"ElementaryTypeName","src":"77732:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18964,"mutability":"mutable","name":"error","nameLocation":"77760:5:31","nodeType":"VariableDeclaration","scope":18967,"src":"77744:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18963,"name":"string","nodeType":"ElementaryTypeName","src":"77744:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77720:46:31"},"returnParameters":{"id":18966,"nodeType":"ParameterList","parameters":[],"src":"77780:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18975,"nodeType":"FunctionDefinition","src":"77843:80:31","nodes":[],"documentation":{"id":18968,"nodeType":"StructuredDocumentation","src":"77787:51:31","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"77852:11:31","parameters":{"id":18973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18970,"mutability":"mutable","name":"left","nameLocation":"77880:4:31","nodeType":"VariableDeclaration","scope":18975,"src":"77864:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18969,"name":"string","nodeType":"ElementaryTypeName","src":"77864:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18972,"mutability":"mutable","name":"right","nameLocation":"77902:5:31","nodeType":"VariableDeclaration","scope":18975,"src":"77886:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18971,"name":"string","nodeType":"ElementaryTypeName","src":"77886:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77863:45:31"},"returnParameters":{"id":18974,"nodeType":"ParameterList","parameters":[],"src":"77922:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18985,"nodeType":"FunctionDefinition","src":"78042:103:31","nodes":[],"documentation":{"id":18976,"nodeType":"StructuredDocumentation","src":"77929:108:31","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78051:11:31","parameters":{"id":18983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18978,"mutability":"mutable","name":"left","nameLocation":"78079:4:31","nodeType":"VariableDeclaration","scope":18985,"src":"78063:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18977,"name":"string","nodeType":"ElementaryTypeName","src":"78063:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18980,"mutability":"mutable","name":"right","nameLocation":"78101:5:31","nodeType":"VariableDeclaration","scope":18985,"src":"78085:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18979,"name":"string","nodeType":"ElementaryTypeName","src":"78085:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18982,"mutability":"mutable","name":"error","nameLocation":"78124:5:31","nodeType":"VariableDeclaration","scope":18985,"src":"78108:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18981,"name":"string","nodeType":"ElementaryTypeName","src":"78108:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78062:68:31"},"returnParameters":{"id":18984,"nodeType":"ParameterList","parameters":[],"src":"78144:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18993,"nodeType":"FunctionDefinition","src":"78206:78:31","nodes":[],"documentation":{"id":18986,"nodeType":"StructuredDocumentation","src":"78151:50:31","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78215:11:31","parameters":{"id":18991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18988,"mutability":"mutable","name":"left","nameLocation":"78242:4:31","nodeType":"VariableDeclaration","scope":18993,"src":"78227:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18987,"name":"bytes","nodeType":"ElementaryTypeName","src":"78227:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18990,"mutability":"mutable","name":"right","nameLocation":"78263:5:31","nodeType":"VariableDeclaration","scope":18993,"src":"78248:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18989,"name":"bytes","nodeType":"ElementaryTypeName","src":"78248:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78226:43:31"},"returnParameters":{"id":18992,"nodeType":"ParameterList","parameters":[],"src":"78283:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19003,"nodeType":"FunctionDefinition","src":"78402:101:31","nodes":[],"documentation":{"id":18994,"nodeType":"StructuredDocumentation","src":"78290:107:31","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78411:11:31","parameters":{"id":19001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18996,"mutability":"mutable","name":"left","nameLocation":"78438:4:31","nodeType":"VariableDeclaration","scope":19003,"src":"78423:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18995,"name":"bytes","nodeType":"ElementaryTypeName","src":"78423:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18998,"mutability":"mutable","name":"right","nameLocation":"78459:5:31","nodeType":"VariableDeclaration","scope":19003,"src":"78444:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18997,"name":"bytes","nodeType":"ElementaryTypeName","src":"78444:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19000,"mutability":"mutable","name":"error","nameLocation":"78482:5:31","nodeType":"VariableDeclaration","scope":19003,"src":"78466:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18999,"name":"string","nodeType":"ElementaryTypeName","src":"78466:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78422:66:31"},"returnParameters":{"id":19002,"nodeType":"ParameterList","parameters":[],"src":"78502:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19013,"nodeType":"FunctionDefinition","src":"78573:80:31","nodes":[],"documentation":{"id":19004,"nodeType":"StructuredDocumentation","src":"78509:59:31","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78582:11:31","parameters":{"id":19011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19007,"mutability":"mutable","name":"left","nameLocation":"78610:4:31","nodeType":"VariableDeclaration","scope":19013,"src":"78594:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19005,"name":"bool","nodeType":"ElementaryTypeName","src":"78594:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19006,"nodeType":"ArrayTypeName","src":"78594:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":19010,"mutability":"mutable","name":"right","nameLocation":"78632:5:31","nodeType":"VariableDeclaration","scope":19013,"src":"78616:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19008,"name":"bool","nodeType":"ElementaryTypeName","src":"78616:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19009,"nodeType":"ArrayTypeName","src":"78616:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"78593:45:31"},"returnParameters":{"id":19012,"nodeType":"ParameterList","parameters":[],"src":"78652:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19025,"nodeType":"FunctionDefinition","src":"78780:103:31","nodes":[],"documentation":{"id":19014,"nodeType":"StructuredDocumentation","src":"78659:116:31","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78789:11:31","parameters":{"id":19023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19017,"mutability":"mutable","name":"left","nameLocation":"78817:4:31","nodeType":"VariableDeclaration","scope":19025,"src":"78801:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19015,"name":"bool","nodeType":"ElementaryTypeName","src":"78801:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19016,"nodeType":"ArrayTypeName","src":"78801:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":19020,"mutability":"mutable","name":"right","nameLocation":"78839:5:31","nodeType":"VariableDeclaration","scope":19025,"src":"78823:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19018,"name":"bool","nodeType":"ElementaryTypeName","src":"78823:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19019,"nodeType":"ArrayTypeName","src":"78823:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":19022,"mutability":"mutable","name":"error","nameLocation":"78862:5:31","nodeType":"VariableDeclaration","scope":19025,"src":"78846:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19021,"name":"string","nodeType":"ElementaryTypeName","src":"78846:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78800:68:31"},"returnParameters":{"id":19024,"nodeType":"ParameterList","parameters":[],"src":"78882:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19035,"nodeType":"FunctionDefinition","src":"78956:86:31","nodes":[],"documentation":{"id":19026,"nodeType":"StructuredDocumentation","src":"78889:62:31","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"78965:11:31","parameters":{"id":19033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19029,"mutability":"mutable","name":"left","nameLocation":"78996:4:31","nodeType":"VariableDeclaration","scope":19035,"src":"78977:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19027,"name":"uint256","nodeType":"ElementaryTypeName","src":"78977:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19028,"nodeType":"ArrayTypeName","src":"78977:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":19032,"mutability":"mutable","name":"right","nameLocation":"79021:5:31","nodeType":"VariableDeclaration","scope":19035,"src":"79002:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19030,"name":"uint256","nodeType":"ElementaryTypeName","src":"79002:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19031,"nodeType":"ArrayTypeName","src":"79002:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"78976:51:31"},"returnParameters":{"id":19034,"nodeType":"ParameterList","parameters":[],"src":"79041:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19047,"nodeType":"FunctionDefinition","src":"79172:109:31","nodes":[],"documentation":{"id":19036,"nodeType":"StructuredDocumentation","src":"79048:119:31","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79181:11:31","parameters":{"id":19045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19039,"mutability":"mutable","name":"left","nameLocation":"79212:4:31","nodeType":"VariableDeclaration","scope":19047,"src":"79193:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19037,"name":"uint256","nodeType":"ElementaryTypeName","src":"79193:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19038,"nodeType":"ArrayTypeName","src":"79193:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":19042,"mutability":"mutable","name":"right","nameLocation":"79237:5:31","nodeType":"VariableDeclaration","scope":19047,"src":"79218:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19040,"name":"uint256","nodeType":"ElementaryTypeName","src":"79218:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19041,"nodeType":"ArrayTypeName","src":"79218:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":19044,"mutability":"mutable","name":"error","nameLocation":"79260:5:31","nodeType":"VariableDeclaration","scope":19047,"src":"79244:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19043,"name":"string","nodeType":"ElementaryTypeName","src":"79244:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79192:74:31"},"returnParameters":{"id":19046,"nodeType":"ParameterList","parameters":[],"src":"79280:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19057,"nodeType":"FunctionDefinition","src":"79353:84:31","nodes":[],"documentation":{"id":19048,"nodeType":"StructuredDocumentation","src":"79287:61:31","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79362:11:31","parameters":{"id":19055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19051,"mutability":"mutable","name":"left","nameLocation":"79392:4:31","nodeType":"VariableDeclaration","scope":19057,"src":"79374:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19049,"name":"int256","nodeType":"ElementaryTypeName","src":"79374:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19050,"nodeType":"ArrayTypeName","src":"79374:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":19054,"mutability":"mutable","name":"right","nameLocation":"79416:5:31","nodeType":"VariableDeclaration","scope":19057,"src":"79398:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19052,"name":"int256","nodeType":"ElementaryTypeName","src":"79398:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19053,"nodeType":"ArrayTypeName","src":"79398:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"79373:49:31"},"returnParameters":{"id":19056,"nodeType":"ParameterList","parameters":[],"src":"79436:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19069,"nodeType":"FunctionDefinition","src":"79566:107:31","nodes":[],"documentation":{"id":19058,"nodeType":"StructuredDocumentation","src":"79443:118:31","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79575:11:31","parameters":{"id":19067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19061,"mutability":"mutable","name":"left","nameLocation":"79605:4:31","nodeType":"VariableDeclaration","scope":19069,"src":"79587:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19059,"name":"int256","nodeType":"ElementaryTypeName","src":"79587:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19060,"nodeType":"ArrayTypeName","src":"79587:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":19064,"mutability":"mutable","name":"right","nameLocation":"79629:5:31","nodeType":"VariableDeclaration","scope":19069,"src":"79611:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19062,"name":"int256","nodeType":"ElementaryTypeName","src":"79611:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19063,"nodeType":"ArrayTypeName","src":"79611:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":19066,"mutability":"mutable","name":"error","nameLocation":"79652:5:31","nodeType":"VariableDeclaration","scope":19069,"src":"79636:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19065,"name":"string","nodeType":"ElementaryTypeName","src":"79636:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79586:72:31"},"returnParameters":{"id":19068,"nodeType":"ParameterList","parameters":[],"src":"79672:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19077,"nodeType":"FunctionDefinition","src":"79736:64:31","nodes":[],"documentation":{"id":19070,"nodeType":"StructuredDocumentation","src":"79679:52:31","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79745:11:31","parameters":{"id":19075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19072,"mutability":"mutable","name":"left","nameLocation":"79765:4:31","nodeType":"VariableDeclaration","scope":19077,"src":"79757:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19071,"name":"uint256","nodeType":"ElementaryTypeName","src":"79757:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19074,"mutability":"mutable","name":"right","nameLocation":"79779:5:31","nodeType":"VariableDeclaration","scope":19077,"src":"79771:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19073,"name":"uint256","nodeType":"ElementaryTypeName","src":"79771:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79756:29:31"},"returnParameters":{"id":19076,"nodeType":"ParameterList","parameters":[],"src":"79799:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19087,"nodeType":"FunctionDefinition","src":"79873:86:31","nodes":[],"documentation":{"id":19078,"nodeType":"StructuredDocumentation","src":"79806:62:31","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"79882:11:31","parameters":{"id":19085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19081,"mutability":"mutable","name":"left","nameLocation":"79913:4:31","nodeType":"VariableDeclaration","scope":19087,"src":"79894:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19079,"name":"address","nodeType":"ElementaryTypeName","src":"79894:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19080,"nodeType":"ArrayTypeName","src":"79894:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":19084,"mutability":"mutable","name":"right","nameLocation":"79938:5:31","nodeType":"VariableDeclaration","scope":19087,"src":"79919:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19082,"name":"address","nodeType":"ElementaryTypeName","src":"79919:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19083,"nodeType":"ArrayTypeName","src":"79919:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"79893:51:31"},"returnParameters":{"id":19086,"nodeType":"ParameterList","parameters":[],"src":"79958:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19099,"nodeType":"FunctionDefinition","src":"80089:109:31","nodes":[],"documentation":{"id":19088,"nodeType":"StructuredDocumentation","src":"79965:119:31","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80098:11:31","parameters":{"id":19097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19091,"mutability":"mutable","name":"left","nameLocation":"80129:4:31","nodeType":"VariableDeclaration","scope":19099,"src":"80110:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19089,"name":"address","nodeType":"ElementaryTypeName","src":"80110:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19090,"nodeType":"ArrayTypeName","src":"80110:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":19094,"mutability":"mutable","name":"right","nameLocation":"80154:5:31","nodeType":"VariableDeclaration","scope":19099,"src":"80135:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19092,"name":"address","nodeType":"ElementaryTypeName","src":"80135:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19093,"nodeType":"ArrayTypeName","src":"80135:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":19096,"mutability":"mutable","name":"error","nameLocation":"80177:5:31","nodeType":"VariableDeclaration","scope":19099,"src":"80161:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19095,"name":"string","nodeType":"ElementaryTypeName","src":"80161:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80109:74:31"},"returnParameters":{"id":19098,"nodeType":"ParameterList","parameters":[],"src":"80197:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19109,"nodeType":"FunctionDefinition","src":"80271:86:31","nodes":[],"documentation":{"id":19100,"nodeType":"StructuredDocumentation","src":"80204:62:31","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80280:11:31","parameters":{"id":19107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19103,"mutability":"mutable","name":"left","nameLocation":"80311:4:31","nodeType":"VariableDeclaration","scope":19109,"src":"80292:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80292:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19102,"nodeType":"ArrayTypeName","src":"80292:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":19106,"mutability":"mutable","name":"right","nameLocation":"80336:5:31","nodeType":"VariableDeclaration","scope":19109,"src":"80317:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80317:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19105,"nodeType":"ArrayTypeName","src":"80317:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80291:51:31"},"returnParameters":{"id":19108,"nodeType":"ParameterList","parameters":[],"src":"80356:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19121,"nodeType":"FunctionDefinition","src":"80487:109:31","nodes":[],"documentation":{"id":19110,"nodeType":"StructuredDocumentation","src":"80363:119:31","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80496:11:31","parameters":{"id":19119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19113,"mutability":"mutable","name":"left","nameLocation":"80527:4:31","nodeType":"VariableDeclaration","scope":19121,"src":"80508:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80508:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19112,"nodeType":"ArrayTypeName","src":"80508:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":19116,"mutability":"mutable","name":"right","nameLocation":"80552:5:31","nodeType":"VariableDeclaration","scope":19121,"src":"80533:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80533:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19115,"nodeType":"ArrayTypeName","src":"80533:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":19118,"mutability":"mutable","name":"error","nameLocation":"80575:5:31","nodeType":"VariableDeclaration","scope":19121,"src":"80559:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19117,"name":"string","nodeType":"ElementaryTypeName","src":"80559:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80507:74:31"},"returnParameters":{"id":19120,"nodeType":"ParameterList","parameters":[],"src":"80595:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19131,"nodeType":"FunctionDefinition","src":"80668:84:31","nodes":[],"documentation":{"id":19122,"nodeType":"StructuredDocumentation","src":"80602:61:31","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80677:11:31","parameters":{"id":19129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19125,"mutability":"mutable","name":"left","nameLocation":"80707:4:31","nodeType":"VariableDeclaration","scope":19131,"src":"80689:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19123,"name":"string","nodeType":"ElementaryTypeName","src":"80689:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19124,"nodeType":"ArrayTypeName","src":"80689:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19128,"mutability":"mutable","name":"right","nameLocation":"80731:5:31","nodeType":"VariableDeclaration","scope":19131,"src":"80713:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19126,"name":"string","nodeType":"ElementaryTypeName","src":"80713:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19127,"nodeType":"ArrayTypeName","src":"80713:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"80688:49:31"},"returnParameters":{"id":19130,"nodeType":"ParameterList","parameters":[],"src":"80751:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19143,"nodeType":"FunctionDefinition","src":"80881:107:31","nodes":[],"documentation":{"id":19132,"nodeType":"StructuredDocumentation","src":"80758:118:31","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"80890:11:31","parameters":{"id":19141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19135,"mutability":"mutable","name":"left","nameLocation":"80920:4:31","nodeType":"VariableDeclaration","scope":19143,"src":"80902:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19133,"name":"string","nodeType":"ElementaryTypeName","src":"80902:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19134,"nodeType":"ArrayTypeName","src":"80902:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19138,"mutability":"mutable","name":"right","nameLocation":"80944:5:31","nodeType":"VariableDeclaration","scope":19143,"src":"80926:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19136,"name":"string","nodeType":"ElementaryTypeName","src":"80926:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19137,"nodeType":"ArrayTypeName","src":"80926:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19140,"mutability":"mutable","name":"error","nameLocation":"80967:5:31","nodeType":"VariableDeclaration","scope":19143,"src":"80951:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19139,"name":"string","nodeType":"ElementaryTypeName","src":"80951:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80901:72:31"},"returnParameters":{"id":19142,"nodeType":"ParameterList","parameters":[],"src":"80987:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19153,"nodeType":"FunctionDefinition","src":"81059:82:31","nodes":[],"documentation":{"id":19144,"nodeType":"StructuredDocumentation","src":"80994:60:31","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81068:11:31","parameters":{"id":19151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19147,"mutability":"mutable","name":"left","nameLocation":"81097:4:31","nodeType":"VariableDeclaration","scope":19153,"src":"81080:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19145,"name":"bytes","nodeType":"ElementaryTypeName","src":"81080:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19146,"nodeType":"ArrayTypeName","src":"81080:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":19150,"mutability":"mutable","name":"right","nameLocation":"81120:5:31","nodeType":"VariableDeclaration","scope":19153,"src":"81103:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19148,"name":"bytes","nodeType":"ElementaryTypeName","src":"81103:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19149,"nodeType":"ArrayTypeName","src":"81103:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"81079:47:31"},"returnParameters":{"id":19152,"nodeType":"ParameterList","parameters":[],"src":"81140:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19165,"nodeType":"FunctionDefinition","src":"81269:105:31","nodes":[],"documentation":{"id":19154,"nodeType":"StructuredDocumentation","src":"81147:117:31","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81278:11:31","parameters":{"id":19163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19157,"mutability":"mutable","name":"left","nameLocation":"81307:4:31","nodeType":"VariableDeclaration","scope":19165,"src":"81290:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19155,"name":"bytes","nodeType":"ElementaryTypeName","src":"81290:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19156,"nodeType":"ArrayTypeName","src":"81290:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":19160,"mutability":"mutable","name":"right","nameLocation":"81330:5:31","nodeType":"VariableDeclaration","scope":19165,"src":"81313:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19158,"name":"bytes","nodeType":"ElementaryTypeName","src":"81313:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19159,"nodeType":"ArrayTypeName","src":"81313:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":19162,"mutability":"mutable","name":"error","nameLocation":"81353:5:31","nodeType":"VariableDeclaration","scope":19165,"src":"81337:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19161,"name":"string","nodeType":"ElementaryTypeName","src":"81337:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81289:70:31"},"returnParameters":{"id":19164,"nodeType":"ParameterList","parameters":[],"src":"81373:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19175,"nodeType":"FunctionDefinition","src":"81494:87:31","nodes":[],"documentation":{"id":19166,"nodeType":"StructuredDocumentation","src":"81380:109:31","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81503:11:31","parameters":{"id":19173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19168,"mutability":"mutable","name":"left","nameLocation":"81523:4:31","nodeType":"VariableDeclaration","scope":19175,"src":"81515:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19167,"name":"uint256","nodeType":"ElementaryTypeName","src":"81515:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19170,"mutability":"mutable","name":"right","nameLocation":"81537:5:31","nodeType":"VariableDeclaration","scope":19175,"src":"81529:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19169,"name":"uint256","nodeType":"ElementaryTypeName","src":"81529:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19172,"mutability":"mutable","name":"error","nameLocation":"81560:5:31","nodeType":"VariableDeclaration","scope":19175,"src":"81544:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19171,"name":"string","nodeType":"ElementaryTypeName","src":"81544:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81514:52:31"},"returnParameters":{"id":19174,"nodeType":"ParameterList","parameters":[],"src":"81580:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19183,"nodeType":"FunctionDefinition","src":"81643:62:31","nodes":[],"documentation":{"id":19176,"nodeType":"StructuredDocumentation","src":"81587:51:31","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81652:11:31","parameters":{"id":19181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19178,"mutability":"mutable","name":"left","nameLocation":"81671:4:31","nodeType":"VariableDeclaration","scope":19183,"src":"81664:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19177,"name":"int256","nodeType":"ElementaryTypeName","src":"81664:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19180,"mutability":"mutable","name":"right","nameLocation":"81684:5:31","nodeType":"VariableDeclaration","scope":19183,"src":"81677:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19179,"name":"int256","nodeType":"ElementaryTypeName","src":"81677:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"81663:27:31"},"returnParameters":{"id":19182,"nodeType":"ParameterList","parameters":[],"src":"81704:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19193,"nodeType":"FunctionDefinition","src":"81824:85:31","nodes":[],"documentation":{"id":19184,"nodeType":"StructuredDocumentation","src":"81711:108:31","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81833:11:31","parameters":{"id":19191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19186,"mutability":"mutable","name":"left","nameLocation":"81852:4:31","nodeType":"VariableDeclaration","scope":19193,"src":"81845:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19185,"name":"int256","nodeType":"ElementaryTypeName","src":"81845:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19188,"mutability":"mutable","name":"right","nameLocation":"81865:5:31","nodeType":"VariableDeclaration","scope":19193,"src":"81858:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19187,"name":"int256","nodeType":"ElementaryTypeName","src":"81858:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19190,"mutability":"mutable","name":"error","nameLocation":"81888:5:31","nodeType":"VariableDeclaration","scope":19193,"src":"81872:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19189,"name":"string","nodeType":"ElementaryTypeName","src":"81872:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81844:50:31"},"returnParameters":{"id":19192,"nodeType":"ParameterList","parameters":[],"src":"81908:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19201,"nodeType":"FunctionDefinition","src":"81972:64:31","nodes":[],"documentation":{"id":19194,"nodeType":"StructuredDocumentation","src":"81915:52:31","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"81981:11:31","parameters":{"id":19199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19196,"mutability":"mutable","name":"left","nameLocation":"82001:4:31","nodeType":"VariableDeclaration","scope":19201,"src":"81993:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19195,"name":"address","nodeType":"ElementaryTypeName","src":"81993:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19198,"mutability":"mutable","name":"right","nameLocation":"82015:5:31","nodeType":"VariableDeclaration","scope":19201,"src":"82007:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19197,"name":"address","nodeType":"ElementaryTypeName","src":"82007:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81992:29:31"},"returnParameters":{"id":19200,"nodeType":"ParameterList","parameters":[],"src":"82035:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19211,"nodeType":"FunctionDefinition","src":"82156:87:31","nodes":[],"documentation":{"id":19202,"nodeType":"StructuredDocumentation","src":"82042:109:31","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82165:11:31","parameters":{"id":19209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19204,"mutability":"mutable","name":"left","nameLocation":"82185:4:31","nodeType":"VariableDeclaration","scope":19211,"src":"82177:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19203,"name":"address","nodeType":"ElementaryTypeName","src":"82177:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19206,"mutability":"mutable","name":"right","nameLocation":"82199:5:31","nodeType":"VariableDeclaration","scope":19211,"src":"82191:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19205,"name":"address","nodeType":"ElementaryTypeName","src":"82191:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19208,"mutability":"mutable","name":"error","nameLocation":"82222:5:31","nodeType":"VariableDeclaration","scope":19211,"src":"82206:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19207,"name":"string","nodeType":"ElementaryTypeName","src":"82206:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82176:52:31"},"returnParameters":{"id":19210,"nodeType":"ParameterList","parameters":[],"src":"82242:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19219,"nodeType":"FunctionDefinition","src":"82306:64:31","nodes":[],"documentation":{"id":19212,"nodeType":"StructuredDocumentation","src":"82249:52:31","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82315:11:31","parameters":{"id":19217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19214,"mutability":"mutable","name":"left","nameLocation":"82335:4:31","nodeType":"VariableDeclaration","scope":19219,"src":"82327:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82327:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19216,"mutability":"mutable","name":"right","nameLocation":"82349:5:31","nodeType":"VariableDeclaration","scope":19219,"src":"82341:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82341:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82326:29:31"},"returnParameters":{"id":19218,"nodeType":"ParameterList","parameters":[],"src":"82369:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19229,"nodeType":"FunctionDefinition","src":"82490:87:31","nodes":[],"documentation":{"id":19220,"nodeType":"StructuredDocumentation","src":"82376:109:31","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"82499:11:31","parameters":{"id":19227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19222,"mutability":"mutable","name":"left","nameLocation":"82519:4:31","nodeType":"VariableDeclaration","scope":19229,"src":"82511:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82511:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19224,"mutability":"mutable","name":"right","nameLocation":"82533:5:31","nodeType":"VariableDeclaration","scope":19229,"src":"82525:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82525:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19226,"mutability":"mutable","name":"error","nameLocation":"82556:5:31","nodeType":"VariableDeclaration","scope":19229,"src":"82540:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19225,"name":"string","nodeType":"ElementaryTypeName","src":"82540:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82510:52:31"},"returnParameters":{"id":19228,"nodeType":"ParameterList","parameters":[],"src":"82576:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19235,"nodeType":"FunctionDefinition","src":"82633:50:31","nodes":[],"documentation":{"id":19230,"nodeType":"StructuredDocumentation","src":"82583:45:31","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"82642:10:31","parameters":{"id":19233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19232,"mutability":"mutable","name":"condition","nameLocation":"82658:9:31","nodeType":"VariableDeclaration","scope":19235,"src":"82653:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19231,"name":"bool","nodeType":"ElementaryTypeName","src":"82653:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82652:16:31"},"returnParameters":{"id":19234,"nodeType":"ParameterList","parameters":[],"src":"82682:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19243,"nodeType":"FunctionDefinition","src":"82796:73:31","nodes":[],"documentation":{"id":19236,"nodeType":"StructuredDocumentation","src":"82689:102:31","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"82805:10:31","parameters":{"id":19241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19238,"mutability":"mutable","name":"condition","nameLocation":"82821:9:31","nodeType":"VariableDeclaration","scope":19243,"src":"82816:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19237,"name":"bool","nodeType":"ElementaryTypeName","src":"82816:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19240,"mutability":"mutable","name":"error","nameLocation":"82848:5:31","nodeType":"VariableDeclaration","scope":19243,"src":"82832:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19239,"name":"string","nodeType":"ElementaryTypeName","src":"82832:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82815:39:31"},"returnParameters":{"id":19242,"nodeType":"ParameterList","parameters":[],"src":"82868:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19249,"nodeType":"FunctionDefinition","src":"82964:46:31","nodes":[],"documentation":{"id":19244,"nodeType":"StructuredDocumentation","src":"82875:84:31","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"82973:6:31","parameters":{"id":19247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19246,"mutability":"mutable","name":"condition","nameLocation":"82985:9:31","nodeType":"VariableDeclaration","scope":19249,"src":"82980:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19245,"name":"bool","nodeType":"ElementaryTypeName","src":"82980:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82979:16:31"},"returnParameters":{"id":19248,"nodeType":"ParameterList","parameters":[],"src":"83009:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19253,"nodeType":"FunctionDefinition","src":"83100:40:31","nodes":[],"documentation":{"id":19250,"nodeType":"StructuredDocumentation","src":"83016:79:31","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"83109:14:31","parameters":{"id":19251,"nodeType":"ParameterList","parameters":[],"src":"83123:2:31"},"returnParameters":{"id":19252,"nodeType":"ParameterList","parameters":[],"src":"83139:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19260,"nodeType":"FunctionDefinition","src":"83266:80:31","nodes":[],"documentation":{"id":19254,"nodeType":"StructuredDocumentation","src":"83146:115:31","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"functionSelector":"d8591eeb","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"83275:14:31","parameters":{"id":19258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19257,"mutability":"mutable","name":"potentialRevert","nameLocation":"83315:15:31","nodeType":"VariableDeclaration","scope":19260,"src":"83290:40:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$16209_calldata_ptr","typeString":"struct VmSafe.PotentialRevert"},"typeName":{"id":19256,"nodeType":"UserDefinedTypeName","pathNode":{"id":19255,"name":"PotentialRevert","nameLocations":["83290:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":16209,"src":"83290:15:31"},"referencedDeclaration":16209,"src":"83290:15:31","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$16209_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"visibility":"internal"}],"src":"83289:42:31"},"returnParameters":{"id":19259,"nodeType":"ParameterList","parameters":[],"src":"83345:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19268,"nodeType":"FunctionDefinition","src":"83483:83:31","nodes":[],"documentation":{"id":19261,"nodeType":"StructuredDocumentation","src":"83352:126:31","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"functionSelector":"8a4592cc","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"83492:14:31","parameters":{"id":19266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19265,"mutability":"mutable","name":"potentialReverts","nameLocation":"83534:16:31","nodeType":"VariableDeclaration","scope":19268,"src":"83507:43:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$16209_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.PotentialRevert[]"},"typeName":{"baseType":{"id":19263,"nodeType":"UserDefinedTypeName","pathNode":{"id":19262,"name":"PotentialRevert","nameLocations":["83507:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":16209,"src":"83507:15:31"},"referencedDeclaration":16209,"src":"83507:15:31","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$16209_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"id":19264,"nodeType":"ArrayTypeName","src":"83507:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$16209_storage_$dyn_storage_ptr","typeString":"struct VmSafe.PotentialRevert[]"}},"visibility":"internal"}],"src":"83506:45:31"},"returnParameters":{"id":19267,"nodeType":"ParameterList","parameters":[],"src":"83565:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19274,"nodeType":"FunctionDefinition","src":"83628:56:31","nodes":[],"documentation":{"id":19269,"nodeType":"StructuredDocumentation","src":"83572:51:31","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"83637:10:31","parameters":{"id":19272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19271,"mutability":"mutable","name":"char","nameLocation":"83664:4:31","nodeType":"VariableDeclaration","scope":19274,"src":"83648:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19270,"name":"string","nodeType":"ElementaryTypeName","src":"83648:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83647:22:31"},"returnParameters":{"id":19273,"nodeType":"ParameterList","parameters":[],"src":"83683:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19282,"nodeType":"FunctionDefinition","src":"83758:68:31","nodes":[],"documentation":{"id":19275,"nodeType":"StructuredDocumentation","src":"83690:63:31","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"83767:10:31","parameters":{"id":19280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19277,"mutability":"mutable","name":"char","nameLocation":"83794:4:31","nodeType":"VariableDeclaration","scope":19282,"src":"83778:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19276,"name":"string","nodeType":"ElementaryTypeName","src":"83778:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19279,"mutability":"mutable","name":"value","nameLocation":"83805:5:31","nodeType":"VariableDeclaration","scope":19282,"src":"83800:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19278,"name":"bool","nodeType":"ElementaryTypeName","src":"83800:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83777:34:31"},"returnParameters":{"id":19281,"nodeType":"ParameterList","parameters":[],"src":"83825:0:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19288,"nodeType":"FunctionDefinition","src":"84261:75:31","nodes":[],"documentation":{"id":19283,"nodeType":"StructuredDocumentation","src":"83832:424:31","text":"Returns the Foundry version.\n Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile>\n Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use UNIX format (e.g., >= 1700000000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"84270:17:31","parameters":{"id":19284,"nodeType":"ParameterList","parameters":[],"src":"84287:2:31"},"returnParameters":{"id":19287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19286,"mutability":"mutable","name":"version","nameLocation":"84327:7:31","nodeType":"VariableDeclaration","scope":19288,"src":"84313:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19285,"name":"string","nodeType":"ElementaryTypeName","src":"84313:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84312:23:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19296,"nodeType":"FunctionDefinition","src":"84391:85:31","nodes":[],"documentation":{"id":19289,"nodeType":"StructuredDocumentation","src":"84342:44:31","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"84400:6:31","parameters":{"id":19292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19291,"mutability":"mutable","name":"rpcAlias","nameLocation":"84423:8:31","nodeType":"VariableDeclaration","scope":19296,"src":"84407:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19290,"name":"string","nodeType":"ElementaryTypeName","src":"84407:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84406:26:31"},"returnParameters":{"id":19295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19294,"mutability":"mutable","name":"json","nameLocation":"84470:4:31","nodeType":"VariableDeclaration","scope":19296,"src":"84456:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19293,"name":"string","nodeType":"ElementaryTypeName","src":"84456:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84455:20:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19304,"nodeType":"FunctionDefinition","src":"84541:67:31","nodes":[],"documentation":{"id":19297,"nodeType":"StructuredDocumentation","src":"84482:54:31","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"84550:13:31","parameters":{"id":19298,"nodeType":"ParameterList","parameters":[],"src":"84563:2:31"},"returnParameters":{"id":19303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19302,"mutability":"mutable","name":"urls","nameLocation":"84602:4:31","nodeType":"VariableDeclaration","scope":19304,"src":"84589:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$16030_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":19300,"nodeType":"UserDefinedTypeName","pathNode":{"id":19299,"name":"Rpc","nameLocations":["84589:3:31"],"nodeType":"IdentifierPath","referencedDeclaration":16030,"src":"84589:3:31"},"referencedDeclaration":16030,"src":"84589:3:31","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$16030_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":19301,"nodeType":"ArrayTypeName","src":"84589:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$16030_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"84588:19:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19313,"nodeType":"FunctionDefinition","src":"84679:67:31","nodes":[],"documentation":{"id":19305,"nodeType":"StructuredDocumentation","src":"84614:60:31","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"84688:7:31","parameters":{"id":19306,"nodeType":"ParameterList","parameters":[],"src":"84695:2:31"},"returnParameters":{"id":19312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19311,"mutability":"mutable","name":"urls","nameLocation":"84740:4:31","nodeType":"VariableDeclaration","scope":19313,"src":"84721:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":19307,"name":"string","nodeType":"ElementaryTypeName","src":"84721:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19309,"length":{"hexValue":"32","id":19308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"84728:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"84721:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":19310,"nodeType":"ArrayTypeName","src":"84721:11:31","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"84720:25:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19319,"nodeType":"FunctionDefinition","src":"84827:42:31","nodes":[],"documentation":{"id":19314,"nodeType":"StructuredDocumentation","src":"84752:70:31","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"84836:5:31","parameters":{"id":19317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19316,"mutability":"mutable","name":"duration","nameLocation":"84850:8:31","nodeType":"VariableDeclaration","scope":19319,"src":"84842:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19315,"name":"uint256","nodeType":"ElementaryTypeName","src":"84842:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84841:18:31"},"returnParameters":{"id":19318,"nodeType":"ParameterList","parameters":[],"src":"84868:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19329,"nodeType":"FunctionDefinition","src":"84954:95:31","nodes":[],"documentation":{"id":19320,"nodeType":"StructuredDocumentation","src":"84906:43:31","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"84963:13:31","parameters":{"id":19325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19322,"mutability":"mutable","name":"toml","nameLocation":"84993:4:31","nodeType":"VariableDeclaration","scope":19329,"src":"84977:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19321,"name":"string","nodeType":"ElementaryTypeName","src":"84977:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19324,"mutability":"mutable","name":"key","nameLocation":"85015:3:31","nodeType":"VariableDeclaration","scope":19329,"src":"84999:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19323,"name":"string","nodeType":"ElementaryTypeName","src":"84999:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84976:43:31"},"returnParameters":{"id":19328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19329,"src":"85043:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19326,"name":"bool","nodeType":"ElementaryTypeName","src":"85043:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85042:6:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19339,"nodeType":"FunctionDefinition","src":"85130:101:31","nodes":[],"documentation":{"id":19330,"nodeType":"StructuredDocumentation","src":"85055:70:31","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"85139:16:31","parameters":{"id":19335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19332,"mutability":"mutable","name":"toml","nameLocation":"85172:4:31","nodeType":"VariableDeclaration","scope":19339,"src":"85156:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19331,"name":"string","nodeType":"ElementaryTypeName","src":"85156:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19334,"mutability":"mutable","name":"key","nameLocation":"85194:3:31","nodeType":"VariableDeclaration","scope":19339,"src":"85178:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19333,"name":"string","nodeType":"ElementaryTypeName","src":"85178:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85155:43:31"},"returnParameters":{"id":19338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19339,"src":"85222:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19336,"name":"address","nodeType":"ElementaryTypeName","src":"85222:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85221:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19350,"nodeType":"FunctionDefinition","src":"85314:139:31","nodes":[],"documentation":{"id":19340,"nodeType":"StructuredDocumentation","src":"85237:72:31","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"85323:21:31","parameters":{"id":19345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19342,"mutability":"mutable","name":"toml","nameLocation":"85361:4:31","nodeType":"VariableDeclaration","scope":19350,"src":"85345:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19341,"name":"string","nodeType":"ElementaryTypeName","src":"85345:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19344,"mutability":"mutable","name":"key","nameLocation":"85383:3:31","nodeType":"VariableDeclaration","scope":19350,"src":"85367:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19343,"name":"string","nodeType":"ElementaryTypeName","src":"85367:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85344:43:31"},"returnParameters":{"id":19349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19350,"src":"85435:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19346,"name":"address","nodeType":"ElementaryTypeName","src":"85435:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19347,"nodeType":"ArrayTypeName","src":"85435:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"85434:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19360,"nodeType":"FunctionDefinition","src":"85531:95:31","nodes":[],"documentation":{"id":19351,"nodeType":"StructuredDocumentation","src":"85459:67:31","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"85540:13:31","parameters":{"id":19356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19353,"mutability":"mutable","name":"toml","nameLocation":"85570:4:31","nodeType":"VariableDeclaration","scope":19360,"src":"85554:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19352,"name":"string","nodeType":"ElementaryTypeName","src":"85554:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19355,"mutability":"mutable","name":"key","nameLocation":"85592:3:31","nodeType":"VariableDeclaration","scope":19360,"src":"85576:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19354,"name":"string","nodeType":"ElementaryTypeName","src":"85576:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85553:43:31"},"returnParameters":{"id":19359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19360,"src":"85620:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19357,"name":"bool","nodeType":"ElementaryTypeName","src":"85620:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85619:6:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19371,"nodeType":"FunctionDefinition","src":"85706:109:31","nodes":[],"documentation":{"id":19361,"nodeType":"StructuredDocumentation","src":"85632:69:31","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"85715:18:31","parameters":{"id":19366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19363,"mutability":"mutable","name":"toml","nameLocation":"85750:4:31","nodeType":"VariableDeclaration","scope":19371,"src":"85734:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19362,"name":"string","nodeType":"ElementaryTypeName","src":"85734:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19365,"mutability":"mutable","name":"key","nameLocation":"85772:3:31","nodeType":"VariableDeclaration","scope":19371,"src":"85756:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19364,"name":"string","nodeType":"ElementaryTypeName","src":"85756:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85733:43:31"},"returnParameters":{"id":19370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19371,"src":"85800:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19367,"name":"bool","nodeType":"ElementaryTypeName","src":"85800:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19368,"nodeType":"ArrayTypeName","src":"85800:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"85799:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19381,"nodeType":"FunctionDefinition","src":"85894:104:31","nodes":[],"documentation":{"id":19372,"nodeType":"StructuredDocumentation","src":"85821:68:31","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"85903:14:31","parameters":{"id":19377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19374,"mutability":"mutable","name":"toml","nameLocation":"85934:4:31","nodeType":"VariableDeclaration","scope":19381,"src":"85918:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19373,"name":"string","nodeType":"ElementaryTypeName","src":"85918:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19376,"mutability":"mutable","name":"key","nameLocation":"85956:3:31","nodeType":"VariableDeclaration","scope":19381,"src":"85940:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19375,"name":"string","nodeType":"ElementaryTypeName","src":"85940:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85917:43:31"},"returnParameters":{"id":19380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19381,"src":"85984:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19378,"name":"bytes","nodeType":"ElementaryTypeName","src":"85984:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85983:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19391,"nodeType":"FunctionDefinition","src":"86079:101:31","nodes":[],"documentation":{"id":19382,"nodeType":"StructuredDocumentation","src":"86004:70:31","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"86088:16:31","parameters":{"id":19387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19384,"mutability":"mutable","name":"toml","nameLocation":"86121:4:31","nodeType":"VariableDeclaration","scope":19391,"src":"86105:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19383,"name":"string","nodeType":"ElementaryTypeName","src":"86105:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19386,"mutability":"mutable","name":"key","nameLocation":"86143:3:31","nodeType":"VariableDeclaration","scope":19391,"src":"86127:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19385,"name":"string","nodeType":"ElementaryTypeName","src":"86127:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86104:43:31"},"returnParameters":{"id":19390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19391,"src":"86171:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86171:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86170:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19402,"nodeType":"FunctionDefinition","src":"86263:139:31","nodes":[],"documentation":{"id":19392,"nodeType":"StructuredDocumentation","src":"86186:72:31","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"86272:21:31","parameters":{"id":19397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19394,"mutability":"mutable","name":"toml","nameLocation":"86310:4:31","nodeType":"VariableDeclaration","scope":19402,"src":"86294:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19393,"name":"string","nodeType":"ElementaryTypeName","src":"86294:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19396,"mutability":"mutable","name":"key","nameLocation":"86332:3:31","nodeType":"VariableDeclaration","scope":19402,"src":"86316:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19395,"name":"string","nodeType":"ElementaryTypeName","src":"86316:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86293:43:31"},"returnParameters":{"id":19401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19402,"src":"86384:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86384:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19399,"nodeType":"ArrayTypeName","src":"86384:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"86383:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19413,"nodeType":"FunctionDefinition","src":"86483:111:31","nodes":[],"documentation":{"id":19403,"nodeType":"StructuredDocumentation","src":"86408:70:31","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"86492:19:31","parameters":{"id":19408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19405,"mutability":"mutable","name":"toml","nameLocation":"86528:4:31","nodeType":"VariableDeclaration","scope":19413,"src":"86512:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19404,"name":"string","nodeType":"ElementaryTypeName","src":"86512:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19407,"mutability":"mutable","name":"key","nameLocation":"86550:3:31","nodeType":"VariableDeclaration","scope":19413,"src":"86534:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19406,"name":"string","nodeType":"ElementaryTypeName","src":"86534:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86511:43:31"},"returnParameters":{"id":19412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19413,"src":"86578:14:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19409,"name":"bytes","nodeType":"ElementaryTypeName","src":"86578:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19410,"nodeType":"ArrayTypeName","src":"86578:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"86577:16:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19423,"nodeType":"FunctionDefinition","src":"86674:96:31","nodes":[],"documentation":{"id":19414,"nodeType":"StructuredDocumentation","src":"86600:69:31","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"86683:12:31","parameters":{"id":19419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19416,"mutability":"mutable","name":"toml","nameLocation":"86712:4:31","nodeType":"VariableDeclaration","scope":19423,"src":"86696:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19415,"name":"string","nodeType":"ElementaryTypeName","src":"86696:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19418,"mutability":"mutable","name":"key","nameLocation":"86734:3:31","nodeType":"VariableDeclaration","scope":19423,"src":"86718:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19417,"name":"string","nodeType":"ElementaryTypeName","src":"86718:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86695:43:31"},"returnParameters":{"id":19422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19423,"src":"86762:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19420,"name":"int256","nodeType":"ElementaryTypeName","src":"86762:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"86761:8:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19434,"nodeType":"FunctionDefinition","src":"86852:110:31","nodes":[],"documentation":{"id":19424,"nodeType":"StructuredDocumentation","src":"86776:71:31","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"86861:17:31","parameters":{"id":19429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19426,"mutability":"mutable","name":"toml","nameLocation":"86895:4:31","nodeType":"VariableDeclaration","scope":19434,"src":"86879:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19425,"name":"string","nodeType":"ElementaryTypeName","src":"86879:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19428,"mutability":"mutable","name":"key","nameLocation":"86917:3:31","nodeType":"VariableDeclaration","scope":19434,"src":"86901:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19427,"name":"string","nodeType":"ElementaryTypeName","src":"86901:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86878:43:31"},"returnParameters":{"id":19433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19434,"src":"86945:15:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19430,"name":"int256","nodeType":"ElementaryTypeName","src":"86945:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19431,"nodeType":"ArrayTypeName","src":"86945:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"86944:17:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19445,"nodeType":"FunctionDefinition","src":"87026:111:31","nodes":[],"documentation":{"id":19435,"nodeType":"StructuredDocumentation","src":"86968:53:31","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"87035:13:31","parameters":{"id":19440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19437,"mutability":"mutable","name":"toml","nameLocation":"87065:4:31","nodeType":"VariableDeclaration","scope":19445,"src":"87049:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19436,"name":"string","nodeType":"ElementaryTypeName","src":"87049:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19439,"mutability":"mutable","name":"key","nameLocation":"87087:3:31","nodeType":"VariableDeclaration","scope":19445,"src":"87071:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19438,"name":"string","nodeType":"ElementaryTypeName","src":"87071:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87048:43:31"},"returnParameters":{"id":19444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19443,"mutability":"mutable","name":"keys","nameLocation":"87131:4:31","nodeType":"VariableDeclaration","scope":19445,"src":"87115:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19441,"name":"string","nodeType":"ElementaryTypeName","src":"87115:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19442,"nodeType":"ArrayTypeName","src":"87115:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"87114:22:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19455,"nodeType":"FunctionDefinition","src":"87217:106:31","nodes":[],"documentation":{"id":19446,"nodeType":"StructuredDocumentation","src":"87143:69:31","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"87226:15:31","parameters":{"id":19451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19448,"mutability":"mutable","name":"toml","nameLocation":"87258:4:31","nodeType":"VariableDeclaration","scope":19455,"src":"87242:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19447,"name":"string","nodeType":"ElementaryTypeName","src":"87242:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19450,"mutability":"mutable","name":"key","nameLocation":"87280:3:31","nodeType":"VariableDeclaration","scope":19455,"src":"87264:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19449,"name":"string","nodeType":"ElementaryTypeName","src":"87264:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87241:43:31"},"returnParameters":{"id":19454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19455,"src":"87308:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19452,"name":"string","nodeType":"ElementaryTypeName","src":"87308:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87307:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19466,"nodeType":"FunctionDefinition","src":"87405:113:31","nodes":[],"documentation":{"id":19456,"nodeType":"StructuredDocumentation","src":"87329:71:31","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"87414:20:31","parameters":{"id":19461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19458,"mutability":"mutable","name":"toml","nameLocation":"87451:4:31","nodeType":"VariableDeclaration","scope":19466,"src":"87435:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19457,"name":"string","nodeType":"ElementaryTypeName","src":"87435:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19460,"mutability":"mutable","name":"key","nameLocation":"87473:3:31","nodeType":"VariableDeclaration","scope":19466,"src":"87457:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19459,"name":"string","nodeType":"ElementaryTypeName","src":"87457:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87434:43:31"},"returnParameters":{"id":19465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19466,"src":"87501:15:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19462,"name":"string","nodeType":"ElementaryTypeName","src":"87501:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19463,"nodeType":"ArrayTypeName","src":"87501:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"87500:17:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19478,"nodeType":"FunctionDefinition","src":"87635:165:31","nodes":[],"documentation":{"id":19467,"nodeType":"StructuredDocumentation","src":"87524:106:31","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"87644:18:31","parameters":{"id":19474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19469,"mutability":"mutable","name":"toml","nameLocation":"87679:4:31","nodeType":"VariableDeclaration","scope":19478,"src":"87663:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19468,"name":"string","nodeType":"ElementaryTypeName","src":"87663:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19471,"mutability":"mutable","name":"key","nameLocation":"87701:3:31","nodeType":"VariableDeclaration","scope":19478,"src":"87685:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19470,"name":"string","nodeType":"ElementaryTypeName","src":"87685:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19473,"mutability":"mutable","name":"typeDescription","nameLocation":"87722:15:31","nodeType":"VariableDeclaration","scope":19478,"src":"87706:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19472,"name":"string","nodeType":"ElementaryTypeName","src":"87706:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87662:76:31"},"returnParameters":{"id":19477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19478,"src":"87786:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19475,"name":"bytes","nodeType":"ElementaryTypeName","src":"87786:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87785:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19488,"nodeType":"FunctionDefinition","src":"87902:139:31","nodes":[],"documentation":{"id":19479,"nodeType":"StructuredDocumentation","src":"87806:91:31","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"87911:13:31","parameters":{"id":19484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19481,"mutability":"mutable","name":"toml","nameLocation":"87941:4:31","nodeType":"VariableDeclaration","scope":19488,"src":"87925:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19480,"name":"string","nodeType":"ElementaryTypeName","src":"87925:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19483,"mutability":"mutable","name":"typeDescription","nameLocation":"87963:15:31","nodeType":"VariableDeclaration","scope":19488,"src":"87947:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19482,"name":"string","nodeType":"ElementaryTypeName","src":"87947:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87924:55:31"},"returnParameters":{"id":19487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19488,"src":"88027:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19485,"name":"bytes","nodeType":"ElementaryTypeName","src":"88027:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88026:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19500,"nodeType":"FunctionDefinition","src":"88152:160:31","nodes":[],"documentation":{"id":19489,"nodeType":"StructuredDocumentation","src":"88047:100:31","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"88161:13:31","parameters":{"id":19496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19491,"mutability":"mutable","name":"toml","nameLocation":"88191:4:31","nodeType":"VariableDeclaration","scope":19500,"src":"88175:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19490,"name":"string","nodeType":"ElementaryTypeName","src":"88175:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19493,"mutability":"mutable","name":"key","nameLocation":"88213:3:31","nodeType":"VariableDeclaration","scope":19500,"src":"88197:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19492,"name":"string","nodeType":"ElementaryTypeName","src":"88197:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19495,"mutability":"mutable","name":"typeDescription","nameLocation":"88234:15:31","nodeType":"VariableDeclaration","scope":19500,"src":"88218:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19494,"name":"string","nodeType":"ElementaryTypeName","src":"88218:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88174:76:31"},"returnParameters":{"id":19499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19500,"src":"88298:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19497,"name":"bytes","nodeType":"ElementaryTypeName","src":"88298:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88297:14:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19510,"nodeType":"FunctionDefinition","src":"88393:98:31","nodes":[],"documentation":{"id":19501,"nodeType":"StructuredDocumentation","src":"88318:70:31","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"88402:13:31","parameters":{"id":19506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19503,"mutability":"mutable","name":"toml","nameLocation":"88432:4:31","nodeType":"VariableDeclaration","scope":19510,"src":"88416:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19502,"name":"string","nodeType":"ElementaryTypeName","src":"88416:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19505,"mutability":"mutable","name":"key","nameLocation":"88454:3:31","nodeType":"VariableDeclaration","scope":19510,"src":"88438:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19504,"name":"string","nodeType":"ElementaryTypeName","src":"88438:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88415:43:31"},"returnParameters":{"id":19509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19510,"src":"88482:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19507,"name":"uint256","nodeType":"ElementaryTypeName","src":"88482:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88481:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19521,"nodeType":"FunctionDefinition","src":"88574:112:31","nodes":[],"documentation":{"id":19511,"nodeType":"StructuredDocumentation","src":"88497:72:31","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"88583:18:31","parameters":{"id":19516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19513,"mutability":"mutable","name":"toml","nameLocation":"88618:4:31","nodeType":"VariableDeclaration","scope":19521,"src":"88602:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19512,"name":"string","nodeType":"ElementaryTypeName","src":"88602:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19515,"mutability":"mutable","name":"key","nameLocation":"88640:3:31","nodeType":"VariableDeclaration","scope":19521,"src":"88624:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19514,"name":"string","nodeType":"ElementaryTypeName","src":"88624:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88601:43:31"},"returnParameters":{"id":19520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19521,"src":"88668:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19517,"name":"uint256","nodeType":"ElementaryTypeName","src":"88668:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19518,"nodeType":"ArrayTypeName","src":"88668:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"88667:18:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19529,"nodeType":"FunctionDefinition","src":"88726:93:31","nodes":[],"documentation":{"id":19522,"nodeType":"StructuredDocumentation","src":"88692:29:31","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"88735:9:31","parameters":{"id":19525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19524,"mutability":"mutable","name":"toml","nameLocation":"88761:4:31","nodeType":"VariableDeclaration","scope":19529,"src":"88745:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19523,"name":"string","nodeType":"ElementaryTypeName","src":"88745:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88744:22:31"},"returnParameters":{"id":19528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19527,"mutability":"mutable","name":"abiEncodedData","nameLocation":"88803:14:31","nodeType":"VariableDeclaration","scope":19529,"src":"88790:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19526,"name":"bytes","nodeType":"ElementaryTypeName","src":"88790:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88789:29:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19539,"nodeType":"FunctionDefinition","src":"88868:114:31","nodes":[],"documentation":{"id":19530,"nodeType":"StructuredDocumentation","src":"88825:38:31","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"88877:9:31","parameters":{"id":19535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19532,"mutability":"mutable","name":"toml","nameLocation":"88903:4:31","nodeType":"VariableDeclaration","scope":19539,"src":"88887:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19531,"name":"string","nodeType":"ElementaryTypeName","src":"88887:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19534,"mutability":"mutable","name":"key","nameLocation":"88925:3:31","nodeType":"VariableDeclaration","scope":19539,"src":"88909:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19533,"name":"string","nodeType":"ElementaryTypeName","src":"88909:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88886:43:31"},"returnParameters":{"id":19538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19537,"mutability":"mutable","name":"abiEncodedData","nameLocation":"88966:14:31","nodeType":"VariableDeclaration","scope":19539,"src":"88953:27:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19536,"name":"bytes","nodeType":"ElementaryTypeName","src":"88953:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88952:29:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19547,"nodeType":"FunctionDefinition","src":"89075:72:31","nodes":[],"documentation":{"id":19540,"nodeType":"StructuredDocumentation","src":"88988:82:31","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"89084:9:31","parameters":{"id":19545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19542,"mutability":"mutable","name":"json","nameLocation":"89110:4:31","nodeType":"VariableDeclaration","scope":19547,"src":"89094:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19541,"name":"string","nodeType":"ElementaryTypeName","src":"89094:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19544,"mutability":"mutable","name":"path","nameLocation":"89132:4:31","nodeType":"VariableDeclaration","scope":19547,"src":"89116:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19543,"name":"string","nodeType":"ElementaryTypeName","src":"89116:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89093:44:31"},"returnParameters":{"id":19546,"nodeType":"ParameterList","parameters":[],"src":"89146:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19557,"nodeType":"FunctionDefinition","src":"89416:98:31","nodes":[],"documentation":{"id":19548,"nodeType":"StructuredDocumentation","src":"89153:258:31","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"89425:9:31","parameters":{"id":19555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19550,"mutability":"mutable","name":"json","nameLocation":"89451:4:31","nodeType":"VariableDeclaration","scope":19557,"src":"89435:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19549,"name":"string","nodeType":"ElementaryTypeName","src":"89435:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19552,"mutability":"mutable","name":"path","nameLocation":"89473:4:31","nodeType":"VariableDeclaration","scope":19557,"src":"89457:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19551,"name":"string","nodeType":"ElementaryTypeName","src":"89457:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19554,"mutability":"mutable","name":"valueKey","nameLocation":"89495:8:31","nodeType":"VariableDeclaration","scope":19557,"src":"89479:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19553,"name":"string","nodeType":"ElementaryTypeName","src":"89479:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89434:70:31"},"returnParameters":{"id":19556,"nodeType":"ParameterList","parameters":[],"src":"89513:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19569,"nodeType":"FunctionDefinition","src":"89653:141:31","nodes":[],"documentation":{"id":19558,"nodeType":"StructuredDocumentation","src":"89556:92:31","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"89662:21:31","parameters":{"id":19565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19560,"mutability":"mutable","name":"salt","nameLocation":"89692:4:31","nodeType":"VariableDeclaration","scope":19569,"src":"89684:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89684:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19562,"mutability":"mutable","name":"initCodeHash","nameLocation":"89706:12:31","nodeType":"VariableDeclaration","scope":19569,"src":"89698:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89698:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19564,"mutability":"mutable","name":"deployer","nameLocation":"89728:8:31","nodeType":"VariableDeclaration","scope":19569,"src":"89720:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19563,"name":"address","nodeType":"ElementaryTypeName","src":"89720:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89683:54:31"},"returnParameters":{"id":19568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19569,"src":"89785:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19566,"name":"address","nodeType":"ElementaryTypeName","src":"89785:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89784:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19579,"nodeType":"FunctionDefinition","src":"89899:99:31","nodes":[],"documentation":{"id":19570,"nodeType":"StructuredDocumentation","src":"89800:94:31","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"89908:21:31","parameters":{"id":19575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19572,"mutability":"mutable","name":"salt","nameLocation":"89938:4:31","nodeType":"VariableDeclaration","scope":19579,"src":"89930:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89930:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19574,"mutability":"mutable","name":"initCodeHash","nameLocation":"89952:12:31","nodeType":"VariableDeclaration","scope":19579,"src":"89944:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89944:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89929:36:31"},"returnParameters":{"id":19578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19579,"src":"89989:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19576,"name":"address","nodeType":"ElementaryTypeName","src":"89989:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89988:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19589,"nodeType":"FunctionDefinition","src":"90103:95:31","nodes":[],"documentation":{"id":19580,"nodeType":"StructuredDocumentation","src":"90004:94:31","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"90112:20:31","parameters":{"id":19585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19582,"mutability":"mutable","name":"deployer","nameLocation":"90141:8:31","nodeType":"VariableDeclaration","scope":19589,"src":"90133:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19581,"name":"address","nodeType":"ElementaryTypeName","src":"90133:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19584,"mutability":"mutable","name":"nonce","nameLocation":"90159:5:31","nodeType":"VariableDeclaration","scope":19589,"src":"90151:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19583,"name":"uint256","nodeType":"ElementaryTypeName","src":"90151:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90132:33:31"},"returnParameters":{"id":19588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19589,"src":"90189:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19586,"name":"address","nodeType":"ElementaryTypeName","src":"90189:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90188:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19597,"nodeType":"FunctionDefinition","src":"90291:56:31","nodes":[],"documentation":{"id":19590,"nodeType":"StructuredDocumentation","src":"90204:82:31","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"90300:11:31","parameters":{"id":19595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19592,"mutability":"mutable","name":"from","nameLocation":"90320:4:31","nodeType":"VariableDeclaration","scope":19597,"src":"90312:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19591,"name":"address","nodeType":"ElementaryTypeName","src":"90312:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19594,"mutability":"mutable","name":"to","nameLocation":"90334:2:31","nodeType":"VariableDeclaration","scope":19597,"src":"90326:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19593,"name":"address","nodeType":"ElementaryTypeName","src":"90326:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90311:26:31"},"returnParameters":{"id":19596,"nodeType":"ParameterList","parameters":[],"src":"90346:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19605,"nodeType":"FunctionDefinition","src":"90403:75:31","nodes":[],"documentation":{"id":19598,"nodeType":"StructuredDocumentation","src":"90353:45:31","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"90412:11:31","parameters":{"id":19601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19600,"mutability":"mutable","name":"name","nameLocation":"90440:4:31","nodeType":"VariableDeclaration","scope":19605,"src":"90424:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19599,"name":"string","nodeType":"ElementaryTypeName","src":"90424:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90423:22:31"},"returnParameters":{"id":19604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19605,"src":"90469:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90469:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90468:9:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19613,"nodeType":"FunctionDefinition","src":"90534:86:31","nodes":[],"documentation":{"id":19606,"nodeType":"StructuredDocumentation","src":"90484:45:31","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"90543:8:31","parameters":{"id":19609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19608,"mutability":"mutable","name":"account","nameLocation":"90560:7:31","nodeType":"VariableDeclaration","scope":19613,"src":"90552:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19607,"name":"address","nodeType":"ElementaryTypeName","src":"90552:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90551:17:31"},"returnParameters":{"id":19612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19611,"mutability":"mutable","name":"currentLabel","nameLocation":"90606:12:31","nodeType":"VariableDeclaration","scope":19613,"src":"90592:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19610,"name":"string","nodeType":"ElementaryTypeName","src":"90592:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90591:28:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19621,"nodeType":"FunctionDefinition","src":"90668:67:31","nodes":[],"documentation":{"id":19614,"nodeType":"StructuredDocumentation","src":"90626:37:31","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"90677:5:31","parameters":{"id":19619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19616,"mutability":"mutable","name":"account","nameLocation":"90691:7:31","nodeType":"VariableDeclaration","scope":19621,"src":"90683:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19615,"name":"address","nodeType":"ElementaryTypeName","src":"90683:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19618,"mutability":"mutable","name":"newLabel","nameLocation":"90716:8:31","nodeType":"VariableDeclaration","scope":19621,"src":"90700:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19617,"name":"string","nodeType":"ElementaryTypeName","src":"90700:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90682:43:31"},"returnParameters":{"id":19620,"nodeType":"ParameterList","parameters":[],"src":"90734:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19625,"nodeType":"FunctionDefinition","src":"90890:38:31","nodes":[],"documentation":{"id":19622,"nodeType":"StructuredDocumentation","src":"90741:144:31","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"90899:12:31","parameters":{"id":19623,"nodeType":"ParameterList","parameters":[],"src":"90911:2:31"},"returnParameters":{"id":19624,"nodeType":"ParameterList","parameters":[],"src":"90927:0:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19631,"nodeType":"FunctionDefinition","src":"90970:52:31","nodes":[],"documentation":{"id":19626,"nodeType":"StructuredDocumentation","src":"90934:31:31","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"90979:13:31","parameters":{"id":19627,"nodeType":"ParameterList","parameters":[],"src":"90992:2:31"},"returnParameters":{"id":19630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19631,"src":"91013:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19628,"name":"address","nodeType":"ElementaryTypeName","src":"91013:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91012:9:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19637,"nodeType":"FunctionDefinition","src":"91061:51:31","nodes":[],"documentation":{"id":19632,"nodeType":"StructuredDocumentation","src":"91028:28:31","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"91070:10:31","parameters":{"id":19633,"nodeType":"ParameterList","parameters":[],"src":"91080:2:31"},"returnParameters":{"id":19636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19637,"src":"91106:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19634,"name":"bool","nodeType":"ElementaryTypeName","src":"91106:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91105:6:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19645,"nodeType":"FunctionDefinition","src":"91181:71:31","nodes":[],"documentation":{"id":19638,"nodeType":"StructuredDocumentation","src":"91118:58:31","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"91190:11:31","parameters":{"id":19641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19640,"mutability":"mutable","name":"len","nameLocation":"91210:3:31","nodeType":"VariableDeclaration","scope":19645,"src":"91202:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19639,"name":"uint256","nodeType":"ElementaryTypeName","src":"91202:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91201:13:31"},"returnParameters":{"id":19644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19645,"src":"91238:12:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19642,"name":"bytes","nodeType":"ElementaryTypeName","src":"91238:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91237:14:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19651,"nodeType":"FunctionDefinition","src":"91318:55:31","nodes":[],"documentation":{"id":19646,"nodeType":"StructuredDocumentation","src":"91258:55:31","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"91327:12:31","parameters":{"id":19647,"nodeType":"ParameterList","parameters":[],"src":"91339:2:31"},"returnParameters":{"id":19650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19651,"src":"91365:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19648,"name":"bytes4","nodeType":"ElementaryTypeName","src":"91365:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"91364:8:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19657,"nodeType":"FunctionDefinition","src":"91439:55:31","nodes":[],"documentation":{"id":19652,"nodeType":"StructuredDocumentation","src":"91379:55:31","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"91448:12:31","parameters":{"id":19653,"nodeType":"ParameterList","parameters":[],"src":"91460:2:31"},"returnParameters":{"id":19656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19657,"src":"91486:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":19654,"name":"bytes8","nodeType":"ElementaryTypeName","src":"91486:6:31","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"91485:8:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19663,"nodeType":"FunctionDefinition","src":"91541:52:31","nodes":[],"documentation":{"id":19658,"nodeType":"StructuredDocumentation","src":"91500:36:31","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"91550:9:31","parameters":{"id":19659,"nodeType":"ParameterList","parameters":[],"src":"91559:2:31"},"returnParameters":{"id":19662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19663,"src":"91585:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19660,"name":"int256","nodeType":"ElementaryTypeName","src":"91585:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"91584:8:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19671,"nodeType":"FunctionDefinition","src":"91654:64:31","nodes":[],"documentation":{"id":19664,"nodeType":"StructuredDocumentation","src":"91599:50:31","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"91663:9:31","parameters":{"id":19667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19666,"mutability":"mutable","name":"bits","nameLocation":"91681:4:31","nodeType":"VariableDeclaration","scope":19671,"src":"91673:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19665,"name":"uint256","nodeType":"ElementaryTypeName","src":"91673:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91672:14:31"},"returnParameters":{"id":19670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19671,"src":"91710:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19668,"name":"int256","nodeType":"ElementaryTypeName","src":"91710:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"91709:8:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19677,"nodeType":"FunctionDefinition","src":"91764:49:31","nodes":[],"documentation":{"id":19672,"nodeType":"StructuredDocumentation","src":"91724:35:31","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"91773:10:31","parameters":{"id":19673,"nodeType":"ParameterList","parameters":[],"src":"91783:2:31"},"returnParameters":{"id":19676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19677,"src":"91804:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19674,"name":"uint256","nodeType":"ElementaryTypeName","src":"91804:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91803:9:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19687,"nodeType":"FunctionDefinition","src":"91897:73:31","nodes":[],"documentation":{"id":19678,"nodeType":"StructuredDocumentation","src":"91819:73:31","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"91906:10:31","parameters":{"id":19683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19680,"mutability":"mutable","name":"min","nameLocation":"91925:3:31","nodeType":"VariableDeclaration","scope":19687,"src":"91917:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19679,"name":"uint256","nodeType":"ElementaryTypeName","src":"91917:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19682,"mutability":"mutable","name":"max","nameLocation":"91938:3:31","nodeType":"VariableDeclaration","scope":19687,"src":"91930:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19681,"name":"uint256","nodeType":"ElementaryTypeName","src":"91930:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91916:26:31"},"returnParameters":{"id":19686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19687,"src":"91961:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19684,"name":"uint256","nodeType":"ElementaryTypeName","src":"91961:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91960:9:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19695,"nodeType":"FunctionDefinition","src":"92032:66:31","nodes":[],"documentation":{"id":19688,"nodeType":"StructuredDocumentation","src":"91976:51:31","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"92041:10:31","parameters":{"id":19691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19690,"mutability":"mutable","name":"bits","nameLocation":"92060:4:31","nodeType":"VariableDeclaration","scope":19695,"src":"92052:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19689,"name":"uint256","nodeType":"ElementaryTypeName","src":"92052:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92051:14:31"},"returnParameters":{"id":19694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19695,"src":"92089:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19692,"name":"uint256","nodeType":"ElementaryTypeName","src":"92089:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92088:9:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19699,"nodeType":"FunctionDefinition","src":"92148:39:31","nodes":[],"documentation":{"id":19696,"nodeType":"StructuredDocumentation","src":"92104:39:31","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"92157:13:31","parameters":{"id":19697,"nodeType":"ParameterList","parameters":[],"src":"92170:2:31"},"returnParameters":{"id":19698,"nodeType":"ParameterList","parameters":[],"src":"92186:0:31"},"scope":19738,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19705,"nodeType":"FunctionDefinition","src":"92270:54:31","nodes":[],"documentation":{"id":19700,"nodeType":"StructuredDocumentation","src":"92193:72:31","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"92279:19:31","parameters":{"id":19703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19702,"mutability":"mutable","name":"target","nameLocation":"92307:6:31","nodeType":"VariableDeclaration","scope":19705,"src":"92299:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19701,"name":"address","nodeType":"ElementaryTypeName","src":"92299:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92298:16:31"},"returnParameters":{"id":19704,"nodeType":"ParameterList","parameters":[],"src":"92323:0:31"},"scope":19738,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19713,"nodeType":"FunctionDefinition","src":"92385:80:31","nodes":[],"documentation":{"id":19706,"nodeType":"StructuredDocumentation","src":"92330:50:31","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"92394:11:31","parameters":{"id":19709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19708,"mutability":"mutable","name":"data","nameLocation":"92421:4:31","nodeType":"VariableDeclaration","scope":19713,"src":"92406:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19707,"name":"bytes","nodeType":"ElementaryTypeName","src":"92406:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92405:21:31"},"returnParameters":{"id":19712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19713,"src":"92450:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19710,"name":"string","nodeType":"ElementaryTypeName","src":"92450:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92449:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19721,"nodeType":"FunctionDefinition","src":"92527:81:31","nodes":[],"documentation":{"id":19714,"nodeType":"StructuredDocumentation","src":"92471:51:31","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"92536:11:31","parameters":{"id":19717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19716,"mutability":"mutable","name":"data","nameLocation":"92564:4:31","nodeType":"VariableDeclaration","scope":19721,"src":"92548:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19715,"name":"string","nodeType":"ElementaryTypeName","src":"92548:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92547:22:31"},"returnParameters":{"id":19720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19721,"src":"92593:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19718,"name":"string","nodeType":"ElementaryTypeName","src":"92593:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92592:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19729,"nodeType":"FunctionDefinition","src":"92666:77:31","nodes":[],"documentation":{"id":19722,"nodeType":"StructuredDocumentation","src":"92614:47:31","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"92675:8:31","parameters":{"id":19725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19724,"mutability":"mutable","name":"data","nameLocation":"92699:4:31","nodeType":"VariableDeclaration","scope":19729,"src":"92684:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19723,"name":"bytes","nodeType":"ElementaryTypeName","src":"92684:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92683:21:31"},"returnParameters":{"id":19728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19729,"src":"92728:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19726,"name":"string","nodeType":"ElementaryTypeName","src":"92728:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92727:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19737,"nodeType":"FunctionDefinition","src":"92802:78:31","nodes":[],"documentation":{"id":19730,"nodeType":"StructuredDocumentation","src":"92749:48:31","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"92811:8:31","parameters":{"id":19733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19732,"mutability":"mutable","name":"data","nameLocation":"92836:4:31","nodeType":"VariableDeclaration","scope":19737,"src":"92820:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19731,"name":"string","nodeType":"ElementaryTypeName","src":"92820:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92819:22:31"},"returnParameters":{"id":19736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19737,"src":"92865:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19734,"name":"string","nodeType":"ElementaryTypeName","src":"92865:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92864:15:31"},"scope":19738,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":15979,"nodeType":"StructuredDocumentation","src":"184:225:31","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19738],"name":"VmSafe","nameLocation":"419:6:31","scope":20756,"usedErrors":[],"usedEvents":[]},{"id":20755,"nodeType":"ContractDefinition","src":"93055:24974:31","nodes":[{"id":19747,"nodeType":"FunctionDefinition","src":"93215:61:31","nodes":[],"documentation":{"id":19742,"nodeType":"StructuredDocumentation","src":"93114:96:31","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"93224:10:31","parameters":{"id":19743,"nodeType":"ParameterList","parameters":[],"src":"93234:2:31"},"returnParameters":{"id":19746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19745,"mutability":"mutable","name":"forkId","nameLocation":"93268:6:31","nodeType":"VariableDeclaration","scope":19747,"src":"93260:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19744,"name":"uint256","nodeType":"ElementaryTypeName","src":"93260:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93259:16:31"},"scope":20755,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19753,"nodeType":"FunctionDefinition","src":"93360:51:31","nodes":[],"documentation":{"id":19748,"nodeType":"StructuredDocumentation","src":"93282:73:31","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"93369:15:31","parameters":{"id":19751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19750,"mutability":"mutable","name":"account","nameLocation":"93393:7:31","nodeType":"VariableDeclaration","scope":19753,"src":"93385:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19749,"name":"address","nodeType":"ElementaryTypeName","src":"93385:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93384:17:31"},"returnParameters":{"id":19752,"nodeType":"ParameterList","parameters":[],"src":"93410:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19759,"nodeType":"FunctionDefinition","src":"93450:54:31","nodes":[],"documentation":{"id":19754,"nodeType":"StructuredDocumentation","src":"93417:28:31","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"93459:11:31","parameters":{"id":19757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19756,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"93479:14:31","nodeType":"VariableDeclaration","scope":19759,"src":"93471:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19755,"name":"uint256","nodeType":"ElementaryTypeName","src":"93471:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93470:24:31"},"returnParameters":{"id":19758,"nodeType":"ParameterList","parameters":[],"src":"93503:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19766,"nodeType":"FunctionDefinition","src":"93671:56:31","nodes":[],"documentation":{"id":19760,"nodeType":"StructuredDocumentation","src":"93510:156:31","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"93680:10:31","parameters":{"id":19764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19763,"mutability":"mutable","name":"hashes","nameLocation":"93710:6:31","nodeType":"VariableDeclaration","scope":19766,"src":"93691:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93691:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19762,"nodeType":"ArrayTypeName","src":"93691:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"93690:27:31"},"returnParameters":{"id":19765,"nodeType":"ParameterList","parameters":[],"src":"93726:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19772,"nodeType":"FunctionDefinition","src":"93763:46:31","nodes":[],"documentation":{"id":19767,"nodeType":"StructuredDocumentation","src":"93733:25:31","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"93772:7:31","parameters":{"id":19770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19769,"mutability":"mutable","name":"newChainId","nameLocation":"93788:10:31","nodeType":"VariableDeclaration","scope":19772,"src":"93780:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19768,"name":"uint256","nodeType":"ElementaryTypeName","src":"93780:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93779:20:31"},"returnParameters":{"id":19771,"nodeType":"ParameterList","parameters":[],"src":"93808:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19776,"nodeType":"FunctionDefinition","src":"93848:37:31","nodes":[],"documentation":{"id":19773,"nodeType":"StructuredDocumentation","src":"93815:28:31","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"93857:16:31","parameters":{"id":19774,"nodeType":"ParameterList","parameters":[],"src":"93873:2:31"},"returnParameters":{"id":19775,"nodeType":"ParameterList","parameters":[],"src":"93884:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19784,"nodeType":"FunctionDefinition","src":"94007:63:31","nodes":[],"documentation":{"id":19777,"nodeType":"StructuredDocumentation","src":"93891:111:31","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"94016:12:31","parameters":{"id":19782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19779,"mutability":"mutable","name":"source","nameLocation":"94037:6:31","nodeType":"VariableDeclaration","scope":19784,"src":"94029:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19778,"name":"address","nodeType":"ElementaryTypeName","src":"94029:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19781,"mutability":"mutable","name":"target","nameLocation":"94053:6:31","nodeType":"VariableDeclaration","scope":19784,"src":"94045:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19780,"name":"address","nodeType":"ElementaryTypeName","src":"94045:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94028:32:31"},"returnParameters":{"id":19783,"nodeType":"ParameterList","parameters":[],"src":"94069:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19790,"nodeType":"FunctionDefinition","src":"94107:48:31","nodes":[],"documentation":{"id":19785,"nodeType":"StructuredDocumentation","src":"94076:26:31","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"94116:8:31","parameters":{"id":19788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19787,"mutability":"mutable","name":"newCoinbase","nameLocation":"94133:11:31","nodeType":"VariableDeclaration","scope":19790,"src":"94125:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19786,"name":"address","nodeType":"ElementaryTypeName","src":"94125:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94124:21:31"},"returnParameters":{"id":19789,"nodeType":"ParameterList","parameters":[],"src":"94154:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19798,"nodeType":"FunctionDefinition","src":"94275:82:31","nodes":[],"documentation":{"id":19791,"nodeType":"StructuredDocumentation","src":"94161:109:31","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"94284:10:31","parameters":{"id":19794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19793,"mutability":"mutable","name":"urlOrAlias","nameLocation":"94311:10:31","nodeType":"VariableDeclaration","scope":19798,"src":"94295:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19792,"name":"string","nodeType":"ElementaryTypeName","src":"94295:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94294:28:31"},"returnParameters":{"id":19797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19796,"mutability":"mutable","name":"forkId","nameLocation":"94349:6:31","nodeType":"VariableDeclaration","scope":19798,"src":"94341:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19795,"name":"uint256","nodeType":"ElementaryTypeName","src":"94341:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94340:16:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19808,"nodeType":"FunctionDefinition","src":"94464:103:31","nodes":[],"documentation":{"id":19799,"nodeType":"StructuredDocumentation","src":"94363:96:31","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"94473:10:31","parameters":{"id":19804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19801,"mutability":"mutable","name":"urlOrAlias","nameLocation":"94500:10:31","nodeType":"VariableDeclaration","scope":19808,"src":"94484:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19800,"name":"string","nodeType":"ElementaryTypeName","src":"94484:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19803,"mutability":"mutable","name":"blockNumber","nameLocation":"94520:11:31","nodeType":"VariableDeclaration","scope":19808,"src":"94512:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19802,"name":"uint256","nodeType":"ElementaryTypeName","src":"94512:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94483:49:31"},"returnParameters":{"id":19807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19806,"mutability":"mutable","name":"forkId","nameLocation":"94559:6:31","nodeType":"VariableDeclaration","scope":19808,"src":"94551:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19805,"name":"uint256","nodeType":"ElementaryTypeName","src":"94551:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94550:16:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19818,"nodeType":"FunctionDefinition","src":"94792:98:31","nodes":[],"documentation":{"id":19809,"nodeType":"StructuredDocumentation","src":"94573:214:31","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"94801:10:31","parameters":{"id":19814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19811,"mutability":"mutable","name":"urlOrAlias","nameLocation":"94828:10:31","nodeType":"VariableDeclaration","scope":19818,"src":"94812:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19810,"name":"string","nodeType":"ElementaryTypeName","src":"94812:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19813,"mutability":"mutable","name":"txHash","nameLocation":"94848:6:31","nodeType":"VariableDeclaration","scope":19818,"src":"94840:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94840:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"94811:44:31"},"returnParameters":{"id":19817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19816,"mutability":"mutable","name":"forkId","nameLocation":"94882:6:31","nodeType":"VariableDeclaration","scope":19818,"src":"94874:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19815,"name":"uint256","nodeType":"ElementaryTypeName","src":"94874:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94873:16:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19826,"nodeType":"FunctionDefinition","src":"95025:88:31","nodes":[],"documentation":{"id":19819,"nodeType":"StructuredDocumentation","src":"94896:124:31","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"95034:16:31","parameters":{"id":19822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19821,"mutability":"mutable","name":"urlOrAlias","nameLocation":"95067:10:31","nodeType":"VariableDeclaration","scope":19826,"src":"95051:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19820,"name":"string","nodeType":"ElementaryTypeName","src":"95051:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95050:28:31"},"returnParameters":{"id":19825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19824,"mutability":"mutable","name":"forkId","nameLocation":"95105:6:31","nodeType":"VariableDeclaration","scope":19826,"src":"95097:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19823,"name":"uint256","nodeType":"ElementaryTypeName","src":"95097:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95096:16:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19836,"nodeType":"FunctionDefinition","src":"95237:109:31","nodes":[],"documentation":{"id":19827,"nodeType":"StructuredDocumentation","src":"95119:113:31","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"95246:16:31","parameters":{"id":19832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19829,"mutability":"mutable","name":"urlOrAlias","nameLocation":"95279:10:31","nodeType":"VariableDeclaration","scope":19836,"src":"95263:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19828,"name":"string","nodeType":"ElementaryTypeName","src":"95263:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19831,"mutability":"mutable","name":"blockNumber","nameLocation":"95299:11:31","nodeType":"VariableDeclaration","scope":19836,"src":"95291:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19830,"name":"uint256","nodeType":"ElementaryTypeName","src":"95291:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95262:49:31"},"returnParameters":{"id":19835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19834,"mutability":"mutable","name":"forkId","nameLocation":"95338:6:31","nodeType":"VariableDeclaration","scope":19836,"src":"95330:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19833,"name":"uint256","nodeType":"ElementaryTypeName","src":"95330:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95329:16:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19846,"nodeType":"FunctionDefinition","src":"95582:104:31","nodes":[],"documentation":{"id":19837,"nodeType":"StructuredDocumentation","src":"95352:225:31","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"95591:16:31","parameters":{"id":19842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19839,"mutability":"mutable","name":"urlOrAlias","nameLocation":"95624:10:31","nodeType":"VariableDeclaration","scope":19846,"src":"95608:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19838,"name":"string","nodeType":"ElementaryTypeName","src":"95608:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19841,"mutability":"mutable","name":"txHash","nameLocation":"95644:6:31","nodeType":"VariableDeclaration","scope":19846,"src":"95636:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95636:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95607:44:31"},"returnParameters":{"id":19845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19844,"mutability":"mutable","name":"forkId","nameLocation":"95678:6:31","nodeType":"VariableDeclaration","scope":19846,"src":"95670:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19843,"name":"uint256","nodeType":"ElementaryTypeName","src":"95670:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95669:16:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19854,"nodeType":"FunctionDefinition","src":"95726:60:31","nodes":[],"documentation":{"id":19847,"nodeType":"StructuredDocumentation","src":"95692:29:31","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"95735:4:31","parameters":{"id":19852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19849,"mutability":"mutable","name":"account","nameLocation":"95748:7:31","nodeType":"VariableDeclaration","scope":19854,"src":"95740:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19848,"name":"address","nodeType":"ElementaryTypeName","src":"95740:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19851,"mutability":"mutable","name":"newBalance","nameLocation":"95765:10:31","nodeType":"VariableDeclaration","scope":19854,"src":"95757:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19850,"name":"uint256","nodeType":"ElementaryTypeName","src":"95757:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95739:37:31"},"returnParameters":{"id":19853,"nodeType":"ParameterList","parameters":[],"src":"95785:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19862,"nodeType":"FunctionDefinition","src":"96024:81:31","nodes":[],"documentation":{"id":19855,"nodeType":"StructuredDocumentation","src":"95792:227:31","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"96033:19:31","parameters":{"id":19858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19857,"mutability":"mutable","name":"snapshotId","nameLocation":"96061:10:31","nodeType":"VariableDeclaration","scope":19862,"src":"96053:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19856,"name":"uint256","nodeType":"ElementaryTypeName","src":"96053:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96052:20:31"},"returnParameters":{"id":19861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19860,"mutability":"mutable","name":"success","nameLocation":"96096:7:31","nodeType":"VariableDeclaration","scope":19862,"src":"96091:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19859,"name":"bool","nodeType":"ElementaryTypeName","src":"96091:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96090:14:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19866,"nodeType":"FunctionDefinition","src":"96177:41:31","nodes":[],"documentation":{"id":19863,"nodeType":"StructuredDocumentation","src":"96111:61:31","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"96186:20:31","parameters":{"id":19864,"nodeType":"ParameterList","parameters":[],"src":"96206:2:31"},"returnParameters":{"id":19865,"nodeType":"ParameterList","parameters":[],"src":"96217:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19872,"nodeType":"FunctionDefinition","src":"96394:52:31","nodes":[],"documentation":{"id":19867,"nodeType":"StructuredDocumentation","src":"96224:165:31","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"96403:10:31","parameters":{"id":19870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19869,"mutability":"mutable","name":"newDifficulty","nameLocation":"96422:13:31","nodeType":"VariableDeclaration","scope":19872,"src":"96414:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19868,"name":"uint256","nodeType":"ElementaryTypeName","src":"96414:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96413:23:31"},"returnParameters":{"id":19871,"nodeType":"ParameterList","parameters":[],"src":"96445:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19878,"nodeType":"FunctionDefinition","src":"96505:61:31","nodes":[],"documentation":{"id":19873,"nodeType":"StructuredDocumentation","src":"96452:48:31","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"96514:9:31","parameters":{"id":19876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19875,"mutability":"mutable","name":"pathToStateJson","nameLocation":"96540:15:31","nodeType":"VariableDeclaration","scope":19878,"src":"96524:31:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19874,"name":"string","nodeType":"ElementaryTypeName","src":"96524:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96523:33:31"},"returnParameters":{"id":19877,"nodeType":"ParameterList","parameters":[],"src":"96565:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19886,"nodeType":"FunctionDefinition","src":"96603:74:31","nodes":[],"documentation":{"id":19879,"nodeType":"StructuredDocumentation","src":"96572:26:31","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"96612:4:31","parameters":{"id":19884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19881,"mutability":"mutable","name":"target","nameLocation":"96625:6:31","nodeType":"VariableDeclaration","scope":19886,"src":"96617:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19880,"name":"address","nodeType":"ElementaryTypeName","src":"96617:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19883,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"96648:18:31","nodeType":"VariableDeclaration","scope":19886,"src":"96633:33:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19882,"name":"bytes","nodeType":"ElementaryTypeName","src":"96633:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96616:51:31"},"returnParameters":{"id":19885,"nodeType":"ParameterList","parameters":[],"src":"96676:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19892,"nodeType":"FunctionDefinition","src":"96713:42:31","nodes":[],"documentation":{"id":19887,"nodeType":"StructuredDocumentation","src":"96683:25:31","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"96722:3:31","parameters":{"id":19890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19889,"mutability":"mutable","name":"newBasefee","nameLocation":"96734:10:31","nodeType":"VariableDeclaration","scope":19892,"src":"96726:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19888,"name":"uint256","nodeType":"ElementaryTypeName","src":"96726:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96725:20:31"},"returnParameters":{"id":19891,"nodeType":"ParameterList","parameters":[],"src":"96754:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19899,"nodeType":"FunctionDefinition","src":"96933:73:31","nodes":[],"documentation":{"id":19893,"nodeType":"StructuredDocumentation","src":"96761:167:31","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"96942:13:31","parameters":{"id":19894,"nodeType":"ParameterList","parameters":[],"src":"96955:2:31"},"returnParameters":{"id":19898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19897,"mutability":"mutable","name":"hashes","nameLocation":"96998:6:31","nodeType":"VariableDeclaration","scope":19899,"src":"96981:23:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"96981:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19896,"nodeType":"ArrayTypeName","src":"96981:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"96980:25:31"},"scope":20755,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19907,"nodeType":"FunctionDefinition","src":"97073:79:31","nodes":[],"documentation":{"id":19900,"nodeType":"StructuredDocumentation","src":"97012:56:31","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"97082:12:31","parameters":{"id":19903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19902,"mutability":"mutable","name":"account","nameLocation":"97103:7:31","nodeType":"VariableDeclaration","scope":19907,"src":"97095:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19901,"name":"address","nodeType":"ElementaryTypeName","src":"97095:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97094:17:31"},"returnParameters":{"id":19906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19905,"mutability":"mutable","name":"persistent","nameLocation":"97140:10:31","nodeType":"VariableDeclaration","scope":19907,"src":"97135:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19904,"name":"bool","nodeType":"ElementaryTypeName","src":"97135:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97134:17:31"},"scope":20755,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19913,"nodeType":"FunctionDefinition","src":"97232:63:31","nodes":[],"documentation":{"id":19908,"nodeType":"StructuredDocumentation","src":"97158:69:31","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"97241:10:31","parameters":{"id":19911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19910,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"97268:16:31","nodeType":"VariableDeclaration","scope":19913,"src":"97252:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19909,"name":"string","nodeType":"ElementaryTypeName","src":"97252:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97251:34:31"},"returnParameters":{"id":19912,"nodeType":"ParameterList","parameters":[],"src":"97294:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19919,"nodeType":"FunctionDefinition","src":"97498:50:31","nodes":[],"documentation":{"id":19914,"nodeType":"StructuredDocumentation","src":"97301:192:31","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97507:14:31","parameters":{"id":19917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19916,"mutability":"mutable","name":"account","nameLocation":"97530:7:31","nodeType":"VariableDeclaration","scope":19919,"src":"97522:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19915,"name":"address","nodeType":"ElementaryTypeName","src":"97522:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97521:17:31"},"returnParameters":{"id":19918,"nodeType":"ParameterList","parameters":[],"src":"97547:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19927,"nodeType":"FunctionDefinition","src":"97593:69:31","nodes":[],"documentation":{"id":19920,"nodeType":"StructuredDocumentation","src":"97554:34:31","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97602:14:31","parameters":{"id":19925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19922,"mutability":"mutable","name":"account0","nameLocation":"97625:8:31","nodeType":"VariableDeclaration","scope":19927,"src":"97617:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19921,"name":"address","nodeType":"ElementaryTypeName","src":"97617:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19924,"mutability":"mutable","name":"account1","nameLocation":"97643:8:31","nodeType":"VariableDeclaration","scope":19927,"src":"97635:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19923,"name":"address","nodeType":"ElementaryTypeName","src":"97635:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97616:36:31"},"returnParameters":{"id":19926,"nodeType":"ParameterList","parameters":[],"src":"97661:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19937,"nodeType":"FunctionDefinition","src":"97707:87:31","nodes":[],"documentation":{"id":19928,"nodeType":"StructuredDocumentation","src":"97668:34:31","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97716:14:31","parameters":{"id":19935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19930,"mutability":"mutable","name":"account0","nameLocation":"97739:8:31","nodeType":"VariableDeclaration","scope":19937,"src":"97731:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19929,"name":"address","nodeType":"ElementaryTypeName","src":"97731:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19932,"mutability":"mutable","name":"account1","nameLocation":"97757:8:31","nodeType":"VariableDeclaration","scope":19937,"src":"97749:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19931,"name":"address","nodeType":"ElementaryTypeName","src":"97749:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19934,"mutability":"mutable","name":"account2","nameLocation":"97775:8:31","nodeType":"VariableDeclaration","scope":19937,"src":"97767:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19933,"name":"address","nodeType":"ElementaryTypeName","src":"97767:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97730:54:31"},"returnParameters":{"id":19936,"nodeType":"ParameterList","parameters":[],"src":"97793:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19944,"nodeType":"FunctionDefinition","src":"97839:62:31","nodes":[],"documentation":{"id":19938,"nodeType":"StructuredDocumentation","src":"97800:34:31","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"97848:14:31","parameters":{"id":19942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19941,"mutability":"mutable","name":"accounts","nameLocation":"97882:8:31","nodeType":"VariableDeclaration","scope":19944,"src":"97863:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19939,"name":"address","nodeType":"ElementaryTypeName","src":"97863:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19940,"nodeType":"ArrayTypeName","src":"97863:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"97862:29:31"},"returnParameters":{"id":19943,"nodeType":"ParameterList","parameters":[],"src":"97900:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19954,"nodeType":"FunctionDefinition","src":"97972:97:31","nodes":[],"documentation":{"id":19945,"nodeType":"StructuredDocumentation","src":"97907:60:31","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"97981:14:31","parameters":{"id":19952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19947,"mutability":"mutable","name":"callee","nameLocation":"98004:6:31","nodeType":"VariableDeclaration","scope":19954,"src":"97996:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19946,"name":"address","nodeType":"ElementaryTypeName","src":"97996:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19949,"mutability":"mutable","name":"data","nameLocation":"98027:4:31","nodeType":"VariableDeclaration","scope":19954,"src":"98012:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19948,"name":"bytes","nodeType":"ElementaryTypeName","src":"98012:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19951,"mutability":"mutable","name":"revertData","nameLocation":"98048:10:31","nodeType":"VariableDeclaration","scope":19954,"src":"98033:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19950,"name":"bytes","nodeType":"ElementaryTypeName","src":"98033:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97995:64:31"},"returnParameters":{"id":19953,"nodeType":"ParameterList","parameters":[],"src":"98068:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19966,"nodeType":"FunctionDefinition","src":"98169:123:31","nodes":[],"documentation":{"id":19955,"nodeType":"StructuredDocumentation","src":"98075:89:31","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"98178:14:31","parameters":{"id":19964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19957,"mutability":"mutable","name":"callee","nameLocation":"98201:6:31","nodeType":"VariableDeclaration","scope":19966,"src":"98193:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19956,"name":"address","nodeType":"ElementaryTypeName","src":"98193:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19959,"mutability":"mutable","name":"msgValue","nameLocation":"98217:8:31","nodeType":"VariableDeclaration","scope":19966,"src":"98209:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19958,"name":"uint256","nodeType":"ElementaryTypeName","src":"98209:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19961,"mutability":"mutable","name":"data","nameLocation":"98242:4:31","nodeType":"VariableDeclaration","scope":19966,"src":"98227:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19960,"name":"bytes","nodeType":"ElementaryTypeName","src":"98227:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19963,"mutability":"mutable","name":"revertData","nameLocation":"98263:10:31","nodeType":"VariableDeclaration","scope":19966,"src":"98248:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19962,"name":"bytes","nodeType":"ElementaryTypeName","src":"98248:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98192:82:31"},"returnParameters":{"id":19965,"nodeType":"ParameterList","parameters":[],"src":"98291:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19976,"nodeType":"FunctionDefinition","src":"98505:89:31","nodes":[],"documentation":{"id":19967,"nodeType":"StructuredDocumentation","src":"98298:202:31","text":"Reverts a call to an address with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"2dfba5df","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"98514:14:31","parameters":{"id":19974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19969,"mutability":"mutable","name":"callee","nameLocation":"98537:6:31","nodeType":"VariableDeclaration","scope":19976,"src":"98529:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19968,"name":"address","nodeType":"ElementaryTypeName","src":"98529:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19971,"mutability":"mutable","name":"data","nameLocation":"98552:4:31","nodeType":"VariableDeclaration","scope":19976,"src":"98545:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19970,"name":"bytes4","nodeType":"ElementaryTypeName","src":"98545:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19973,"mutability":"mutable","name":"revertData","nameLocation":"98573:10:31","nodeType":"VariableDeclaration","scope":19976,"src":"98558:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19972,"name":"bytes","nodeType":"ElementaryTypeName","src":"98558:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98528:56:31"},"returnParameters":{"id":19975,"nodeType":"ParameterList","parameters":[],"src":"98593:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19988,"nodeType":"FunctionDefinition","src":"98836:107:31","nodes":[],"documentation":{"id":19977,"nodeType":"StructuredDocumentation","src":"98600:231:31","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"596c8f04","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"98845:14:31","parameters":{"id":19986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19979,"mutability":"mutable","name":"callee","nameLocation":"98868:6:31","nodeType":"VariableDeclaration","scope":19988,"src":"98860:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19978,"name":"address","nodeType":"ElementaryTypeName","src":"98860:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19981,"mutability":"mutable","name":"msgValue","nameLocation":"98884:8:31","nodeType":"VariableDeclaration","scope":19988,"src":"98876:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19980,"name":"uint256","nodeType":"ElementaryTypeName","src":"98876:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19983,"mutability":"mutable","name":"data","nameLocation":"98901:4:31","nodeType":"VariableDeclaration","scope":19988,"src":"98894:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19982,"name":"bytes4","nodeType":"ElementaryTypeName","src":"98894:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":19985,"mutability":"mutable","name":"revertData","nameLocation":"98922:10:31","nodeType":"VariableDeclaration","scope":19988,"src":"98907:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19984,"name":"bytes","nodeType":"ElementaryTypeName","src":"98907:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98859:74:31"},"returnParameters":{"id":19987,"nodeType":"ParameterList","parameters":[],"src":"98942:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19998,"nodeType":"FunctionDefinition","src":"99203:91:31","nodes":[],"documentation":{"id":19989,"nodeType":"StructuredDocumentation","src":"98949:249:31","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"99212:8:31","parameters":{"id":19996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19991,"mutability":"mutable","name":"callee","nameLocation":"99229:6:31","nodeType":"VariableDeclaration","scope":19998,"src":"99221:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19990,"name":"address","nodeType":"ElementaryTypeName","src":"99221:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19993,"mutability":"mutable","name":"data","nameLocation":"99252:4:31","nodeType":"VariableDeclaration","scope":19998,"src":"99237:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19992,"name":"bytes","nodeType":"ElementaryTypeName","src":"99237:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19995,"mutability":"mutable","name":"returnData","nameLocation":"99273:10:31","nodeType":"VariableDeclaration","scope":19998,"src":"99258:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19994,"name":"bytes","nodeType":"ElementaryTypeName","src":"99258:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99220:64:31"},"returnParameters":{"id":19997,"nodeType":"ParameterList","parameters":[],"src":"99293:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20010,"nodeType":"FunctionDefinition","src":"99469:109:31","nodes":[],"documentation":{"id":19999,"nodeType":"StructuredDocumentation","src":"99300:164:31","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"99478:8:31","parameters":{"id":20008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20001,"mutability":"mutable","name":"callee","nameLocation":"99495:6:31","nodeType":"VariableDeclaration","scope":20010,"src":"99487:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20000,"name":"address","nodeType":"ElementaryTypeName","src":"99487:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20003,"mutability":"mutable","name":"msgValue","nameLocation":"99511:8:31","nodeType":"VariableDeclaration","scope":20010,"src":"99503:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20002,"name":"uint256","nodeType":"ElementaryTypeName","src":"99503:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20005,"mutability":"mutable","name":"data","nameLocation":"99536:4:31","nodeType":"VariableDeclaration","scope":20010,"src":"99521:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20004,"name":"bytes","nodeType":"ElementaryTypeName","src":"99521:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20007,"mutability":"mutable","name":"returnData","nameLocation":"99557:10:31","nodeType":"VariableDeclaration","scope":20010,"src":"99542:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20006,"name":"bytes","nodeType":"ElementaryTypeName","src":"99542:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99486:82:31"},"returnParameters":{"id":20009,"nodeType":"ParameterList","parameters":[],"src":"99577:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20020,"nodeType":"FunctionDefinition","src":"99980:83:31","nodes":[],"documentation":{"id":20011,"nodeType":"StructuredDocumentation","src":"99584:391:31","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"08e0c537","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"99989:8:31","parameters":{"id":20018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20013,"mutability":"mutable","name":"callee","nameLocation":"100006:6:31","nodeType":"VariableDeclaration","scope":20020,"src":"99998:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20012,"name":"address","nodeType":"ElementaryTypeName","src":"99998:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20015,"mutability":"mutable","name":"data","nameLocation":"100021:4:31","nodeType":"VariableDeclaration","scope":20020,"src":"100014:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20014,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100014:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20017,"mutability":"mutable","name":"returnData","nameLocation":"100042:10:31","nodeType":"VariableDeclaration","scope":20020,"src":"100027:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20016,"name":"bytes","nodeType":"ElementaryTypeName","src":"100027:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99997:56:31"},"returnParameters":{"id":20019,"nodeType":"ParameterList","parameters":[],"src":"100062:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20032,"nodeType":"FunctionDefinition","src":"100380:101:31","nodes":[],"documentation":{"id":20021,"nodeType":"StructuredDocumentation","src":"100069:306:31","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"e7b36a3d","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"100389:8:31","parameters":{"id":20030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20023,"mutability":"mutable","name":"callee","nameLocation":"100406:6:31","nodeType":"VariableDeclaration","scope":20032,"src":"100398:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20022,"name":"address","nodeType":"ElementaryTypeName","src":"100398:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20025,"mutability":"mutable","name":"msgValue","nameLocation":"100422:8:31","nodeType":"VariableDeclaration","scope":20032,"src":"100414:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20024,"name":"uint256","nodeType":"ElementaryTypeName","src":"100414:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20027,"mutability":"mutable","name":"data","nameLocation":"100439:4:31","nodeType":"VariableDeclaration","scope":20032,"src":"100432:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20026,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100432:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20029,"mutability":"mutable","name":"returnData","nameLocation":"100460:10:31","nodeType":"VariableDeclaration","scope":20032,"src":"100445:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20028,"name":"bytes","nodeType":"ElementaryTypeName","src":"100445:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100397:74:31"},"returnParameters":{"id":20031,"nodeType":"ParameterList","parameters":[],"src":"100480:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20043,"nodeType":"FunctionDefinition","src":"100571:94:31","nodes":[],"documentation":{"id":20033,"nodeType":"StructuredDocumentation","src":"100487:79:31","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"100580:9:31","parameters":{"id":20041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20035,"mutability":"mutable","name":"callee","nameLocation":"100598:6:31","nodeType":"VariableDeclaration","scope":20043,"src":"100590:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20034,"name":"address","nodeType":"ElementaryTypeName","src":"100590:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20037,"mutability":"mutable","name":"data","nameLocation":"100621:4:31","nodeType":"VariableDeclaration","scope":20043,"src":"100606:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20036,"name":"bytes","nodeType":"ElementaryTypeName","src":"100606:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20040,"mutability":"mutable","name":"returnData","nameLocation":"100644:10:31","nodeType":"VariableDeclaration","scope":20043,"src":"100627:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":20038,"name":"bytes","nodeType":"ElementaryTypeName","src":"100627:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":20039,"nodeType":"ArrayTypeName","src":"100627:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"100589:66:31"},"returnParameters":{"id":20042,"nodeType":"ParameterList","parameters":[],"src":"100664:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20056,"nodeType":"FunctionDefinition","src":"100783:112:31","nodes":[],"documentation":{"id":20044,"nodeType":"StructuredDocumentation","src":"100671:107:31","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"100792:9:31","parameters":{"id":20054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20046,"mutability":"mutable","name":"callee","nameLocation":"100810:6:31","nodeType":"VariableDeclaration","scope":20056,"src":"100802:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20045,"name":"address","nodeType":"ElementaryTypeName","src":"100802:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20048,"mutability":"mutable","name":"msgValue","nameLocation":"100826:8:31","nodeType":"VariableDeclaration","scope":20056,"src":"100818:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20047,"name":"uint256","nodeType":"ElementaryTypeName","src":"100818:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20050,"mutability":"mutable","name":"data","nameLocation":"100851:4:31","nodeType":"VariableDeclaration","scope":20056,"src":"100836:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20049,"name":"bytes","nodeType":"ElementaryTypeName","src":"100836:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20053,"mutability":"mutable","name":"returnData","nameLocation":"100874:10:31","nodeType":"VariableDeclaration","scope":20056,"src":"100857:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":20051,"name":"bytes","nodeType":"ElementaryTypeName","src":"100857:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":20052,"nodeType":"ArrayTypeName","src":"100857:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"100801:84:31"},"returnParameters":{"id":20055,"nodeType":"ParameterList","parameters":[],"src":"100894:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20066,"nodeType":"FunctionDefinition","src":"101401:84:31","nodes":[],"documentation":{"id":20057,"nodeType":"StructuredDocumentation","src":"100901:495:31","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"101410:12:31","parameters":{"id":20064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20059,"mutability":"mutable","name":"callee","nameLocation":"101431:6:31","nodeType":"VariableDeclaration","scope":20066,"src":"101423:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20058,"name":"address","nodeType":"ElementaryTypeName","src":"101423:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20061,"mutability":"mutable","name":"target","nameLocation":"101447:6:31","nodeType":"VariableDeclaration","scope":20066,"src":"101439:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20060,"name":"address","nodeType":"ElementaryTypeName","src":"101439:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20063,"mutability":"mutable","name":"data","nameLocation":"101470:4:31","nodeType":"VariableDeclaration","scope":20066,"src":"101455:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20062,"name":"bytes","nodeType":"ElementaryTypeName","src":"101455:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"101422:53:31"},"returnParameters":{"id":20065,"nodeType":"ParameterList","parameters":[],"src":"101484:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20072,"nodeType":"FunctionDefinition","src":"101560:43:31","nodes":[],"documentation":{"id":20067,"nodeType":"StructuredDocumentation","src":"101491:64:31","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"101569:5:31","parameters":{"id":20070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20069,"mutability":"mutable","name":"msgSender","nameLocation":"101583:9:31","nodeType":"VariableDeclaration","scope":20072,"src":"101575:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20068,"name":"address","nodeType":"ElementaryTypeName","src":"101575:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101574:19:31"},"returnParameters":{"id":20071,"nodeType":"ParameterList","parameters":[],"src":"101602:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20080,"nodeType":"FunctionDefinition","src":"101722:61:31","nodes":[],"documentation":{"id":20073,"nodeType":"StructuredDocumentation","src":"101609:108:31","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"101731:5:31","parameters":{"id":20078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20075,"mutability":"mutable","name":"msgSender","nameLocation":"101745:9:31","nodeType":"VariableDeclaration","scope":20080,"src":"101737:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20074,"name":"address","nodeType":"ElementaryTypeName","src":"101737:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20077,"mutability":"mutable","name":"txOrigin","nameLocation":"101764:8:31","nodeType":"VariableDeclaration","scope":20080,"src":"101756:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20076,"name":"address","nodeType":"ElementaryTypeName","src":"101756:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101736:37:31"},"returnParameters":{"id":20079,"nodeType":"ParameterList","parameters":[],"src":"101782:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20088,"nodeType":"FunctionDefinition","src":"101867:62:31","nodes":[],"documentation":{"id":20081,"nodeType":"StructuredDocumentation","src":"101789:73:31","text":"Sets the *next* delegate call's `msg.sender` to be the input address."},"functionSelector":"a7f8bf5c","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"101876:5:31","parameters":{"id":20086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20083,"mutability":"mutable","name":"msgSender","nameLocation":"101890:9:31","nodeType":"VariableDeclaration","scope":20088,"src":"101882:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20082,"name":"address","nodeType":"ElementaryTypeName","src":"101882:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20085,"mutability":"mutable","name":"delegateCall","nameLocation":"101906:12:31","nodeType":"VariableDeclaration","scope":20088,"src":"101901:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20084,"name":"bool","nodeType":"ElementaryTypeName","src":"101901:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101881:38:31"},"returnParameters":{"id":20087,"nodeType":"ParameterList","parameters":[],"src":"101928:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20098,"nodeType":"FunctionDefinition","src":"102057:80:31","nodes":[],"documentation":{"id":20089,"nodeType":"StructuredDocumentation","src":"101935:117:31","text":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"7d73d042","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"102066:5:31","parameters":{"id":20096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20091,"mutability":"mutable","name":"msgSender","nameLocation":"102080:9:31","nodeType":"VariableDeclaration","scope":20098,"src":"102072:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20090,"name":"address","nodeType":"ElementaryTypeName","src":"102072:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20093,"mutability":"mutable","name":"txOrigin","nameLocation":"102099:8:31","nodeType":"VariableDeclaration","scope":20098,"src":"102091:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20092,"name":"address","nodeType":"ElementaryTypeName","src":"102091:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20095,"mutability":"mutable","name":"delegateCall","nameLocation":"102114:12:31","nodeType":"VariableDeclaration","scope":20098,"src":"102109:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20094,"name":"bool","nodeType":"ElementaryTypeName","src":"102109:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102071:56:31"},"returnParameters":{"id":20097,"nodeType":"ParameterList","parameters":[],"src":"102136:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20104,"nodeType":"FunctionDefinition","src":"102314:52:31","nodes":[],"documentation":{"id":20099,"nodeType":"StructuredDocumentation","src":"102143:166:31","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"102323:10:31","parameters":{"id":20102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20101,"mutability":"mutable","name":"newPrevrandao","nameLocation":"102342:13:31","nodeType":"VariableDeclaration","scope":20104,"src":"102334:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102334:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"102333:23:31"},"returnParameters":{"id":20103,"nodeType":"ParameterList","parameters":[],"src":"102365:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20110,"nodeType":"FunctionDefinition","src":"102543:52:31","nodes":[],"documentation":{"id":20105,"nodeType":"StructuredDocumentation","src":"102372:166:31","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"102552:10:31","parameters":{"id":20108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20107,"mutability":"mutable","name":"newPrevrandao","nameLocation":"102571:13:31","nodeType":"VariableDeclaration","scope":20110,"src":"102563:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20106,"name":"uint256","nodeType":"ElementaryTypeName","src":"102563:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102562:23:31"},"returnParameters":{"id":20109,"nodeType":"ParameterList","parameters":[],"src":"102594:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20121,"nodeType":"FunctionDefinition","src":"102723:101:31","nodes":[],"documentation":{"id":20111,"nodeType":"StructuredDocumentation","src":"102601:117:31","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"102732:11:31","parameters":{"id":20112,"nodeType":"ParameterList","parameters":[],"src":"102743:2:31"},"returnParameters":{"id":20120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20115,"mutability":"mutable","name":"callerMode","nameLocation":"102775:10:31","nodeType":"VariableDeclaration","scope":20121,"src":"102764:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15986","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":20114,"nodeType":"UserDefinedTypeName","pathNode":{"id":20113,"name":"CallerMode","nameLocations":["102764:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":15986,"src":"102764:10:31"},"referencedDeclaration":15986,"src":"102764:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15986","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":20117,"mutability":"mutable","name":"msgSender","nameLocation":"102795:9:31","nodeType":"VariableDeclaration","scope":20121,"src":"102787:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20116,"name":"address","nodeType":"ElementaryTypeName","src":"102787:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20119,"mutability":"mutable","name":"txOrigin","nameLocation":"102814:8:31","nodeType":"VariableDeclaration","scope":20121,"src":"102806:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20118,"name":"address","nodeType":"ElementaryTypeName","src":"102806:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102763:60:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20127,"nodeType":"FunctionDefinition","src":"102912:46:31","nodes":[],"documentation":{"id":20122,"nodeType":"StructuredDocumentation","src":"102830:77:31","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"102921:10:31","parameters":{"id":20125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20124,"mutability":"mutable","name":"account","nameLocation":"102940:7:31","nodeType":"VariableDeclaration","scope":20127,"src":"102932:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20123,"name":"address","nodeType":"ElementaryTypeName","src":"102932:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102931:17:31"},"returnParameters":{"id":20126,"nodeType":"ParameterList","parameters":[],"src":"102957:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20135,"nodeType":"FunctionDefinition","src":"103306:75:31","nodes":[],"documentation":{"id":20128,"nodeType":"StructuredDocumentation","src":"102964:337:31","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"103315:13:31","parameters":{"id":20131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20130,"mutability":"mutable","name":"snapshotId","nameLocation":"103337:10:31","nodeType":"VariableDeclaration","scope":20135,"src":"103329:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20129,"name":"uint256","nodeType":"ElementaryTypeName","src":"103329:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103328:20:31"},"returnParameters":{"id":20134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20133,"mutability":"mutable","name":"success","nameLocation":"103372:7:31","nodeType":"VariableDeclaration","scope":20135,"src":"103367:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20132,"name":"bool","nodeType":"ElementaryTypeName","src":"103367:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"103366:14:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20143,"nodeType":"FunctionDefinition","src":"103664:84:31","nodes":[],"documentation":{"id":20136,"nodeType":"StructuredDocumentation","src":"103387:272:31","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"103673:22:31","parameters":{"id":20139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20138,"mutability":"mutable","name":"snapshotId","nameLocation":"103704:10:31","nodeType":"VariableDeclaration","scope":20143,"src":"103696:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20137,"name":"uint256","nodeType":"ElementaryTypeName","src":"103696:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103695:20:31"},"returnParameters":{"id":20142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20141,"mutability":"mutable","name":"success","nameLocation":"103739:7:31","nodeType":"VariableDeclaration","scope":20143,"src":"103734:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20140,"name":"bool","nodeType":"ElementaryTypeName","src":"103734:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"103733:14:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20149,"nodeType":"FunctionDefinition","src":"103845:52:31","nodes":[],"documentation":{"id":20144,"nodeType":"StructuredDocumentation","src":"103754:86:31","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"103854:16:31","parameters":{"id":20147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20146,"mutability":"mutable","name":"account","nameLocation":"103879:7:31","nodeType":"VariableDeclaration","scope":20149,"src":"103871:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20145,"name":"address","nodeType":"ElementaryTypeName","src":"103871:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103870:17:31"},"returnParameters":{"id":20148,"nodeType":"ParameterList","parameters":[],"src":"103896:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20156,"nodeType":"FunctionDefinition","src":"103944:64:31","nodes":[],"documentation":{"id":20150,"nodeType":"StructuredDocumentation","src":"103903:36:31","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"103953:16:31","parameters":{"id":20154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20153,"mutability":"mutable","name":"accounts","nameLocation":"103989:8:31","nodeType":"VariableDeclaration","scope":20156,"src":"103970:27:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":20151,"name":"address","nodeType":"ElementaryTypeName","src":"103970:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":20152,"nodeType":"ArrayTypeName","src":"103970:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"103969:29:31"},"returnParameters":{"id":20155,"nodeType":"ParameterList","parameters":[],"src":"104007:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20162,"nodeType":"FunctionDefinition","src":"104043:42:31","nodes":[],"documentation":{"id":20157,"nodeType":"StructuredDocumentation","src":"104014:24:31","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"104052:4:31","parameters":{"id":20160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20159,"mutability":"mutable","name":"newHeight","nameLocation":"104065:9:31","nodeType":"VariableDeclaration","scope":20162,"src":"104057:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20158,"name":"uint256","nodeType":"ElementaryTypeName","src":"104057:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104056:19:31"},"returnParameters":{"id":20161,"nodeType":"ParameterList","parameters":[],"src":"104084:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20168,"nodeType":"FunctionDefinition","src":"104224:48:31","nodes":[],"documentation":{"id":20163,"nodeType":"StructuredDocumentation","src":"104091:128:31","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104233:8:31","parameters":{"id":20166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20165,"mutability":"mutable","name":"blockNumber","nameLocation":"104250:11:31","nodeType":"VariableDeclaration","scope":20168,"src":"104242:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20164,"name":"uint256","nodeType":"ElementaryTypeName","src":"104242:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104241:21:31"},"returnParameters":{"id":20167,"nodeType":"ParameterList","parameters":[],"src":"104271:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20174,"nodeType":"FunctionDefinition","src":"104487:43:31","nodes":[],"documentation":{"id":20169,"nodeType":"StructuredDocumentation","src":"104278:204:31","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104496:8:31","parameters":{"id":20172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20171,"mutability":"mutable","name":"txHash","nameLocation":"104513:6:31","nodeType":"VariableDeclaration","scope":20174,"src":"104505:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104505:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104504:16:31"},"returnParameters":{"id":20173,"nodeType":"ParameterList","parameters":[],"src":"104529:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20182,"nodeType":"FunctionDefinition","src":"104590:64:31","nodes":[],"documentation":{"id":20175,"nodeType":"StructuredDocumentation","src":"104536:49:31","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104599:8:31","parameters":{"id":20180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20177,"mutability":"mutable","name":"forkId","nameLocation":"104616:6:31","nodeType":"VariableDeclaration","scope":20182,"src":"104608:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20176,"name":"uint256","nodeType":"ElementaryTypeName","src":"104608:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20179,"mutability":"mutable","name":"blockNumber","nameLocation":"104632:11:31","nodeType":"VariableDeclaration","scope":20182,"src":"104624:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20178,"name":"uint256","nodeType":"ElementaryTypeName","src":"104624:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104607:37:31"},"returnParameters":{"id":20181,"nodeType":"ParameterList","parameters":[],"src":"104653:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20190,"nodeType":"FunctionDefinition","src":"104790:59:31","nodes":[],"documentation":{"id":20183,"nodeType":"StructuredDocumentation","src":"104660:125:31","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"104799:8:31","parameters":{"id":20188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20185,"mutability":"mutable","name":"forkId","nameLocation":"104816:6:31","nodeType":"VariableDeclaration","scope":20190,"src":"104808:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20184,"name":"uint256","nodeType":"ElementaryTypeName","src":"104808:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20187,"mutability":"mutable","name":"txHash","nameLocation":"104832:6:31","nodeType":"VariableDeclaration","scope":20190,"src":"104824:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104824:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104807:32:31"},"returnParameters":{"id":20189,"nodeType":"ParameterList","parameters":[],"src":"104848:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20196,"nodeType":"FunctionDefinition","src":"104962:45:31","nodes":[],"documentation":{"id":20191,"nodeType":"StructuredDocumentation","src":"104855:102:31","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"104971:10:31","parameters":{"id":20194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20193,"mutability":"mutable","name":"forkId","nameLocation":"104990:6:31","nodeType":"VariableDeclaration","scope":20196,"src":"104982:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20192,"name":"uint256","nodeType":"ElementaryTypeName","src":"104982:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104981:16:31"},"returnParameters":{"id":20195,"nodeType":"ParameterList","parameters":[],"src":"105006:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20204,"nodeType":"FunctionDefinition","src":"105157:71:31","nodes":[],"documentation":{"id":20197,"nodeType":"StructuredDocumentation","src":"105013:139:31","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"105166:12:31","parameters":{"id":20202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20199,"mutability":"mutable","name":"blockNumber","nameLocation":"105187:11:31","nodeType":"VariableDeclaration","scope":20204,"src":"105179:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20198,"name":"uint256","nodeType":"ElementaryTypeName","src":"105179:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20201,"mutability":"mutable","name":"blockHash","nameLocation":"105208:9:31","nodeType":"VariableDeclaration","scope":20204,"src":"105200:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105200:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"105178:40:31"},"returnParameters":{"id":20203,"nodeType":"ParameterList","parameters":[],"src":"105227:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20212,"nodeType":"FunctionDefinition","src":"105326:61:31","nodes":[],"documentation":{"id":20205,"nodeType":"StructuredDocumentation","src":"105234:87:31","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"105335:8:31","parameters":{"id":20210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20207,"mutability":"mutable","name":"account","nameLocation":"105352:7:31","nodeType":"VariableDeclaration","scope":20212,"src":"105344:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20206,"name":"address","nodeType":"ElementaryTypeName","src":"105344:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20209,"mutability":"mutable","name":"newNonce","nameLocation":"105368:8:31","nodeType":"VariableDeclaration","scope":20212,"src":"105361:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20208,"name":"uint64","nodeType":"ElementaryTypeName","src":"105361:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"105343:34:31"},"returnParameters":{"id":20211,"nodeType":"ParameterList","parameters":[],"src":"105386:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20220,"nodeType":"FunctionDefinition","src":"105453:67:31","nodes":[],"documentation":{"id":20213,"nodeType":"StructuredDocumentation","src":"105393:55:31","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"105462:14:31","parameters":{"id":20218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20215,"mutability":"mutable","name":"account","nameLocation":"105485:7:31","nodeType":"VariableDeclaration","scope":20220,"src":"105477:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20214,"name":"address","nodeType":"ElementaryTypeName","src":"105477:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20217,"mutability":"mutable","name":"newNonce","nameLocation":"105501:8:31","nodeType":"VariableDeclaration","scope":20220,"src":"105494:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20216,"name":"uint64","nodeType":"ElementaryTypeName","src":"105494:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"105476:34:31"},"returnParameters":{"id":20219,"nodeType":"ParameterList","parameters":[],"src":"105519:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20228,"nodeType":"FunctionDefinition","src":"105619:86:31","nodes":[],"documentation":{"id":20221,"nodeType":"StructuredDocumentation","src":"105526:88:31","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"105628:19:31","parameters":{"id":20224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20223,"mutability":"mutable","name":"name","nameLocation":"105664:4:31","nodeType":"VariableDeclaration","scope":20228,"src":"105648:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20222,"name":"string","nodeType":"ElementaryTypeName","src":"105648:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"105647:22:31"},"returnParameters":{"id":20227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20226,"mutability":"mutable","name":"gasUsed","nameLocation":"105696:7:31","nodeType":"VariableDeclaration","scope":20228,"src":"105688:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20225,"name":"uint256","nodeType":"ElementaryTypeName","src":"105688:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105687:17:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20238,"nodeType":"FunctionDefinition","src":"105815:109:31","nodes":[],"documentation":{"id":20229,"nodeType":"StructuredDocumentation","src":"105711:99:31","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"105824:19:31","parameters":{"id":20234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20231,"mutability":"mutable","name":"group","nameLocation":"105860:5:31","nodeType":"VariableDeclaration","scope":20238,"src":"105844:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20230,"name":"string","nodeType":"ElementaryTypeName","src":"105844:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20233,"mutability":"mutable","name":"name","nameLocation":"105883:4:31","nodeType":"VariableDeclaration","scope":20238,"src":"105867:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20232,"name":"string","nodeType":"ElementaryTypeName","src":"105867:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"105843:45:31"},"returnParameters":{"id":20237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20236,"mutability":"mutable","name":"gasUsed","nameLocation":"105915:7:31","nodeType":"VariableDeclaration","scope":20238,"src":"105907:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20235,"name":"uint256","nodeType":"ElementaryTypeName","src":"105907:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105906:17:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20244,"nodeType":"FunctionDefinition","src":"106084:63:31","nodes":[],"documentation":{"id":20239,"nodeType":"StructuredDocumentation","src":"105930:149:31","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"106093:13:31","parameters":{"id":20240,"nodeType":"ParameterList","parameters":[],"src":"106106:2:31"},"returnParameters":{"id":20243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20242,"mutability":"mutable","name":"snapshotId","nameLocation":"106135:10:31","nodeType":"VariableDeclaration","scope":20244,"src":"106127:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20241,"name":"uint256","nodeType":"ElementaryTypeName","src":"106127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106126:20:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20252,"nodeType":"FunctionDefinition","src":"106274:69:31","nodes":[],"documentation":{"id":20245,"nodeType":"StructuredDocumentation","src":"106153:116:31","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"106283:13:31","parameters":{"id":20250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20247,"mutability":"mutable","name":"name","nameLocation":"106313:4:31","nodeType":"VariableDeclaration","scope":20252,"src":"106297:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20246,"name":"string","nodeType":"ElementaryTypeName","src":"106297:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20249,"mutability":"mutable","name":"value","nameLocation":"106327:5:31","nodeType":"VariableDeclaration","scope":20252,"src":"106319:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20248,"name":"uint256","nodeType":"ElementaryTypeName","src":"106319:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106296:37:31"},"returnParameters":{"id":20251,"nodeType":"ParameterList","parameters":[],"src":"106342:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20262,"nodeType":"FunctionDefinition","src":"106423:92:31","nodes":[],"documentation":{"id":20253,"nodeType":"StructuredDocumentation","src":"106349:69:31","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"106432:13:31","parameters":{"id":20260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20255,"mutability":"mutable","name":"group","nameLocation":"106462:5:31","nodeType":"VariableDeclaration","scope":20262,"src":"106446:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20254,"name":"string","nodeType":"ElementaryTypeName","src":"106446:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20257,"mutability":"mutable","name":"name","nameLocation":"106485:4:31","nodeType":"VariableDeclaration","scope":20262,"src":"106469:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20256,"name":"string","nodeType":"ElementaryTypeName","src":"106469:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20259,"mutability":"mutable","name":"value","nameLocation":"106499:5:31","nodeType":"VariableDeclaration","scope":20262,"src":"106491:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20258,"name":"uint256","nodeType":"ElementaryTypeName","src":"106491:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106445:60:31"},"returnParameters":{"id":20261,"nodeType":"ParameterList","parameters":[],"src":"106514:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20268,"nodeType":"FunctionDefinition","src":"106622:48:31","nodes":[],"documentation":{"id":20263,"nodeType":"StructuredDocumentation","src":"106521:96:31","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"106631:10:31","parameters":{"id":20266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20265,"mutability":"mutable","name":"msgSender","nameLocation":"106650:9:31","nodeType":"VariableDeclaration","scope":20268,"src":"106642:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20264,"name":"address","nodeType":"ElementaryTypeName","src":"106642:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106641:19:31"},"returnParameters":{"id":20267,"nodeType":"ParameterList","parameters":[],"src":"106669:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20276,"nodeType":"FunctionDefinition","src":"106821:66:31","nodes":[],"documentation":{"id":20269,"nodeType":"StructuredDocumentation","src":"106676:140:31","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"106830:10:31","parameters":{"id":20274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20271,"mutability":"mutable","name":"msgSender","nameLocation":"106849:9:31","nodeType":"VariableDeclaration","scope":20276,"src":"106841:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20270,"name":"address","nodeType":"ElementaryTypeName","src":"106841:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20273,"mutability":"mutable","name":"txOrigin","nameLocation":"106868:8:31","nodeType":"VariableDeclaration","scope":20276,"src":"106860:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20272,"name":"address","nodeType":"ElementaryTypeName","src":"106860:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106840:37:31"},"returnParameters":{"id":20275,"nodeType":"ParameterList","parameters":[],"src":"106886:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20284,"nodeType":"FunctionDefinition","src":"107003:67:31","nodes":[],"documentation":{"id":20277,"nodeType":"StructuredDocumentation","src":"106893:105:31","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"1cc0b435","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"107012:10:31","parameters":{"id":20282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20279,"mutability":"mutable","name":"msgSender","nameLocation":"107031:9:31","nodeType":"VariableDeclaration","scope":20284,"src":"107023:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20278,"name":"address","nodeType":"ElementaryTypeName","src":"107023:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20281,"mutability":"mutable","name":"delegateCall","nameLocation":"107047:12:31","nodeType":"VariableDeclaration","scope":20284,"src":"107042:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20280,"name":"bool","nodeType":"ElementaryTypeName","src":"107042:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"107022:38:31"},"returnParameters":{"id":20283,"nodeType":"ParameterList","parameters":[],"src":"107069:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20294,"nodeType":"FunctionDefinition","src":"107230:85:31","nodes":[],"documentation":{"id":20285,"nodeType":"StructuredDocumentation","src":"107076:149:31","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"4eb859b5","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"107239:10:31","parameters":{"id":20292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20287,"mutability":"mutable","name":"msgSender","nameLocation":"107258:9:31","nodeType":"VariableDeclaration","scope":20294,"src":"107250:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20286,"name":"address","nodeType":"ElementaryTypeName","src":"107250:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20289,"mutability":"mutable","name":"txOrigin","nameLocation":"107277:8:31","nodeType":"VariableDeclaration","scope":20294,"src":"107269:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20288,"name":"address","nodeType":"ElementaryTypeName","src":"107269:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20291,"mutability":"mutable","name":"delegateCall","nameLocation":"107292:12:31","nodeType":"VariableDeclaration","scope":20294,"src":"107287:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20290,"name":"bool","nodeType":"ElementaryTypeName","src":"107287:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"107249:56:31"},"returnParameters":{"id":20293,"nodeType":"ParameterList","parameters":[],"src":"107314:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20300,"nodeType":"FunctionDefinition","src":"107446:57:31","nodes":[],"documentation":{"id":20295,"nodeType":"StructuredDocumentation","src":"107321:120:31","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"107455:16:31","parameters":{"id":20298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20297,"mutability":"mutable","name":"name","nameLocation":"107488:4:31","nodeType":"VariableDeclaration","scope":20300,"src":"107472:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20296,"name":"string","nodeType":"ElementaryTypeName","src":"107472:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107471:22:31"},"returnParameters":{"id":20299,"nodeType":"ParameterList","parameters":[],"src":"107502:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20308,"nodeType":"FunctionDefinition","src":"107587:80:31","nodes":[],"documentation":{"id":20301,"nodeType":"StructuredDocumentation","src":"107509:73:31","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"107596:16:31","parameters":{"id":20306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20303,"mutability":"mutable","name":"group","nameLocation":"107629:5:31","nodeType":"VariableDeclaration","scope":20308,"src":"107613:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20302,"name":"string","nodeType":"ElementaryTypeName","src":"107613:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20305,"mutability":"mutable","name":"name","nameLocation":"107652:4:31","nodeType":"VariableDeclaration","scope":20308,"src":"107636:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20304,"name":"string","nodeType":"ElementaryTypeName","src":"107636:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107612:45:31"},"returnParameters":{"id":20307,"nodeType":"ParameterList","parameters":[],"src":"107666:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20312,"nodeType":"FunctionDefinition","src":"107742:30:31","nodes":[],"documentation":{"id":20309,"nodeType":"StructuredDocumentation","src":"107673:64:31","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"107751:9:31","parameters":{"id":20310,"nodeType":"ParameterList","parameters":[],"src":"107760:2:31"},"returnParameters":{"id":20311,"nodeType":"ParameterList","parameters":[],"src":"107771:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20318,"nodeType":"FunctionDefinition","src":"107896:62:31","nodes":[],"documentation":{"id":20313,"nodeType":"StructuredDocumentation","src":"107778:113:31","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"107905:15:31","parameters":{"id":20314,"nodeType":"ParameterList","parameters":[],"src":"107920:2:31"},"returnParameters":{"id":20317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20316,"mutability":"mutable","name":"gasUsed","nameLocation":"107949:7:31","nodeType":"VariableDeclaration","scope":20318,"src":"107941:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20315,"name":"uint256","nodeType":"ElementaryTypeName","src":"107941:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107940:17:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20326,"nodeType":"FunctionDefinition","src":"108130:82:31","nodes":[],"documentation":{"id":20319,"nodeType":"StructuredDocumentation","src":"107964:161:31","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"108139:15:31","parameters":{"id":20322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20321,"mutability":"mutable","name":"name","nameLocation":"108171:4:31","nodeType":"VariableDeclaration","scope":20326,"src":"108155:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20320,"name":"string","nodeType":"ElementaryTypeName","src":"108155:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"108154:22:31"},"returnParameters":{"id":20325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20324,"mutability":"mutable","name":"gasUsed","nameLocation":"108203:7:31","nodeType":"VariableDeclaration","scope":20326,"src":"108195:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20323,"name":"uint256","nodeType":"ElementaryTypeName","src":"108195:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108194:17:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20336,"nodeType":"FunctionDefinition","src":"108337:105:31","nodes":[],"documentation":{"id":20327,"nodeType":"StructuredDocumentation","src":"108218:114:31","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"108346:15:31","parameters":{"id":20332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20329,"mutability":"mutable","name":"group","nameLocation":"108378:5:31","nodeType":"VariableDeclaration","scope":20336,"src":"108362:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20328,"name":"string","nodeType":"ElementaryTypeName","src":"108362:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":20331,"mutability":"mutable","name":"name","nameLocation":"108401:4:31","nodeType":"VariableDeclaration","scope":20336,"src":"108385:20:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20330,"name":"string","nodeType":"ElementaryTypeName","src":"108385:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"108361:45:31"},"returnParameters":{"id":20335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20334,"mutability":"mutable","name":"gasUsed","nameLocation":"108433:7:31","nodeType":"VariableDeclaration","scope":20336,"src":"108425:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20333,"name":"uint256","nodeType":"ElementaryTypeName","src":"108425:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108424:17:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20346,"nodeType":"FunctionDefinition","src":"108500:69:31","nodes":[],"documentation":{"id":20337,"nodeType":"StructuredDocumentation","src":"108448:47:31","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"108509:5:31","parameters":{"id":20344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20339,"mutability":"mutable","name":"target","nameLocation":"108523:6:31","nodeType":"VariableDeclaration","scope":20346,"src":"108515:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20338,"name":"address","nodeType":"ElementaryTypeName","src":"108515:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20341,"mutability":"mutable","name":"slot","nameLocation":"108539:4:31","nodeType":"VariableDeclaration","scope":20346,"src":"108531:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108531:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":20343,"mutability":"mutable","name":"value","nameLocation":"108553:5:31","nodeType":"VariableDeclaration","scope":20346,"src":"108545:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108545:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108514:45:31"},"returnParameters":{"id":20345,"nodeType":"ParameterList","parameters":[],"src":"108568:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20352,"nodeType":"FunctionDefinition","src":"108672:43:31","nodes":[],"documentation":{"id":20347,"nodeType":"StructuredDocumentation","src":"108575:92:31","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"108681:8:31","parameters":{"id":20350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20349,"mutability":"mutable","name":"txHash","nameLocation":"108698:6:31","nodeType":"VariableDeclaration","scope":20352,"src":"108690:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108690:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108689:16:31"},"returnParameters":{"id":20351,"nodeType":"ParameterList","parameters":[],"src":"108714:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20360,"nodeType":"FunctionDefinition","src":"108817:59:31","nodes":[],"documentation":{"id":20353,"nodeType":"StructuredDocumentation","src":"108721:91:31","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"108826:8:31","parameters":{"id":20358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20355,"mutability":"mutable","name":"forkId","nameLocation":"108843:6:31","nodeType":"VariableDeclaration","scope":20360,"src":"108835:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20354,"name":"uint256","nodeType":"ElementaryTypeName","src":"108835:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20357,"mutability":"mutable","name":"txHash","nameLocation":"108859:6:31","nodeType":"VariableDeclaration","scope":20360,"src":"108851:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108851:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108834:32:31"},"returnParameters":{"id":20359,"nodeType":"ParameterList","parameters":[],"src":"108875:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20366,"nodeType":"FunctionDefinition","src":"108910:50:31","nodes":[],"documentation":{"id":20361,"nodeType":"StructuredDocumentation","src":"108882:23:31","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"108919:10:31","parameters":{"id":20364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20363,"mutability":"mutable","name":"newGasPrice","nameLocation":"108938:11:31","nodeType":"VariableDeclaration","scope":20366,"src":"108930:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20362,"name":"uint256","nodeType":"ElementaryTypeName","src":"108930:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108929:21:31"},"returnParameters":{"id":20365,"nodeType":"ParameterList","parameters":[],"src":"108959:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20372,"nodeType":"FunctionDefinition","src":"108998:45:31","nodes":[],"documentation":{"id":20367,"nodeType":"StructuredDocumentation","src":"108966:27:31","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"109007:4:31","parameters":{"id":20370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20369,"mutability":"mutable","name":"newTimestamp","nameLocation":"109020:12:31","nodeType":"VariableDeclaration","scope":20372,"src":"109012:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20368,"name":"uint256","nodeType":"ElementaryTypeName","src":"109012:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109011:22:31"},"returnParameters":{"id":20371,"nodeType":"ParameterList","parameters":[],"src":"109042:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20380,"nodeType":"FunctionDefinition","src":"109168:76:31","nodes":[],"documentation":{"id":20373,"nodeType":"StructuredDocumentation","src":"109049:114:31","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"109177:14:31","parameters":{"id":20376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20375,"mutability":"mutable","name":"snapshotId","nameLocation":"109200:10:31","nodeType":"VariableDeclaration","scope":20380,"src":"109192:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20374,"name":"uint256","nodeType":"ElementaryTypeName","src":"109192:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109191:20:31"},"returnParameters":{"id":20379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20378,"mutability":"mutable","name":"success","nameLocation":"109235:7:31","nodeType":"VariableDeclaration","scope":20380,"src":"109230:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20377,"name":"bool","nodeType":"ElementaryTypeName","src":"109230:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109229:14:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20384,"nodeType":"FunctionDefinition","src":"109371:36:31","nodes":[],"documentation":{"id":20381,"nodeType":"StructuredDocumentation","src":"109250:116:31","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"109380:15:31","parameters":{"id":20382,"nodeType":"ParameterList","parameters":[],"src":"109395:2:31"},"returnParameters":{"id":20383,"nodeType":"ParameterList","parameters":[],"src":"109406:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20392,"nodeType":"FunctionDefinition","src":"109538:79:31","nodes":[],"documentation":{"id":20385,"nodeType":"StructuredDocumentation","src":"109413:120:31","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"109547:17:31","parameters":{"id":20388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20387,"mutability":"mutable","name":"snapshotId","nameLocation":"109573:10:31","nodeType":"VariableDeclaration","scope":20392,"src":"109565:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20386,"name":"uint256","nodeType":"ElementaryTypeName","src":"109565:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109564:20:31"},"returnParameters":{"id":20391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20390,"mutability":"mutable","name":"success","nameLocation":"109608:7:31","nodeType":"VariableDeclaration","scope":20392,"src":"109603:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20389,"name":"bool","nodeType":"ElementaryTypeName","src":"109603:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109602:14:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20400,"nodeType":"FunctionDefinition","src":"109730:70:31","nodes":[],"documentation":{"id":20393,"nodeType":"StructuredDocumentation","src":"109623:102:31","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"109739:8:31","parameters":{"id":20396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20395,"mutability":"mutable","name":"snapshotId","nameLocation":"109756:10:31","nodeType":"VariableDeclaration","scope":20400,"src":"109748:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20394,"name":"uint256","nodeType":"ElementaryTypeName","src":"109748:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109747:20:31"},"returnParameters":{"id":20399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20398,"mutability":"mutable","name":"success","nameLocation":"109791:7:31","nodeType":"VariableDeclaration","scope":20400,"src":"109786:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20397,"name":"bool","nodeType":"ElementaryTypeName","src":"109786:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109785:14:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20406,"nodeType":"FunctionDefinition","src":"109913:58:31","nodes":[],"documentation":{"id":20401,"nodeType":"StructuredDocumentation","src":"109806:102:31","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"109922:8:31","parameters":{"id":20402,"nodeType":"ParameterList","parameters":[],"src":"109930:2:31"},"returnParameters":{"id":20405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20404,"mutability":"mutable","name":"snapshotId","nameLocation":"109959:10:31","nodeType":"VariableDeclaration","scope":20406,"src":"109951:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20403,"name":"uint256","nodeType":"ElementaryTypeName","src":"109951:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109950:20:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20418,"nodeType":"FunctionDefinition","src":"110123:105:31","nodes":[],"documentation":{"id":20407,"nodeType":"StructuredDocumentation","src":"110011:107:31","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"110132:16:31","parameters":{"id":20416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20409,"mutability":"mutable","name":"callee","nameLocation":"110157:6:31","nodeType":"VariableDeclaration","scope":20418,"src":"110149:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20408,"name":"address","nodeType":"ElementaryTypeName","src":"110149:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20411,"mutability":"mutable","name":"msgValue","nameLocation":"110173:8:31","nodeType":"VariableDeclaration","scope":20418,"src":"110165:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20410,"name":"uint256","nodeType":"ElementaryTypeName","src":"110165:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20413,"mutability":"mutable","name":"minGas","nameLocation":"110190:6:31","nodeType":"VariableDeclaration","scope":20418,"src":"110183:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20412,"name":"uint64","nodeType":"ElementaryTypeName","src":"110183:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20415,"mutability":"mutable","name":"data","nameLocation":"110213:4:31","nodeType":"VariableDeclaration","scope":20418,"src":"110198:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20414,"name":"bytes","nodeType":"ElementaryTypeName","src":"110198:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110148:70:31"},"returnParameters":{"id":20417,"nodeType":"ParameterList","parameters":[],"src":"110227:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20432,"nodeType":"FunctionDefinition","src":"110361:127:31","nodes":[],"documentation":{"id":20419,"nodeType":"StructuredDocumentation","src":"110234:122:31","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"110370:16:31","parameters":{"id":20430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20421,"mutability":"mutable","name":"callee","nameLocation":"110395:6:31","nodeType":"VariableDeclaration","scope":20432,"src":"110387:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20420,"name":"address","nodeType":"ElementaryTypeName","src":"110387:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20423,"mutability":"mutable","name":"msgValue","nameLocation":"110411:8:31","nodeType":"VariableDeclaration","scope":20432,"src":"110403:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20422,"name":"uint256","nodeType":"ElementaryTypeName","src":"110403:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20425,"mutability":"mutable","name":"minGas","nameLocation":"110428:6:31","nodeType":"VariableDeclaration","scope":20432,"src":"110421:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20424,"name":"uint64","nodeType":"ElementaryTypeName","src":"110421:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20427,"mutability":"mutable","name":"data","nameLocation":"110451:4:31","nodeType":"VariableDeclaration","scope":20432,"src":"110436:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20426,"name":"bytes","nodeType":"ElementaryTypeName","src":"110436:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20429,"mutability":"mutable","name":"count","nameLocation":"110464:5:31","nodeType":"VariableDeclaration","scope":20432,"src":"110457:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20428,"name":"uint64","nodeType":"ElementaryTypeName","src":"110457:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"110386:84:31"},"returnParameters":{"id":20431,"nodeType":"ParameterList","parameters":[],"src":"110487:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20440,"nodeType":"FunctionDefinition","src":"110620:66:31","nodes":[],"documentation":{"id":20433,"nodeType":"StructuredDocumentation","src":"110494:121:31","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"110629:10:31","parameters":{"id":20438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20435,"mutability":"mutable","name":"callee","nameLocation":"110648:6:31","nodeType":"VariableDeclaration","scope":20440,"src":"110640:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20434,"name":"address","nodeType":"ElementaryTypeName","src":"110640:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20437,"mutability":"mutable","name":"data","nameLocation":"110671:4:31","nodeType":"VariableDeclaration","scope":20440,"src":"110656:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20436,"name":"bytes","nodeType":"ElementaryTypeName","src":"110656:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110639:37:31"},"returnParameters":{"id":20439,"nodeType":"ParameterList","parameters":[],"src":"110685:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20450,"nodeType":"FunctionDefinition","src":"110773:80:31","nodes":[],"documentation":{"id":20441,"nodeType":"StructuredDocumentation","src":"110692:76:31","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"110782:10:31","parameters":{"id":20448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20443,"mutability":"mutable","name":"callee","nameLocation":"110801:6:31","nodeType":"VariableDeclaration","scope":20450,"src":"110793:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20442,"name":"address","nodeType":"ElementaryTypeName","src":"110793:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20445,"mutability":"mutable","name":"data","nameLocation":"110824:4:31","nodeType":"VariableDeclaration","scope":20450,"src":"110809:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20444,"name":"bytes","nodeType":"ElementaryTypeName","src":"110809:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20447,"mutability":"mutable","name":"count","nameLocation":"110837:5:31","nodeType":"VariableDeclaration","scope":20450,"src":"110830:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20446,"name":"uint64","nodeType":"ElementaryTypeName","src":"110830:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"110792:51:31"},"returnParameters":{"id":20449,"nodeType":"ParameterList","parameters":[],"src":"110852:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20460,"nodeType":"FunctionDefinition","src":"110941:84:31","nodes":[],"documentation":{"id":20451,"nodeType":"StructuredDocumentation","src":"110859:77:31","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"110950:10:31","parameters":{"id":20458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20453,"mutability":"mutable","name":"callee","nameLocation":"110969:6:31","nodeType":"VariableDeclaration","scope":20460,"src":"110961:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20452,"name":"address","nodeType":"ElementaryTypeName","src":"110961:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20455,"mutability":"mutable","name":"msgValue","nameLocation":"110985:8:31","nodeType":"VariableDeclaration","scope":20460,"src":"110977:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20454,"name":"uint256","nodeType":"ElementaryTypeName","src":"110977:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20457,"mutability":"mutable","name":"data","nameLocation":"111010:4:31","nodeType":"VariableDeclaration","scope":20460,"src":"110995:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20456,"name":"bytes","nodeType":"ElementaryTypeName","src":"110995:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110960:55:31"},"returnParameters":{"id":20459,"nodeType":"ParameterList","parameters":[],"src":"111024:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20472,"nodeType":"FunctionDefinition","src":"111128:98:31","nodes":[],"documentation":{"id":20461,"nodeType":"StructuredDocumentation","src":"111031:92:31","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"111137:10:31","parameters":{"id":20470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20463,"mutability":"mutable","name":"callee","nameLocation":"111156:6:31","nodeType":"VariableDeclaration","scope":20472,"src":"111148:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20462,"name":"address","nodeType":"ElementaryTypeName","src":"111148:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20465,"mutability":"mutable","name":"msgValue","nameLocation":"111172:8:31","nodeType":"VariableDeclaration","scope":20472,"src":"111164:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20464,"name":"uint256","nodeType":"ElementaryTypeName","src":"111164:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20467,"mutability":"mutable","name":"data","nameLocation":"111197:4:31","nodeType":"VariableDeclaration","scope":20472,"src":"111182:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20466,"name":"bytes","nodeType":"ElementaryTypeName","src":"111182:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20469,"mutability":"mutable","name":"count","nameLocation":"111210:5:31","nodeType":"VariableDeclaration","scope":20472,"src":"111203:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20468,"name":"uint64","nodeType":"ElementaryTypeName","src":"111203:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"111147:69:31"},"returnParameters":{"id":20471,"nodeType":"ParameterList","parameters":[],"src":"111225:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20484,"nodeType":"FunctionDefinition","src":"111319:96:31","nodes":[],"documentation":{"id":20473,"nodeType":"StructuredDocumentation","src":"111232:82:31","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"111328:10:31","parameters":{"id":20482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20475,"mutability":"mutable","name":"callee","nameLocation":"111347:6:31","nodeType":"VariableDeclaration","scope":20484,"src":"111339:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20474,"name":"address","nodeType":"ElementaryTypeName","src":"111339:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20477,"mutability":"mutable","name":"msgValue","nameLocation":"111363:8:31","nodeType":"VariableDeclaration","scope":20484,"src":"111355:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20476,"name":"uint256","nodeType":"ElementaryTypeName","src":"111355:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20479,"mutability":"mutable","name":"gas","nameLocation":"111380:3:31","nodeType":"VariableDeclaration","scope":20484,"src":"111373:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20478,"name":"uint64","nodeType":"ElementaryTypeName","src":"111373:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20481,"mutability":"mutable","name":"data","nameLocation":"111400:4:31","nodeType":"VariableDeclaration","scope":20484,"src":"111385:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20480,"name":"bytes","nodeType":"ElementaryTypeName","src":"111385:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111338:67:31"},"returnParameters":{"id":20483,"nodeType":"ParameterList","parameters":[],"src":"111414:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20498,"nodeType":"FunctionDefinition","src":"111524:110:31","nodes":[],"documentation":{"id":20485,"nodeType":"StructuredDocumentation","src":"111421:98:31","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"111533:10:31","parameters":{"id":20496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20487,"mutability":"mutable","name":"callee","nameLocation":"111552:6:31","nodeType":"VariableDeclaration","scope":20498,"src":"111544:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20486,"name":"address","nodeType":"ElementaryTypeName","src":"111544:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20489,"mutability":"mutable","name":"msgValue","nameLocation":"111568:8:31","nodeType":"VariableDeclaration","scope":20498,"src":"111560:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20488,"name":"uint256","nodeType":"ElementaryTypeName","src":"111560:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20491,"mutability":"mutable","name":"gas","nameLocation":"111585:3:31","nodeType":"VariableDeclaration","scope":20498,"src":"111578:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20490,"name":"uint64","nodeType":"ElementaryTypeName","src":"111578:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20493,"mutability":"mutable","name":"data","nameLocation":"111605:4:31","nodeType":"VariableDeclaration","scope":20498,"src":"111590:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20492,"name":"bytes","nodeType":"ElementaryTypeName","src":"111590:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20495,"mutability":"mutable","name":"count","nameLocation":"111618:5:31","nodeType":"VariableDeclaration","scope":20498,"src":"111611:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20494,"name":"uint64","nodeType":"ElementaryTypeName","src":"111611:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"111543:81:31"},"returnParameters":{"id":20497,"nodeType":"ParameterList","parameters":[],"src":"111633:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20512,"nodeType":"FunctionDefinition","src":"111993:134:31","nodes":[],"documentation":{"id":20499,"nodeType":"StructuredDocumentation","src":"111640:348:31","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112002:19:31","parameters":{"id":20510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20501,"mutability":"mutable","name":"checkTopic0","nameLocation":"112027:11:31","nodeType":"VariableDeclaration","scope":20512,"src":"112022:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20500,"name":"bool","nodeType":"ElementaryTypeName","src":"112022:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20503,"mutability":"mutable","name":"checkTopic1","nameLocation":"112045:11:31","nodeType":"VariableDeclaration","scope":20512,"src":"112040:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20502,"name":"bool","nodeType":"ElementaryTypeName","src":"112040:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20505,"mutability":"mutable","name":"checkTopic2","nameLocation":"112063:11:31","nodeType":"VariableDeclaration","scope":20512,"src":"112058:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20504,"name":"bool","nodeType":"ElementaryTypeName","src":"112058:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20507,"mutability":"mutable","name":"checkTopic3","nameLocation":"112081:11:31","nodeType":"VariableDeclaration","scope":20512,"src":"112076:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20506,"name":"bool","nodeType":"ElementaryTypeName","src":"112076:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20509,"mutability":"mutable","name":"checkData","nameLocation":"112099:9:31","nodeType":"VariableDeclaration","scope":20512,"src":"112094:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20508,"name":"bool","nodeType":"ElementaryTypeName","src":"112094:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"112021:88:31"},"returnParameters":{"id":20511,"nodeType":"ParameterList","parameters":[],"src":"112126:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20528,"nodeType":"FunctionDefinition","src":"112230:197:31","nodes":[],"documentation":{"id":20513,"nodeType":"StructuredDocumentation","src":"112133:92:31","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112239:19:31","parameters":{"id":20526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20515,"mutability":"mutable","name":"checkTopic0","nameLocation":"112273:11:31","nodeType":"VariableDeclaration","scope":20528,"src":"112268:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20514,"name":"bool","nodeType":"ElementaryTypeName","src":"112268:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20517,"mutability":"mutable","name":"checkTopic1","nameLocation":"112299:11:31","nodeType":"VariableDeclaration","scope":20528,"src":"112294:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20516,"name":"bool","nodeType":"ElementaryTypeName","src":"112294:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20519,"mutability":"mutable","name":"checkTopic2","nameLocation":"112325:11:31","nodeType":"VariableDeclaration","scope":20528,"src":"112320:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20518,"name":"bool","nodeType":"ElementaryTypeName","src":"112320:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20521,"mutability":"mutable","name":"checkTopic3","nameLocation":"112351:11:31","nodeType":"VariableDeclaration","scope":20528,"src":"112346:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20520,"name":"bool","nodeType":"ElementaryTypeName","src":"112346:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20523,"mutability":"mutable","name":"checkData","nameLocation":"112377:9:31","nodeType":"VariableDeclaration","scope":20528,"src":"112372:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20522,"name":"bool","nodeType":"ElementaryTypeName","src":"112372:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20525,"mutability":"mutable","name":"emitter","nameLocation":"112404:7:31","nodeType":"VariableDeclaration","scope":20528,"src":"112396:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20524,"name":"address","nodeType":"ElementaryTypeName","src":"112396:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112258:159:31"},"returnParameters":{"id":20527,"nodeType":"ParameterList","parameters":[],"src":"112426:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20532,"nodeType":"FunctionDefinition","src":"112717:40:31","nodes":[],"documentation":{"id":20529,"nodeType":"StructuredDocumentation","src":"112433:279:31","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112726:19:31","parameters":{"id":20530,"nodeType":"ParameterList","parameters":[],"src":"112745:2:31"},"returnParameters":{"id":20531,"nodeType":"ParameterList","parameters":[],"src":"112756:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20538,"nodeType":"FunctionDefinition","src":"112860:55:31","nodes":[],"documentation":{"id":20533,"nodeType":"StructuredDocumentation","src":"112763:92:31","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"112869:19:31","parameters":{"id":20536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20535,"mutability":"mutable","name":"emitter","nameLocation":"112897:7:31","nodeType":"VariableDeclaration","scope":20538,"src":"112889:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20534,"name":"address","nodeType":"ElementaryTypeName","src":"112889:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112888:17:31"},"returnParameters":{"id":20537,"nodeType":"ParameterList","parameters":[],"src":"112914:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20550,"nodeType":"FunctionDefinition","src":"113254:99:31","nodes":[],"documentation":{"id":20539,"nodeType":"StructuredDocumentation","src":"112921:328:31","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113263:10:31","parameters":{"id":20548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20541,"mutability":"mutable","name":"checkTopic1","nameLocation":"113279:11:31","nodeType":"VariableDeclaration","scope":20550,"src":"113274:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20540,"name":"bool","nodeType":"ElementaryTypeName","src":"113274:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20543,"mutability":"mutable","name":"checkTopic2","nameLocation":"113297:11:31","nodeType":"VariableDeclaration","scope":20550,"src":"113292:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20542,"name":"bool","nodeType":"ElementaryTypeName","src":"113292:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20545,"mutability":"mutable","name":"checkTopic3","nameLocation":"113315:11:31","nodeType":"VariableDeclaration","scope":20550,"src":"113310:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20544,"name":"bool","nodeType":"ElementaryTypeName","src":"113310:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20547,"mutability":"mutable","name":"checkData","nameLocation":"113333:9:31","nodeType":"VariableDeclaration","scope":20550,"src":"113328:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20546,"name":"bool","nodeType":"ElementaryTypeName","src":"113328:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"113273:70:31"},"returnParameters":{"id":20549,"nodeType":"ParameterList","parameters":[],"src":"113352:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20564,"nodeType":"FunctionDefinition","src":"113456:124:31","nodes":[],"documentation":{"id":20551,"nodeType":"StructuredDocumentation","src":"113359:92:31","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113465:10:31","parameters":{"id":20562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20553,"mutability":"mutable","name":"checkTopic1","nameLocation":"113481:11:31","nodeType":"VariableDeclaration","scope":20564,"src":"113476:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20552,"name":"bool","nodeType":"ElementaryTypeName","src":"113476:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20555,"mutability":"mutable","name":"checkTopic2","nameLocation":"113499:11:31","nodeType":"VariableDeclaration","scope":20564,"src":"113494:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20554,"name":"bool","nodeType":"ElementaryTypeName","src":"113494:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20557,"mutability":"mutable","name":"checkTopic3","nameLocation":"113517:11:31","nodeType":"VariableDeclaration","scope":20564,"src":"113512:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20556,"name":"bool","nodeType":"ElementaryTypeName","src":"113512:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20559,"mutability":"mutable","name":"checkData","nameLocation":"113535:9:31","nodeType":"VariableDeclaration","scope":20564,"src":"113530:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20558,"name":"bool","nodeType":"ElementaryTypeName","src":"113530:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20561,"mutability":"mutable","name":"emitter","nameLocation":"113554:7:31","nodeType":"VariableDeclaration","scope":20564,"src":"113546:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20560,"name":"address","nodeType":"ElementaryTypeName","src":"113546:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"113475:87:31"},"returnParameters":{"id":20563,"nodeType":"ParameterList","parameters":[],"src":"113579:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20568,"nodeType":"FunctionDefinition","src":"113850:31:31","nodes":[],"documentation":{"id":20565,"nodeType":"StructuredDocumentation","src":"113586:259:31","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113859:10:31","parameters":{"id":20566,"nodeType":"ParameterList","parameters":[],"src":"113869:2:31"},"returnParameters":{"id":20567,"nodeType":"ParameterList","parameters":[],"src":"113880:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20574,"nodeType":"FunctionDefinition","src":"113984:46:31","nodes":[],"documentation":{"id":20569,"nodeType":"StructuredDocumentation","src":"113887:92:31","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"113993:10:31","parameters":{"id":20572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20571,"mutability":"mutable","name":"emitter","nameLocation":"114012:7:31","nodeType":"VariableDeclaration","scope":20574,"src":"114004:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20570,"name":"address","nodeType":"ElementaryTypeName","src":"114004:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114003:17:31"},"returnParameters":{"id":20573,"nodeType":"ParameterList","parameters":[],"src":"114029:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20588,"nodeType":"FunctionDefinition","src":"114100:113:31","nodes":[],"documentation":{"id":20575,"nodeType":"StructuredDocumentation","src":"114036:59:31","text":"Expect a given number of logs with the provided topics."},"functionSelector":"5e1d1c33","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114109:10:31","parameters":{"id":20586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20577,"mutability":"mutable","name":"checkTopic1","nameLocation":"114125:11:31","nodeType":"VariableDeclaration","scope":20588,"src":"114120:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20576,"name":"bool","nodeType":"ElementaryTypeName","src":"114120:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20579,"mutability":"mutable","name":"checkTopic2","nameLocation":"114143:11:31","nodeType":"VariableDeclaration","scope":20588,"src":"114138:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20578,"name":"bool","nodeType":"ElementaryTypeName","src":"114138:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20581,"mutability":"mutable","name":"checkTopic3","nameLocation":"114161:11:31","nodeType":"VariableDeclaration","scope":20588,"src":"114156:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20580,"name":"bool","nodeType":"ElementaryTypeName","src":"114156:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20583,"mutability":"mutable","name":"checkData","nameLocation":"114179:9:31","nodeType":"VariableDeclaration","scope":20588,"src":"114174:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20582,"name":"bool","nodeType":"ElementaryTypeName","src":"114174:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20585,"mutability":"mutable","name":"count","nameLocation":"114197:5:31","nodeType":"VariableDeclaration","scope":20588,"src":"114190:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20584,"name":"uint64","nodeType":"ElementaryTypeName","src":"114190:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114119:84:31"},"returnParameters":{"id":20587,"nodeType":"ParameterList","parameters":[],"src":"114212:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20604,"nodeType":"FunctionDefinition","src":"114307:184:31","nodes":[],"documentation":{"id":20589,"nodeType":"StructuredDocumentation","src":"114219:83:31","text":"Expect a given number of logs from a specific emitter with the provided topics."},"functionSelector":"c339d02c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114316:10:31","parameters":{"id":20602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20591,"mutability":"mutable","name":"checkTopic1","nameLocation":"114341:11:31","nodeType":"VariableDeclaration","scope":20604,"src":"114336:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20590,"name":"bool","nodeType":"ElementaryTypeName","src":"114336:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20593,"mutability":"mutable","name":"checkTopic2","nameLocation":"114367:11:31","nodeType":"VariableDeclaration","scope":20604,"src":"114362:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20592,"name":"bool","nodeType":"ElementaryTypeName","src":"114362:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20595,"mutability":"mutable","name":"checkTopic3","nameLocation":"114393:11:31","nodeType":"VariableDeclaration","scope":20604,"src":"114388:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20594,"name":"bool","nodeType":"ElementaryTypeName","src":"114388:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20597,"mutability":"mutable","name":"checkData","nameLocation":"114419:9:31","nodeType":"VariableDeclaration","scope":20604,"src":"114414:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20596,"name":"bool","nodeType":"ElementaryTypeName","src":"114414:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20599,"mutability":"mutable","name":"emitter","nameLocation":"114446:7:31","nodeType":"VariableDeclaration","scope":20604,"src":"114438:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20598,"name":"address","nodeType":"ElementaryTypeName","src":"114438:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20601,"mutability":"mutable","name":"count","nameLocation":"114470:5:31","nodeType":"VariableDeclaration","scope":20604,"src":"114463:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20600,"name":"uint64","nodeType":"ElementaryTypeName","src":"114463:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114326:155:31"},"returnParameters":{"id":20603,"nodeType":"ParameterList","parameters":[],"src":"114490:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20610,"nodeType":"FunctionDefinition","src":"114575:43:31","nodes":[],"documentation":{"id":20605,"nodeType":"StructuredDocumentation","src":"114497:73:31","text":"Expect a given number of logs with all topic and data checks enabled."},"functionSelector":"4c74a335","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114584:10:31","parameters":{"id":20608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20607,"mutability":"mutable","name":"count","nameLocation":"114602:5:31","nodeType":"VariableDeclaration","scope":20610,"src":"114595:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20606,"name":"uint64","nodeType":"ElementaryTypeName","src":"114595:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114594:14:31"},"returnParameters":{"id":20609,"nodeType":"ParameterList","parameters":[],"src":"114617:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20618,"nodeType":"FunctionDefinition","src":"114726:60:31","nodes":[],"documentation":{"id":20611,"nodeType":"StructuredDocumentation","src":"114624:97:31","text":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"functionSelector":"b43aece3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"114735:10:31","parameters":{"id":20616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20613,"mutability":"mutable","name":"emitter","nameLocation":"114754:7:31","nodeType":"VariableDeclaration","scope":20618,"src":"114746:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20612,"name":"address","nodeType":"ElementaryTypeName","src":"114746:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20615,"mutability":"mutable","name":"count","nameLocation":"114770:5:31","nodeType":"VariableDeclaration","scope":20618,"src":"114763:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20614,"name":"uint64","nodeType":"ElementaryTypeName","src":"114763:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"114745:31:31"},"returnParameters":{"id":20617,"nodeType":"ParameterList","parameters":[],"src":"114785:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20624,"nodeType":"FunctionDefinition","src":"114864:57:31","nodes":[],"documentation":{"id":20619,"nodeType":"StructuredDocumentation","src":"114792:67:31","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"114873:19:31","parameters":{"id":20622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20621,"mutability":"mutable","name":"revertData","nameLocation":"114900:10:31","nodeType":"VariableDeclaration","scope":20624,"src":"114893:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20620,"name":"bytes4","nodeType":"ElementaryTypeName","src":"114893:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"114892:19:31"},"returnParameters":{"id":20623,"nodeType":"ParameterList","parameters":[],"src":"114920:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20632,"nodeType":"FunctionDefinition","src":"115020:75:31","nodes":[],"documentation":{"id":20625,"nodeType":"StructuredDocumentation","src":"114927:88:31","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"115029:19:31","parameters":{"id":20630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20627,"mutability":"mutable","name":"revertData","nameLocation":"115056:10:31","nodeType":"VariableDeclaration","scope":20632,"src":"115049:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20626,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115049:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20629,"mutability":"mutable","name":"reverter","nameLocation":"115076:8:31","nodeType":"VariableDeclaration","scope":20632,"src":"115068:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20628,"name":"address","nodeType":"ElementaryTypeName","src":"115068:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"115048:37:31"},"returnParameters":{"id":20631,"nodeType":"ParameterList","parameters":[],"src":"115094:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20636,"nodeType":"FunctionDefinition","src":"115161:33:31","nodes":[],"documentation":{"id":20633,"nodeType":"StructuredDocumentation","src":"115101:55:31","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115170:12:31","parameters":{"id":20634,"nodeType":"ParameterList","parameters":[],"src":"115182:2:31"},"returnParameters":{"id":20635,"nodeType":"ParameterList","parameters":[],"src":"115193:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20642,"nodeType":"FunctionDefinition","src":"115276:50:31","nodes":[],"documentation":{"id":20637,"nodeType":"StructuredDocumentation","src":"115200:71:31","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115285:12:31","parameters":{"id":20640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20639,"mutability":"mutable","name":"revertData","nameLocation":"115305:10:31","nodeType":"VariableDeclaration","scope":20642,"src":"115298:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20638,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115298:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"115297:19:31"},"returnParameters":{"id":20641,"nodeType":"ParameterList","parameters":[],"src":"115325:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20652,"nodeType":"FunctionDefinition","src":"115454:82:31","nodes":[],"documentation":{"id":20643,"nodeType":"StructuredDocumentation","src":"115332:117:31","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"functionSelector":"b0762d73","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115463:12:31","parameters":{"id":20650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20645,"mutability":"mutable","name":"revertData","nameLocation":"115483:10:31","nodeType":"VariableDeclaration","scope":20652,"src":"115476:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20644,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115476:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20647,"mutability":"mutable","name":"reverter","nameLocation":"115503:8:31","nodeType":"VariableDeclaration","scope":20652,"src":"115495:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20646,"name":"address","nodeType":"ElementaryTypeName","src":"115495:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20649,"mutability":"mutable","name":"count","nameLocation":"115520:5:31","nodeType":"VariableDeclaration","scope":20652,"src":"115513:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20648,"name":"uint64","nodeType":"ElementaryTypeName","src":"115513:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115475:51:31"},"returnParameters":{"id":20651,"nodeType":"ParameterList","parameters":[],"src":"115535:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20662,"nodeType":"FunctionDefinition","src":"115672:90:31","nodes":[],"documentation":{"id":20653,"nodeType":"StructuredDocumentation","src":"115542:125:31","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"functionSelector":"d345fb1f","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115681:12:31","parameters":{"id":20660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20655,"mutability":"mutable","name":"revertData","nameLocation":"115709:10:31","nodeType":"VariableDeclaration","scope":20662,"src":"115694:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20654,"name":"bytes","nodeType":"ElementaryTypeName","src":"115694:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20657,"mutability":"mutable","name":"reverter","nameLocation":"115729:8:31","nodeType":"VariableDeclaration","scope":20662,"src":"115721:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20656,"name":"address","nodeType":"ElementaryTypeName","src":"115721:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20659,"mutability":"mutable","name":"count","nameLocation":"115746:5:31","nodeType":"VariableDeclaration","scope":20662,"src":"115739:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20658,"name":"uint64","nodeType":"ElementaryTypeName","src":"115739:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"115693:59:31"},"returnParameters":{"id":20661,"nodeType":"ParameterList","parameters":[],"src":"115761:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20668,"nodeType":"FunctionDefinition","src":"115844:58:31","nodes":[],"documentation":{"id":20663,"nodeType":"StructuredDocumentation","src":"115768:71:31","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115853:12:31","parameters":{"id":20666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20665,"mutability":"mutable","name":"revertData","nameLocation":"115881:10:31","nodeType":"VariableDeclaration","scope":20668,"src":"115866:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20664,"name":"bytes","nodeType":"ElementaryTypeName","src":"115866:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"115865:27:31"},"returnParameters":{"id":20667,"nodeType":"ParameterList","parameters":[],"src":"115901:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20674,"nodeType":"FunctionDefinition","src":"115988:49:31","nodes":[],"documentation":{"id":20669,"nodeType":"StructuredDocumentation","src":"115908:75:31","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"115997:12:31","parameters":{"id":20672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20671,"mutability":"mutable","name":"reverter","nameLocation":"116018:8:31","nodeType":"VariableDeclaration","scope":20674,"src":"116010:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20670,"name":"address","nodeType":"ElementaryTypeName","src":"116010:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116009:18:31"},"returnParameters":{"id":20673,"nodeType":"ParameterList","parameters":[],"src":"116036:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20682,"nodeType":"FunctionDefinition","src":"116126:68:31","nodes":[],"documentation":{"id":20675,"nodeType":"StructuredDocumentation","src":"116043:78:31","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116135:12:31","parameters":{"id":20680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20677,"mutability":"mutable","name":"revertData","nameLocation":"116155:10:31","nodeType":"VariableDeclaration","scope":20682,"src":"116148:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20676,"name":"bytes4","nodeType":"ElementaryTypeName","src":"116148:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20679,"mutability":"mutable","name":"reverter","nameLocation":"116175:8:31","nodeType":"VariableDeclaration","scope":20682,"src":"116167:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20678,"name":"address","nodeType":"ElementaryTypeName","src":"116167:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116147:37:31"},"returnParameters":{"id":20681,"nodeType":"ParameterList","parameters":[],"src":"116193:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20690,"nodeType":"FunctionDefinition","src":"116299:76:31","nodes":[],"documentation":{"id":20683,"nodeType":"StructuredDocumentation","src":"116200:94:31","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116308:12:31","parameters":{"id":20688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20685,"mutability":"mutable","name":"revertData","nameLocation":"116336:10:31","nodeType":"VariableDeclaration","scope":20690,"src":"116321:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20684,"name":"bytes","nodeType":"ElementaryTypeName","src":"116321:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20687,"mutability":"mutable","name":"reverter","nameLocation":"116356:8:31","nodeType":"VariableDeclaration","scope":20690,"src":"116348:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20686,"name":"address","nodeType":"ElementaryTypeName","src":"116348:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116320:45:31"},"returnParameters":{"id":20689,"nodeType":"ParameterList","parameters":[],"src":"116374:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20696,"nodeType":"FunctionDefinition","src":"116483:45:31","nodes":[],"documentation":{"id":20691,"nodeType":"StructuredDocumentation","src":"116381:97:31","text":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"functionSelector":"4ee38244","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116492:12:31","parameters":{"id":20694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20693,"mutability":"mutable","name":"count","nameLocation":"116512:5:31","nodeType":"VariableDeclaration","scope":20696,"src":"116505:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20692,"name":"uint64","nodeType":"ElementaryTypeName","src":"116505:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116504:14:31"},"returnParameters":{"id":20695,"nodeType":"ParameterList","parameters":[],"src":"116527:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20704,"nodeType":"FunctionDefinition","src":"116630:64:31","nodes":[],"documentation":{"id":20697,"nodeType":"StructuredDocumentation","src":"116534:91:31","text":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"functionSelector":"e45ca72d","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116639:12:31","parameters":{"id":20702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20699,"mutability":"mutable","name":"revertData","nameLocation":"116659:10:31","nodeType":"VariableDeclaration","scope":20704,"src":"116652:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20698,"name":"bytes4","nodeType":"ElementaryTypeName","src":"116652:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20701,"mutability":"mutable","name":"count","nameLocation":"116678:5:31","nodeType":"VariableDeclaration","scope":20704,"src":"116671:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20700,"name":"uint64","nodeType":"ElementaryTypeName","src":"116671:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116651:33:31"},"returnParameters":{"id":20703,"nodeType":"ParameterList","parameters":[],"src":"116693:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20712,"nodeType":"FunctionDefinition","src":"116804:72:31","nodes":[],"documentation":{"id":20705,"nodeType":"StructuredDocumentation","src":"116700:99:31","text":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"functionSelector":"4994c273","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116813:12:31","parameters":{"id":20710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20707,"mutability":"mutable","name":"revertData","nameLocation":"116841:10:31","nodeType":"VariableDeclaration","scope":20712,"src":"116826:25:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20706,"name":"bytes","nodeType":"ElementaryTypeName","src":"116826:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20709,"mutability":"mutable","name":"count","nameLocation":"116860:5:31","nodeType":"VariableDeclaration","scope":20712,"src":"116853:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20708,"name":"uint64","nodeType":"ElementaryTypeName","src":"116853:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116825:41:31"},"returnParameters":{"id":20711,"nodeType":"ParameterList","parameters":[],"src":"116875:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20720,"nodeType":"FunctionDefinition","src":"116977:63:31","nodes":[],"documentation":{"id":20713,"nodeType":"StructuredDocumentation","src":"116882:90:31","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"functionSelector":"1ff5f952","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"116986:12:31","parameters":{"id":20718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20715,"mutability":"mutable","name":"reverter","nameLocation":"117007:8:31","nodeType":"VariableDeclaration","scope":20720,"src":"116999:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20714,"name":"address","nodeType":"ElementaryTypeName","src":"116999:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20717,"mutability":"mutable","name":"count","nameLocation":"117024:5:31","nodeType":"VariableDeclaration","scope":20720,"src":"117017:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20716,"name":"uint64","nodeType":"ElementaryTypeName","src":"117017:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"116998:32:31"},"returnParameters":{"id":20719,"nodeType":"ParameterList","parameters":[],"src":"117039:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20728,"nodeType":"FunctionDefinition","src":"117269:59:31","nodes":[],"documentation":{"id":20721,"nodeType":"StructuredDocumentation","src":"117046:218:31","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"117278:16:31","parameters":{"id":20726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20723,"mutability":"mutable","name":"min","nameLocation":"117302:3:31","nodeType":"VariableDeclaration","scope":20728,"src":"117295:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20722,"name":"uint64","nodeType":"ElementaryTypeName","src":"117295:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20725,"mutability":"mutable","name":"max","nameLocation":"117314:3:31","nodeType":"VariableDeclaration","scope":20728,"src":"117307:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20724,"name":"uint64","nodeType":"ElementaryTypeName","src":"117307:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117294:24:31"},"returnParameters":{"id":20727,"nodeType":"ParameterList","parameters":[],"src":"117327:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20736,"nodeType":"FunctionDefinition","src":"117570:63:31","nodes":[],"documentation":{"id":20729,"nodeType":"StructuredDocumentation","src":"117334:231:31","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"117579:20:31","parameters":{"id":20734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20731,"mutability":"mutable","name":"min","nameLocation":"117607:3:31","nodeType":"VariableDeclaration","scope":20736,"src":"117600:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20730,"name":"uint64","nodeType":"ElementaryTypeName","src":"117600:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20733,"mutability":"mutable","name":"max","nameLocation":"117619:3:31","nodeType":"VariableDeclaration","scope":20736,"src":"117612:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20732,"name":"uint64","nodeType":"ElementaryTypeName","src":"117612:6:31","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"117599:24:31"},"returnParameters":{"id":20735,"nodeType":"ParameterList","parameters":[],"src":"117632:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20742,"nodeType":"FunctionDefinition","src":"117715:38:31","nodes":[],"documentation":{"id":20737,"nodeType":"StructuredDocumentation","src":"117639:71:31","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"117724:4:31","parameters":{"id":20740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20739,"mutability":"mutable","name":"skipTest","nameLocation":"117734:8:31","nodeType":"VariableDeclaration","scope":20742,"src":"117729:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20738,"name":"bool","nodeType":"ElementaryTypeName","src":"117729:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"117728:15:31"},"returnParameters":{"id":20741,"nodeType":"ParameterList","parameters":[],"src":"117752:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20750,"nodeType":"FunctionDefinition","src":"117849:62:31","nodes":[],"documentation":{"id":20743,"nodeType":"StructuredDocumentation","src":"117759:85:31","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"117858:4:31","parameters":{"id":20748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20745,"mutability":"mutable","name":"skipTest","nameLocation":"117868:8:31","nodeType":"VariableDeclaration","scope":20750,"src":"117863:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20744,"name":"bool","nodeType":"ElementaryTypeName","src":"117863:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20747,"mutability":"mutable","name":"reason","nameLocation":"117894:6:31","nodeType":"VariableDeclaration","scope":20750,"src":"117878:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20746,"name":"string","nodeType":"ElementaryTypeName","src":"117878:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"117862:39:31"},"returnParameters":{"id":20749,"nodeType":"ParameterList","parameters":[],"src":"117910:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20754,"nodeType":"FunctionDefinition","src":"117986:41:31","nodes":[],"documentation":{"id":20751,"nodeType":"StructuredDocumentation","src":"117917:64:31","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"117995:20:31","parameters":{"id":20752,"nodeType":"ParameterList","parameters":[],"src":"118015:2:31"},"returnParameters":{"id":20753,"nodeType":"ParameterList","parameters":[],"src":"118026:0:31"},"scope":20755,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":19740,"name":"VmSafe","nameLocations":["93071:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":19738,"src":"93071:6:31"},"id":19741,"nodeType":"InheritanceSpecifier","src":"93071:6:31"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":19739,"nodeType":"StructuredDocumentation","src":"92884:171:31","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[20755,19738],"name":"Vm","nameLocation":"93065:2:31","scope":20756,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":31}